binary-debuggable-source
0000 0000 f storch.z
0000 0000 s ;
0000 0000 s ; storch.z - stereo orchestra 85/90 organ
0000 0000 s ;
0000 0000 s ; Upper two keyboard rows are the right channel:
0000 0000 s ;     _____ _____       _____ _____ _____       _____ _____
0000 0000 s ;    | c'# | d'# |     | f'# | g'# | a'# |     | c''#| d''#|
0000 0000 s ;  __|__2__|__3__|_____|__5__|__6__|__7__|_____|__9__|__0__|__ _____
0000 0000 s ; |  c' |  d' |  e' |  f' |  g' |  a' |  b' | c'' | d'' | e'' | f'' |
0000 0000 s ; |__Q__|__W__|__E__|__R__|__T__|__Y__|__U__|__I__|__O__|__P__|__@__|
0000 0000 s ;
0000 0000 s ; 1 switches right channel waveform (sine, square, triangle, saw)
0000 0000 s ;
0000 0000 s ; Lower two keyboard rows are the left channel:
0000 0000 s ;     _____ _____       _____ _____ _____       _____ _____
0000 0000 s ;    |  c# |  d# |     |  f# |  g# |  a# |     | c'# | d'# |
0000 0000 s ;  __|__S__|__D__|_____|__G__|__H__|__J__|_____|__L__|__;__|__ 
0000 0000 s ; |  c  |  d  |  e  |  f  |  g  |  a  |  b  | c'  | d'  | e'  |
0000 0000 s ; |__Z__|__X__|__C__|__V__|__B__|__N__|__M__|__,__|__.__|__/__|
0000 0000 s ;
0000 0000 s ; A switches left channel waveform (sine, square, triangle, saw)
0000 0000 s ;
0000 0000 s ; Up/Down arrows change left volume.
0000 0000 s ; Left/Right arrows change right volume.
0000 0000 s ; Volume goes from 1/16 to 16/16.
0000 0000 s ;
0000 0000 s ; Current sample output rate on each channel is:
0000 0000 s ;	Model 1		13,440 Hz (1774080 / sampcyc)
0000 0000 s ;	Model 3,4	15,360 Hz (2027520 / sampcyc)
0000 0000 s ;
0000 0000 s ; Requires 32K memory or 16K without volume control.
0000 0000 s ;
0000 0000 s ; Equate havevol to 0 for program without volume control.
0000 0000 s ;
0000 0000 s ; TODO:
0000 0000 s ;	model 4 high speed support with all wait state possibilities.
0000 0000 s ;	heartbeat line (maybe vaguely show output waveform)?
0000 0000 s ;		video waits might make it distorting on Model 4
0000 0000 s 
0000 0000 s havevol	equ	1
0000 0000 s 
5200 5200 s 	org	$5200
5200 5200 s stack:
5200 5200 d 20204d6f64656c2078204f7263686573747261203835204f7267616e2062792047656f726765205068696c6c6970732c204465632e2031382c20323032342020
5200 5200 u 40 02
5200 5200 s splash:	ascii   "  Model x Orchestra 85 Organ by George Phillips, Dec. 18, 2024  "
5240 5240 s    if havevol
5240 5240 d 20206c65667420766f6c756d65202d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d2d20726967687420766f6c756d652020
5240 5240 u 40 02
5240 5240 s 	ascii   "  left volume ----------------------------------- right volume  "
5280 5280 s    else
5280 5280 s 	ascii   " -------------------------------------------------------------- "
5280 5280 s    endif
5280 5280 d 20202020205f5f5f2020202020202520202020202020202025202020202020202020252020202020202020202025202020202020202020202020202020202020
5280 5280 u 40 02
5280 5280 s 	ascii	"     ___      %         %         %          %                  "
52c0 52c0 d 202020207c5f315f7c2020202073696e652020202020737175617265202020747269616e676c65202020736177746f6f74682020202020202020202020202020
52c0 52c0 u 40 02
52c0 52c0 s 	ascii	"    |_1_|    sine     square   triangle   sawtooth              "
5300 5300 d 202020205f5f5f5f5f205f5f5f5f5f20202020205f5f5f5f5f205f5f5f5f5f205f5f5f5f5f202020202020205f5f5f5f5f205f5f5f5f5f202020202020202020
5300 5300 u 40 02
5300 5300 s 	ascii   "    _____ _____     _____ _____ _____       _____ _____         "
5340 5340 d 2020207c2a632723207c2a6427237c202020207c2a662723207c2a672723207c2a612723207c20202020207c2a632727237c2a642727237c2020202020202020
5340 5340 u 40 02
5340 5340 s 	ascii   "   |*c'# |*d'#|    |*f'# |*g'# |*a'# |     |*c''#|*d''#|        "
5380 5380 d 20205f7c5f5f325f5f7c5f5f335f7c5f5f5f5f7c5f5f355f5f7c5f5f365f5f7c5f5f375f5f7c5f5f5f5f5f7c5f5f395f5f7c5f5f305f5f7c5f205f5f5f5f2020
5380 5380 u 40 02
5380 5380 s 	ascii   "  _|__2__|__3_|____|__5__|__6__|__7__|_____|__9__|__0__|_ ____  "
53c0 53c0 d 207c2a63277c2a206427207c2a6527207c2a6627207c2a206727207c2a206127207c2a206227207c2a632727207c2a642727207c2a652727207c2a6627277c20
53c0 53c0 u 40 02
53c0 53c0 s 	ascii   " |*c'|* d' |*e' |*f' |* g' |* a' |* b' |*c'' |*d'' |*e'' |*f''| "
5400 5400 d 207c5f515f7c5f5f575f5f7c5f455f5f7c5f525f5f7c5f5f545f5f7c5f5f595f5f7c5f5f555f5f7c5f5f495f5f7c5f5f4f5f5f7c5f5f505f5f7c5f5f405f7c20
5400 5400 u 40 02
5400 5400 s 	ascii   " |_Q_|__W__|_E__|_R__|__T__|__Y__|__U__|__I__|__O__|__P__|__@_| "
5440 5440 d 20202020205f5f5f5f5f205f5f5f5f5f202020202020205f5f5f5f5f205f5f5f5f5f205f5f5f5f5f202020202020205f5f5f5f5f205f5f5f5f5f202020202020
5440 5440 u 40 02
5440 5440 s 	ascii   "     _____ _____       _____ _____ _____       _____ _____      "
5480 5480 d 202020207c2a206323207c2a206423207c20202020207c2a206623207c2a206723207c2a206123207c20202020207c2a632723207c2a642723207c2020202020
5480 5480 u 40 02
5480 5480 s 	ascii	"    |* c# |* d# |     |* f# |* g# |* a# |     |*c'# |*d'# |     "
54c0 54c0 d 2020205f7c5f5f535f5f7c5f5f445f5f7c5f5f5f5f5f7c5f5f475f5f7c5f5f485f5f7c5f5f4a5f5f7c5f5f5f5f5f7c5f5f4c5f5f7c5f5f3b5f5f7c5f20202020
54c0 54c0 u 40 02
54c0 54c0 s 	ascii   "   _|__S__|__D__|_____|__G__|__H__|__J__|_____|__L__|__;__|_    "
5500 5500 d 20207c2a63207c2a206420207c2a206520207c2a206620207c2a206720207c2a206120207c2a206220207c2a632720207c2a642720207c2a652720207c202020
5500 5500 u 40 02
5500 5500 s 	ascii   "  |*c |* d  |* e  |* f  |* g  |* a  |* b  |*c'  |*d'  |*e'  |   " 
5540 5540 d 20207c5f5a5f7c5f5f585f5f7c5f5f435f5f7c5f5f565f5f7c5f5f425f5f7c5f5f4e5f5f7c5f5f4d5f5f7c5f5f2c5f5f7c5f5f2e5f5f7c5f5f2f5f5f7c202020
5540 5540 u 40 02
5540 5540 s 	ascii	"  |_Z_|__X__|__C__|__V__|__B__|__N__|__M__|__,__|__.__|__/__|   "
5580 5580 d 202020202020205f5f5f2020202073696e652020202020737175617265202020747269616e676c65202020736177746f6f746820202020202020202020202020
5580 5580 u 40 02
5580 5580 s 	ascii	"       ___    sine     square   triangle   sawtooth             "
55c0 55c0 d 2020202020207c5f415f7c2020202020252020202020202020202520202020202020202025202020202020202020202520202020202020202020202020202020
55c0 55c0 u 40 02
55c0 55c0 s 	ascii	"      |_A_|     %         %         %          %                "
5600 5600 d 00
5600 5600 u 01 02
5600 5600 s 	ascii	0
5601 5601 s 
5601 5601 s start:
5601 5601 d f3
5601 5601 u 01 01
5601 5601 s 	di
5602 5602 d 310052
5602 5602 u 03 01
5602 5602 s 	ld	sp,stack	; only used during initialization
5605 5605 s 
5605 5605 d af
5605 5605 u 01 01
5605 5605 s 	xor	a
5606 5606 d d384
5606 5606 u 02 01
5606 5606 s 	out	($84),a		; Model 3 memory map for Model 4
5608 5608 s 
5608 5608 s ; Detect Model 1, 3 or 4
5608 5608 d dbff
5608 5608 u 02 01
5608 5608 s 	in	a,(0ffh)	; read OUTMOD latches
560a 560a d 47
560a 560a u 01 01
560a 560a s 	ld	b,a		; save original settings
560b 560b d 0e60
560b 560b u 02 01
560b 560b s 	ld	c,60h
560d 560d d a9
560d 560d u 01 01
560d 560d s 	xor	c		; invert CPU Fast, DISWAIT
560e 560e d d3ec
560e 560e u 02 01
560e 560e s 	out	(0ech),a	; set latches
5610 5610 d dbff
5610 5610 u 02 01
5610 5610 s 	in	a,(0ffh)	; read latches
5612 5612 d a9
5612 5612 u 01 01
5612 5612 s 	xor	c		; flip to original value
5613 5613 d a8
5613 5613 u 01 01
5613 5613 s 	xor	b		; compare against original
5614 5614 d 0eec
5614 5614 u 02 01
5614 5614 s 	ld	c,0ech
5616 5616 d ed41
5616 5616 u 02 01
5616 5616 s 	out	(c),b		; restore original settings
5618 5618 d 07
5618 5618 u 01 01
5618 5618 s 	rlca
5619 5619 d 07
5619 5619 u 01 01
5619 5619 s 	rlca
561a 561a d 3009
561a 561a u 02 01
561a 561a s 	jr	nc,.ism4	; CPU Fast unchanged, must be Model 4
561c 561c d 07
561c 561c u 01 01
561c 561c s 	rlca
561d 561d d 3e33
561d 561d u 02 01
561d 561d s 	ld	a,'3'
561f 561f d 3006
561f 561f u 02 01
561f 561f s 	jr	nc,.mdone	; DISWAIT same, Model III
5621 5621 d 3e31
5621 5621 u 02 01
5621 5621 s 	ld	a,'1'		; otherwise, it's a Model I
5623 5623 d 1802
5623 5623 u 02 01
5623 5623 s 	jr	.mdone
5625 5625 d 3e34
5625 5625 u 02 01
5625 5625 s .ism4:	ld	a,'4'
5627 5627 s .mdone:
5627 5627 s 
5627 5627 d 320852
5627 5627 u 03 01
5627 5627 s 	ld	(splash+8),a
562a 562a d fe31
562a 562a u 02 01
562a 562a s 	cp	'1'
562c 562c d 280b
562c 562c u 02 01
562c 562c s 	jr	z,not34
562e 562e s 
562e 562e s 	; Say we're for Orchestra 90
562e 562e d 213930
562e 562e u 03 01
562e 562e s 	ld	hl,'90'
5631 5631 d 221452
5631 5631 u 03 01
5631 5631 s 	ld	(splash+20),hl
5634 5634 s 
5634 5634 s 	; Don't skip the Model 3 patching
5634 5634 d 3e01
5634 5634 u 02 01
5634 5634 s 	ld	a,1		; "ld bc,nn" opcode
5636 5636 d 327e57
5636 5636 u 03 01
5636 5636 s 	ld	(patch_skip),a
5639 5639 s 
5639 5639 s not34:
5639 5639 d 210052
5639 5639 u 03 01
5639 5639 s 	ld	hl,splash
563c 563c d 11003c
563c 563c u 03 01
563c 563c s 	ld	de,$3c00
563f 563f d af
563f 563f u 01 01
563f 563f s 	xor	a
5640 5640 d 08
5640 5640 u 01 01
5640 5640 s 	ex	af,af'
5641 5641 d fd213067
5641 5641 u 04 01
5641 5641 s 	ld	iy,wave_ind
5645 5645 d 7e
5645 5645 u 01 01
5645 5645 s splp:	ld	a,(hl)		; eh, we'll assume first byte not special
5646 5646 d fe7c
5646 5646 u 02 01
5646 5646 s 	cp	'|'
5648 5648 d 1803
5648 5648 u 02 01
5648 5648 s barx:	jr	nobar		; by default we don't translate '|' -> '!'
564a 564a d 3e21
564a 564a u 02 01
564a 564a s 	ld	a,'!'
564c 564c d 77
564c 564c u 01 01
564c 564c s 	ld	(hl),a
564d 564d d 12
564d 564d u 01 01
564d 564d s nobar:	ld	(de),a
564e 564e d eb
564e 564e u 01 01
564e 564e s 	ex	de,hl
564f 564f d be
564f 564f u 01 01
564f 564f s 	cp	(hl)
5650 5650 d 2807
5650 5650 u 02 01
5650 5650 s 	jr	z,charok
5652 5652 d cbae
5652 5652 u 02 01
5652 5652 s 	res	5,(hl)
5654 5654 s 	; no lower case; enable bar translation
5654 5654 d 3e20
5654 5654 u 02 01
5654 5654 s 	ld	a,$20		; "jr nz" opcode
5656 5656 d 324856
5656 5656 u 03 01
5656 5656 s 	ld	(barx),a
5659 5659 d eb
5659 5659 u 01 01
5659 5659 s charok:	ex	de,hl
565a 565a d 23
565a 565a u 01 01
565a 565a s 	inc	hl
565b 565b d 13
565b 565b u 01 01
565b 565b s 	inc	de
565c 565c d 7e
565c 565c u 01 01
565c 565c s 	ld	a,(hl)
565d 565d d b7
565d 565d u 01 01
565d 565d s 	or	a
565e 565e d 2837
565e 565e u 02 01
565e 565e s 	jr	z,spdn
5660 5660 d fe2a
5660 5660 u 02 01
5660 5660 s 	cp	'*'
5662 5662 d 2812
5662 5662 u 02 01
5662 5662 s 	jr	z,star
5664 5664 d fe25
5664 5664 u 02 01
5664 5664 s 	cp	'%'
5666 5666 d 20dd
5666 5666 u 02 01
5666 5666 s 	jr	nz,splp
5668 5668 s 
5668 5668 d 3620
5668 5668 u 02 01
5668 5668 s 	ld	(hl),' '
566a 566a d fd7300
566a 566a u 03 01
566a 566a s 	ld	(iy),e
566d 566d d fd7201
566d 566d u 03 01
566d 566d s 	ld	(iy+1),d
5670 5670 d fd23
5670 5670 u 02 01
5670 5670 s 	inc	iy
5672 5672 d fd23
5672 5672 u 02 01
5672 5672 s 	inc	iy
5674 5674 s 
5674 5674 d 18cf
5674 5674 u 02 01
5674 5674 s 	jr	splp
5676 5676 s 
5676 5676 d dd21dd65
5676 5676 u 04 01
5676 5676 s star:	ld	ix,param_tab-6
567a 567a d 010600
567a 567a u 03 01
567a 567a s 	ld	bc,6
567d 567d d 08
567d 567d u 01 01
567d 567d s 	ex	af,af'
567e 567e d dd09
567e 567e u 02 01
567e 567e s look:	add	ix,bc
5680 5680 d ddcb057e
5680 5680 u 04 01
5680 5680 s 	bit	7,(ix+5)
5684 5684 d 28f8
5684 5684 u 02 01
5684 5684 s 	jr	z,look
5686 5686 d ddbe04
5686 5686 u 03 01
5686 5686 s 	cp	(ix+4)
5689 5689 d 20f3
5689 5689 u 02 01
5689 5689 s 	jr	nz,look
568b 568b d 3c
568b 568b u 01 01
568b 568b s 	inc	a
568c 568c d 08
568c 568c u 01 01
568c 568c s 	ex	af,af'
568d 568d d dd7304
568d 568d u 03 01
568d 568d s 	ld	(ix+4),e
5690 5690 d dd7205
5690 5690 u 03 01
5690 5690 s 	ld	(ix+5),d
5693 5693 d 3620
5693 5693 u 02 01
5693 5693 s 	ld	(hl),' '
5695 5695 d 18ae
5695 5695 u 02 01
5695 5695 s 	jr	splp
5697 5697 s 
5697 5697 d eb
5697 5697 u 01 01
5697 5697 s spdn:	ex	de,hl
5698 5698 d cb74
5698 5698 u 02 01
5698 5698 s clr:	bit	6,h
569a 569a d 2005
569a 569a u 02 01
569a 569a s 	jr	nz,clrdn
569c 569c d 3620
569c 569c u 02 01
569c 569c s 	ld	(hl),' '
569e 569e d 23
569e 569e u 01 01
569e 569e s 	inc	hl
569f 569f d 18f7
569f 569f u 02 01
569f 569f s 	jr	clr
56a1 56a1 s clrdn:
56a1 56a1 s 
56a1 56a1 s meter_l	equ	128+1+4+16
56a1 56a1 s meter_r	equ	128+2+8+32
56a1 56a1 s 
56a1 56a1 s    if havevol
56a1 56a1 s 	; Draw initial volume indicators
56a1 56a1 d dd21003c
56a1 56a1 u 04 01
56a1 56a1 s 	ld	ix,$3c00
56a5 56a5 d 0610
56a5 56a5 u 02 01
56a5 56a5 s 	ld	b,16
56a7 56a7 d 114000
56a7 56a7 u 03 01
56a7 56a7 s 	ld	de,64
56aa 56aa d dd360095
56aa 56aa u 04 01
56aa 56aa s vollp:	ld	(ix),meter_l
56ae 56ae d dd363faa
56ae 56ae u 04 01
56ae 56ae s 	ld	(ix+63),meter_r
56b2 56b2 d dd19
56b2 56b2 u 02 01
56b2 56b2 s 	add	ix,de
56b4 56b4 d 10f4
56b4 56b4 u 02 01
56b4 56b4 s 	djnz	vollp
56b6 56b6 s 
56b6 56b6 s banksz	equ	4*256
56b6 56b6 s 
56b6 56b6 s vol_16	equ	wavebnk+0*banksz
56b6 56b6 s vol_15	equ	wavebnk+1*banksz
56b6 56b6 s vol_14	equ	wavebnk+2*banksz
56b6 56b6 s vol_13	equ	wavebnk+3*banksz
56b6 56b6 s vol_12	equ	wavebnk+4*banksz
56b6 56b6 s vol_11	equ	wavebnk+5*banksz
56b6 56b6 s vol_10	equ	wavebnk+6*banksz
56b6 56b6 s vol_9	equ	wavebnk+7*banksz
56b6 56b6 s vol_8	equ	wavebnk+8*banksz
56b6 56b6 s vol_7	equ	wavebnk+9*banksz
56b6 56b6 s vol_6	equ	wavebnk+10*banksz
56b6 56b6 s vol_5	equ	wavebnk+11*banksz
56b6 56b6 s vol_4	equ	wavebnk+12*banksz
56b6 56b6 s vol_3	equ	wavebnk+13*banksz
56b6 56b6 s vol_2	equ	wavebnk+14*banksz
56b6 56b6 s vol_1	equ	wavebnk+15*banksz
56b6 56b6 s 
56b6 56b6 s 	; Create other volume levels.
56b6 56b6 s 	; Wouldn't kill me to work out some loops here.
56b6 56b6 d 210080
56b6 56b6 u 03 01
56b6 56b6 s 	ld	hl,vol_16
56b9 56b9 d 1100a0
56b9 56b9 u 03 01
56b9 56b9 s 	ld	de,vol_8	; 1/2 volume
56bc 56bc d cdc265
56bc 56bc u 03 01
56bc 56bc s 	call	div2
56bf 56bf s 
56bf 56bf d 2100a0
56bf 56bf u 03 01
56bf 56bf s 	ld	hl,vol_8
56c2 56c2 d 1100b0
56c2 56c2 u 03 01
56c2 56c2 s 	ld	de,vol_4	; 1/4 volume
56c5 56c5 d cdc265
56c5 56c5 u 03 01
56c5 56c5 s 	call	div2
56c8 56c8 s 
56c8 56c8 d 2100b0
56c8 56c8 u 03 01
56c8 56c8 s 	ld	hl,vol_4
56cb 56cb d 1100b8
56cb 56cb u 03 01
56cb 56cb s 	ld	de,vol_2	; 1/8 volume
56ce 56ce d cdc265
56ce 56ce u 03 01
56ce 56ce s 	call	div2
56d1 56d1 s 
56d1 56d1 d 2100b8
56d1 56d1 u 03 01
56d1 56d1 s 	ld	hl,vol_2
56d4 56d4 d 1100bc
56d4 56d4 u 03 01
56d4 56d4 s 	ld	de,vol_1	; 1/16 volume
56d7 56d7 d cdc265
56d7 56d7 u 03 01
56d7 56d7 s 	call	div2
56da 56da s 
56da 56da d 2100b8
56da 56da u 03 01
56da 56da s 	ld	hl,vol_2
56dd 56dd d 1100bc
56dd 56dd u 03 01
56dd 56dd s 	ld	de,vol_1
56e0 56e0 d dd2100b4
56e0 56e0 u 04 01
56e0 56e0 s 	ld	ix,vol_3
56e4 56e4 d cdd165
56e4 56e4 u 03 01
56e4 56e4 s 	call	sum2
56e7 56e7 s 
56e7 56e7 d 2100b0
56e7 56e7 u 03 01
56e7 56e7 s 	ld	hl,vol_4
56ea 56ea d 1100bc
56ea 56ea u 03 01
56ea 56ea s 	ld	de,vol_1
56ed 56ed d dd2100ac
56ed 56ed u 04 01
56ed 56ed s 	ld	ix,vol_5
56f1 56f1 d cdd165
56f1 56f1 u 03 01
56f1 56f1 s 	call	sum2
56f4 56f4 s 
56f4 56f4 d 2100b0
56f4 56f4 u 03 01
56f4 56f4 s 	ld	hl,vol_4
56f7 56f7 d 1100b8
56f7 56f7 u 03 01
56f7 56f7 s 	ld	de,vol_2
56fa 56fa d dd2100a8
56fa 56fa u 04 01
56fa 56fa s 	ld	ix,vol_6
56fe 56fe d cdd165
56fe 56fe u 03 01
56fe 56fe s 	call	sum2
5701 5701 s 
5701 5701 d 2100b0
5701 5701 u 03 01
5701 5701 s 	ld	hl,vol_4
5704 5704 d 1100b4
5704 5704 u 03 01
5704 5704 s 	ld	de,vol_3
5707 5707 d dd2100a4
5707 5707 u 04 01
5707 5707 s 	ld	ix,vol_7
570b 570b d cdd165
570b 570b u 03 01
570b 570b s 	call	sum2
570e 570e s 
570e 570e d 2100a0
570e 570e u 03 01
570e 570e s 	ld	hl,vol_8
5711 5711 d 1100bc
5711 5711 u 03 01
5711 5711 s 	ld	de,vol_1
5714 5714 d dd21009c
5714 5714 u 04 01
5714 5714 s 	ld	ix,vol_9
5718 5718 d cdd165
5718 5718 u 03 01
5718 5718 s 	call	sum2
571b 571b s 
571b 571b d 2100a0
571b 571b u 03 01
571b 571b s 	ld	hl,vol_8
571e 571e d 1100b8
571e 571e u 03 01
571e 571e s 	ld	de,vol_2
5721 5721 d dd210098
5721 5721 u 04 01
5721 5721 s 	ld	ix,vol_10
5725 5725 d cdd165
5725 5725 u 03 01
5725 5725 s 	call	sum2
5728 5728 s 
5728 5728 d 2100a0
5728 5728 u 03 01
5728 5728 s 	ld	hl,vol_8
572b 572b d 1100b4
572b 572b u 03 01
572b 572b s 	ld	de,vol_3
572e 572e d dd210094
572e 572e u 04 01
572e 572e s 	ld	ix,vol_11
5732 5732 d cdd165
5732 5732 u 03 01
5732 5732 s 	call	sum2
5735 5735 s 
5735 5735 d 2100a0
5735 5735 u 03 01
5735 5735 s 	ld	hl,vol_8
5738 5738 d 1100b0
5738 5738 u 03 01
5738 5738 s 	ld	de,vol_4
573b 573b d dd210090
573b 573b u 04 01
573b 573b s 	ld	ix,vol_12
573f 573f d cdd165
573f 573f u 03 01
573f 573f s 	call	sum2
5742 5742 s 
5742 5742 d 2100a0
5742 5742 u 03 01
5742 5742 s 	ld	hl,vol_8
5745 5745 d 1100ac
5745 5745 u 03 01
5745 5745 s 	ld	de,vol_5
5748 5748 d dd210090
5748 5748 u 04 01
5748 5748 s 	ld	ix,vol_12
574c 574c d cdd165
574c 574c u 03 01
574c 574c s 	call	sum2
574f 574f s 
574f 574f d 210090
574f 574f u 03 01
574f 574f s 	ld	hl,vol_12
5752 5752 d 1100bc
5752 5752 u 03 01
5752 5752 s 	ld	de,vol_1
5755 5755 d dd21008c
5755 5755 u 04 01
5755 5755 s 	ld	ix,vol_13
5759 5759 d cdd165
5759 5759 u 03 01
5759 5759 s 	call	sum2
575c 575c s 
575c 575c d 210090
575c 575c u 03 01
575c 575c s 	ld	hl,vol_12
575f 575f d 1100b8
575f 575f u 03 01
575f 575f s 	ld	de,vol_2
5762 5762 d dd210088
5762 5762 u 04 01
5762 5762 s 	ld	ix,vol_14
5766 5766 d cdd165
5766 5766 u 03 01
5766 5766 s 	call	sum2
5769 5769 s 
5769 5769 d 210090
5769 5769 u 03 01
5769 5769 s 	ld	hl,vol_12
576c 576c d 1100b4
576c 576c u 03 01
576c 576c s 	ld	de,vol_3
576f 576f d dd210084
576f 576f u 04 01
576f 576f s 	ld	ix,vol_15
5773 5773 d cdd165
5773 5773 u 03 01
5773 5773 s 	call	sum2
5776 5776 s 
5776 5776 s    endif
5776 5776 s 
5776 5776 d dbff
5776 5776 u 02 01
5776 5776 s 	in	a,($ff)
5778 5778 d f610
5778 5778 u 02 01
5778 5778 s 	or	a,$10		; enable extio
577a 577a d e69f
577a 577a u 02 01
577a 577a s 	and	a,~($20 | $40)	; M3 no video wait, M4 slow CPU
577c 577c d d3ec
577c 577c u 02 01
577c 577c s 	out	($ec),a
577e 577e s 
577e 577e s dac_l	equ	$b9
577e 577e s dac_r	equ	$b5
577e 577e s 
577e 577e s dac90_l	equ	$79
577e 577e s dac90_r	equ	$75
577e 577e s 
577e 577e s patch_skip:
577e 577e d c3b657
577e 577e u 03 01
577e 577e s 	jp	no_patch
5781 5781 s 
5781 5781 d 010e01
5781 5781 u 03 01
5781 5781 s 	ld	bc,dn
5784 5784 d 3100c1
5784 5784 u 03 01
5784 5784 s 	ld	sp,dac_patch
5787 5787 d e1
5787 5787 u 01 01
5787 5787 s dpatch:	pop	hl
5788 5788 d 7e
5788 5788 u 01 01
5788 5788 s 	ld	a,(hl)
5789 5789 d e60f
5789 5789 u 02 01
5789 5789 s 	and	$f
578b 578b d f670
578b 578b u 02 01
578b 578b s 	or	dac90_l & $f0
578d 578d d 77
578d 578d u 01 01
578d 578d s 	ld	(hl),a
578e 578e d 0b
578e 578e u 01 01
578e 578e s 	dec	bc
578f 578f d 78
578f 578f u 01 01
578f 578f s 	ld	a,b
5790 5790 d b1
5790 5790 u 01 01
5790 5790 s 	or	c
5791 5791 d 20f4
5791 5791 u 02 01
5791 5791 s 	jr	nz,dpatch
5793 5793 s 
5793 5793 d 0629
5793 5793 u 02 01
5793 5793 s 	ld	b,step3_size
5795 5795 d 31d966
5795 5795 u 03 01
5795 5795 s 	ld	sp,step3_tab
5798 5798 d 21e365
5798 5798 u 03 01
5798 5798 s 	ld	hl,param_tab
579b 579b d d1
579b 579b u 01 01
579b 579b s ppatch:	pop	de
579c 579c d 73
579c 579c u 01 01
579c 579c s 	ld	(hl),e
579d 579d d 23
579d 579d u 01 01
579d 579d s 	inc	hl
579e 579e d 72
579e 579e u 01 01
579e 579e s 	ld	(hl),d
579f 579f d 23
579f 579f u 01 01
579f 579f s 	inc	hl
57a0 57a0 s 
57a0 57a0 d 23
57a0 57a0 u 01 01
57a0 57a0 s 	inc	hl
57a1 57a1 d 23
57a1 57a1 u 01 01
57a1 57a1 s 	inc	hl
57a2 57a2 d 23
57a2 57a2 u 01 01
57a2 57a2 s 	inc	hl
57a3 57a3 d 23
57a3 57a3 u 01 01
57a3 57a3 s 	inc	hl
57a4 57a4 s 
57a4 57a4 d 3e5e
57a4 57a4 u 02 01
57a4 57a4 s 	ld	a,up3_ptr
57a6 57a6 d 32da5e
57a6 57a6 u 03 01
57a6 57a6 s 	ld	(ptr1),a	; up arrow to '^'
57a9 57a9 d 32c557
57a9 57a9 u 03 01
57a9 57a9 s 	ld	(up_ptr_addr),a
57ac 57ac d 3e76
57ac 57ac u 02 01
57ac 57ac s 	ld	a,down3_ptr
57ae 57ae d 32d55f
57ae 57ae u 03 01
57ae 57ae s 	ld	(ptr3),a	; down arrow to 'v'
57b1 57b1 d 32bd57
57b1 57b1 u 03 01
57b1 57b1 s 	ld	(down_ptr_addr),a
57b4 57b4 s 
57b4 57b4 d 10e5
57b4 57b4 u 02 01
57b4 57b4 s 	djnz	ppatch
57b6 57b6 s 
57b6 57b6 s no_patch:
57b6 57b6 s 
57b6 57b6 s ; Ahem, lot of macros and such before the code continues.
57b6 57b6 s 
57b6 57b6 s sampcyc	equ	132
57b6 57b6 s 
57b6 57b6 s equval	macro	root,n,val
57b6 57b6 s &root&n	=	val
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s ; Get the step value for 32 notes as step_0 .. step_31
57b6 57b6 s 
57b6 57b6 s calc_steps macro
57b6 57b6 s 	octbase = 110 * 256
57b6 57b6 s 	hz = octbase
57b6 57b6 s 	nt = 0
57b6 57b6 s 	rept	32
57b6 57b6 s 
57b6 57b6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57b6 57b6 s 	;	cpu_hz / sampcyc / 256
57b6 57b6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57b6 57b6 s 	; So target Hz over that is our step.
57b6 57b6 s 	; But we want 8.8 fixed point value.
57b6 57b6 s 
57b6 57b6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57b6 57b6 s 
57b6 57b6 s 	hz *= 271 ; twelfth root 2 * 256
57b6 57b6 s 	hz /= 256
57b6 57b6 s 	nt++
57b6 57b6 s 	if nt % 12 == 0
57b6 57b6 s 		octbase *= 2
57b6 57b6 s 		hz = octbase
57b6 57b6 s 	endif
57b6 57b6 s 
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s ; Define these sensibly
57b6 57b6 s 
57b6 57b6 s st_c0	=	step_0
57b6 57b6 s st_c0@	=	step_1
57b6 57b6 s st_d0	=	step_2
57b6 57b6 s st_d0@	=	step_3
57b6 57b6 s st_e0	=	step_4
57b6 57b6 s st_f0	=	step_5
57b6 57b6 s st_f0@	=	step_6
57b6 57b6 s st_g0	=	step_7
57b6 57b6 s st_g0@	=	step_8
57b6 57b6 s st_a0	=	step_9
57b6 57b6 s st_a0@	=	step_10
57b6 57b6 s st_b0	=	step_11
57b6 57b6 s 
57b6 57b6 s st_c1	=	step_12
57b6 57b6 s st_c1@	=	step_13
57b6 57b6 s st_d1	=	step_14
57b6 57b6 s st_d1@	=	step_15
57b6 57b6 s st_e1	=	step_16
57b6 57b6 s st_f1	=	step_17
57b6 57b6 s st_f1@	=	step_18
57b6 57b6 s st_g1	=	step_19
57b6 57b6 s st_g1@	=	step_20
57b6 57b6 s st_a1	=	step_21
57b6 57b6 s st_a1@	=	step_22
57b6 57b6 s st_b1	=	step_23
57b6 57b6 s 
57b6 57b6 s st_c2	=	step_24
57b6 57b6 s st_c2@	=	step_25
57b6 57b6 s st_d2	=	step_26
57b6 57b6 s st_d2@	=	step_27
57b6 57b6 s st_e2	=	step_28
57b6 57b6 s st_f2	=	step_29
57b6 57b6 s 
57b6 57b6 s st_null	=	0
57b6 57b6 s 
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s dn = 0
57b6 57b6 s 
57b6 57b6 s samp_l	macro
57b6 57b6 s 	add	hl,de
57b6 57b6 s 	ld	c,h
57b6 57b6 s 	ld	a,(bc)
57b6 57b6 s 	out	(dac_l),a
57b6 57b6 s 	equval	dacp,%dn,$-1
57b6 57b6 s 	dn++
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s samp_r	macro
57b6 57b6 s 	exx
57b6 57b6 s 	add	hl,de
57b6 57b6 s 	ld	c,h
57b6 57b6 s 	ld	a,(bc)
57b6 57b6 s 	out	(dac_r),a
57b6 57b6 s 	equval	dacp,%dn,$-1
57b6 57b6 s 	dn++
57b6 57b6 s 	exx
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s ; samp_r but leaves us in prime registers
57b6 57b6 s samp_r_prime macro
57b6 57b6 s 	exx
57b6 57b6 s 	add	hl,de
57b6 57b6 s 	ld	c,h
57b6 57b6 s 	ld	a,(bc)
57b6 57b6 s 	out	(dac_r),a
57b6 57b6 s 	equval	dacp,%dn,$-1
57b6 57b6 s 	dn++
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s start_cycle macro
57b6 57b6 s diff	defl	sampcyc-t($)
57b6 57b6 s 	assert	t($) == sampcyc
57b6 57b6 s 	sett	0
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s ; Check we're at the correct amount for left sample
57b6 57b6 s check_l	macro
57b6 57b6 s ldiff	defl	33-t($)
57b6 57b6 s 	assert	t($) == 11+4+7+11 ; cycles used in samp_l
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s ; Check we're at the correct amount for right sample
57b6 57b6 s ; I suppose this is unnecessary since you can do whatever you
57b6 57b6 s ; like with the rest of the sample time.
57b6 57b6 s check_r	macro
57b6 57b6 s rdiff	defl	74-t($)
57b6 57b6 s 	assert	t($) == 74 ; cycles used in samp_l and samp_r
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s cycle	macro
57b6 57b6 s 	start_cycle
57b6 57b6 s 	samp_l
57b6 57b6 s 	samp_r
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s key	macro	id,addrmask,st,down
57b6 57b6 s   if parkey == 0
57b6 57b6 s param_&id:
57b6 57b6 s   endif
57b6 57b6 s 
57b6 57b6 s   if parkey < 2
57b6 57b6 s 	defw	st_&st
57b6 57b6 s   endif
57b6 57b6 s 
57b6 57b6 s   if parkey == 0
57b6 57b6 s 	defw	ret_&id
57b6 57b6 s 	defw	$ff00+id
57b6 57b6 s   endif
57b6 57b6 s 
57b6 57b6 s   if parkey == 2
57b6 57b6 s 	cycle
57b6 57b6 s 	ld	sp,param_&id
57b6 57b6 s 	; Waste 7+4
57b6 57b6 s 	nop
57b6 57b6 s 	ld	a,0
57b6 57b6 s 	ld	a,0		; waste we can eliminate?
57b6 57b6 s 	ld	a,(addrmask >> 8)
57b6 57b6 s 	and	addrmask % $100
57b6 57b6 s 	jp	nz,down
57b6 57b6 s ret_&id:
57b6 57b6 s   endif
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s key_l	macro	id,addrmask,st
57b6 57b6 s 	key	id,addrmask,st,down_l
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s key_r	macro	id,addrmask,st
57b6 57b6 s 	key	id,addrmask,st,down_r
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s ; Model 1 keyboard matrix.
57b6 57b6 s ;        1   2   4   8  16  32  64  128
57b6 57b6 s ; $3801	 @   A   B   C   D   E   F   G
57b6 57b6 s ; $3802	 H   I   J   K   L   M   N   O
57b6 57b6 s ; $3804	 P   Q   R   S   T   U   V   W
57b6 57b6 s ; $3808	 X   Y   Z
57b6 57b6 s ; $3810	 0   1   2   3   4   5   6   7
57b6 57b6 s ; $3820	 8   9   :   ;   ,   -   .   /
57b6 57b6 s ; $3840	ENT CLR BRK UP   DN  LT  RT SPC
57b6 57b6 s ; $3880	SFT
57b6 57b6 s 
57b6 57b6 s k_@	equ	$380101
57b6 57b6 s k_A	equ	$380102
57b6 57b6 s k_B	equ	$380104
57b6 57b6 s k_C	equ	$380108
57b6 57b6 s k_D	equ	$380110
57b6 57b6 s k_E	equ	$380120
57b6 57b6 s k_F	equ	$380140
57b6 57b6 s k_G	equ	$380180
57b6 57b6 s 
57b6 57b6 s k_H	equ	$380201
57b6 57b6 s k_I	equ	$380202
57b6 57b6 s k_J	equ	$380204
57b6 57b6 s k_K	equ	$380208
57b6 57b6 s k_L	equ	$380210
57b6 57b6 s k_M	equ	$380220
57b6 57b6 s k_N	equ	$380240
57b6 57b6 s k_O	equ	$380280
57b6 57b6 s 
57b6 57b6 s k_P	equ	$380401
57b6 57b6 s k_Q	equ	$380402
57b6 57b6 s k_R	equ	$380404
57b6 57b6 s k_S	equ	$380408
57b6 57b6 s k_T	equ	$380410
57b6 57b6 s k_U	equ	$380420
57b6 57b6 s k_V	equ	$380440
57b6 57b6 s k_W	equ	$380480
57b6 57b6 s 
57b6 57b6 s k_X	equ	$380801
57b6 57b6 s k_Y	equ	$380802
57b6 57b6 s k_Z	equ	$380804
57b6 57b6 s 
57b6 57b6 s k_0	equ	$381001
57b6 57b6 s k_1	equ	$381002
57b6 57b6 s k_2	equ	$381004
57b6 57b6 s k_3	equ	$381008
57b6 57b6 s k_4	equ	$381010
57b6 57b6 s k_5	equ	$381020
57b6 57b6 s k_6	equ	$381040
57b6 57b6 s k_7	equ	$381080
57b6 57b6 s 
57b6 57b6 s k_8	equ	$382001
57b6 57b6 s k_9	equ	$382002
57b6 57b6 s k_colon	equ	$382004
57b6 57b6 s k_semi	equ	$382008
57b6 57b6 s k_comma	equ	$382010
57b6 57b6 s k_dash	equ	$382020
57b6 57b6 s k_dot	equ	$382040
57b6 57b6 s k_slash	equ	$382080
57b6 57b6 s 
57b6 57b6 s k_enter	equ	$384001
57b6 57b6 s k_clear	equ	$384002
57b6 57b6 s k_break	equ	$384004
57b6 57b6 s k_up	equ	$384008
57b6 57b6 s k_down	equ	$384010
57b6 57b6 s k_left	equ	$384020
57b6 57b6 s k_right	equ	$384040
57b6 57b6 s k_space	equ	$384080
57b6 57b6 s 
57b6 57b6 s k_shift	equ	$388001
57b6 57b6 s 
57b6 57b6 s parkeys	macro	pk
57b6 57b6 s 	calc_steps
57b6 57b6 s 
57b6 57b6 s 	parkey = pk
57b6 57b6 s 
57b6 57b6 s 	key_l	25,k_Z,c0
57b6 57b6 s 	key_l	18,k_S,c0@
57b6 57b6 s 	key_l	26,k_X,d0
57b6 57b6 s 	key_l	19,k_D,d0@
57b6 57b6 s 	key_l	27,k_C,e0
57b6 57b6 s 	key_l	28,k_V,f0
57b6 57b6 s 	key_l	20,k_G,f0@
57b6 57b6 s 	key_l	29,k_B,g0
57b6 57b6 s 	key_l	21,k_H,g0@
57b6 57b6 s 	key_l	30,k_N,a0
57b6 57b6 s 	key_l	22,k_J,a0@
57b6 57b6 s 	key_l	31,k_M,b0
57b6 57b6 s 	key_l	32,k_comma,c1
57b6 57b6 s 	key_l	23,k_L,c1@
57b6 57b6 s 	key_l	33,k_dot,d1
57b6 57b6 s 	key_l	24,k_semi,d1@
57b6 57b6 s 	key_l	34,k_slash,e1
57b6 57b6 s 
57b6 57b6 s 	key_r	07,k_Q,c1
57b6 57b6 s 	key_r	00,k_2,c1@
57b6 57b6 s 	key_r	08,k_W,d1
57b6 57b6 s 	key_r	01,k_3,d1@
57b6 57b6 s 	key_r	09,k_E,e1
57b6 57b6 s 	key_r	10,k_R,f1
57b6 57b6 s 	key_r	02,k_5,f1@
57b6 57b6 s 	key_r	11,k_T,g1
57b6 57b6 s 	key_r	03,k_6,g1@
57b6 57b6 s 	key_r	12,k_Y,a1
57b6 57b6 s 	key_r	04,k_7,a1@
57b6 57b6 s 	key_r	13,k_U,b1
57b6 57b6 s 	key_r	14,k_I,c2
57b6 57b6 s 	key_r	05,k_9,c2@
57b6 57b6 s 	key_r	15,k_O,d2
57b6 57b6 s 	key_r	06,k_0,d2@
57b6 57b6 s 	key_r	16,k_P,e2
57b6 57b6 s 	key_r	17,k_@,f2
57b6 57b6 s 
57b6 57b6 s 	key	35,k_A,null,wave_down_l
57b6 57b6 s 	key	36,k_1,null,wave_down_r
57b6 57b6 s 
57b6 57b6 s    if havevol
57b6 57b6 s 	key	37,k_up,null,vol_up_down_l
57b6 57b6 s 	key	38,k_down,null,vol_down_down_l
57b6 57b6 s 
57b6 57b6 s 	key	39,k_left,null,vol_up_down_r
57b6 57b6 s 	key	40,k_right,null,vol_down_down_r
57b6 57b6 s    endif
57b6 57b6 s 
57b6 57b6 s 	endm
57b6 57b6 s 
57b6 57b6 s down_ptr equ	'\'
57b6 57b6 s up_ptr	equ	'['
57b6 57b6 s 
57b6 57b6 s down3_ptr equ	'v'
57b6 57b6 s up3_ptr	equ	'^'
57b6 57b6 s 
57b6 57b6 d d9
57b6 57b6 u 01 01
57b6 57b6 s 	exx
57b7 57b7 d 06c0
57b7 57b7 u 02 01
57b7 57b7 s 	ld	b,high(silence)
57b9 57b9 d 2a3067
57b9 57b9 u 03 01
57b9 57b9 s 	ld	hl,(wave_ind_r)
57bc 57bc d 365c
57bc 57bc u 02 01
57bc 57bc s 	ld	(hl),down_ptr
57be 57be s down_ptr_addr equ $-1
57be 57be d d9
57be 57be u 01 01
57be 57be s 	exx
57bf 57bf d 06c0
57bf 57bf u 02 01
57bf 57bf s 	ld	b,high(silence)
57c1 57c1 d 2a3867
57c1 57c1 u 03 01
57c1 57c1 s 	ld	hl,(wave_ind_l)
57c4 57c4 d 365b
57c4 57c4 u 02 01
57c4 57c4 s 	ld	(hl),up_ptr
57c6 57c6 s up_ptr_addr equ $-1
57c6 57c6 s 
57c6 57c6 s 	sett	sampcyc		; hack to let first cycle pass
57c6 57c6 s main:
57c6 57c6 s 	cpu_hz = 1774080
57c6 57c6 s 	parkeys	2
57c6 57c6 s 	calc_steps
57c6 57c6 s 	octbase = 110 * 256
57c6 57c6 s 	hz = octbase
57c6 57c6 s 	nt = 0
57c6 57c6 s 	rept	32
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_0	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_1	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_2	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_3	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_4	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_5	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_6	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_7	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_8	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_9	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_10	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_11	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_12	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_13	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_14	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_15	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_16	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_17	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_18	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_19	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_20	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_21	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_22	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_23	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_24	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_25	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_26	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_27	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_28	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_29	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_30	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	; Hz of entire 256 byte buffer at step 1 is: 
57c6 57c6 s 	;	cpu_hz / sampcyc / 256
57c6 57c6 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
57c6 57c6 s 	; So target Hz over that is our step.
57c6 57c6 s 	; But we want 8.8 fixed point value.
57c6 57c6 s 
57c6 57c6 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
57c6 57c6 s step_31	=	hz/(cpu_hz/sampcyc/256)
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	hz *= 271 ; twelfth root 2 * 256
57c6 57c6 s 	hz /= 256
57c6 57c6 s 	nt++
57c6 57c6 s 	if nt % 12 == 0
57c6 57c6 s 		octbase *= 2
57c6 57c6 s 		hz = octbase
57c6 57c6 s 	endif
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s ; Define these sensibly
57c6 57c6 s 
57c6 57c6 s st_c0	=	step_0
57c6 57c6 s st_c0@	=	step_1
57c6 57c6 s st_d0	=	step_2
57c6 57c6 s st_d0@	=	step_3
57c6 57c6 s st_e0	=	step_4
57c6 57c6 s st_f0	=	step_5
57c6 57c6 s st_f0@	=	step_6
57c6 57c6 s st_g0	=	step_7
57c6 57c6 s st_g0@	=	step_8
57c6 57c6 s st_a0	=	step_9
57c6 57c6 s st_a0@	=	step_10
57c6 57c6 s st_b0	=	step_11
57c6 57c6 s 
57c6 57c6 s st_c1	=	step_12
57c6 57c6 s st_c1@	=	step_13
57c6 57c6 s st_d1	=	step_14
57c6 57c6 s st_d1@	=	step_15
57c6 57c6 s st_e1	=	step_16
57c6 57c6 s st_f1	=	step_17
57c6 57c6 s st_f1@	=	step_18
57c6 57c6 s st_g1	=	step_19
57c6 57c6 s st_g1@	=	step_20
57c6 57c6 s st_a1	=	step_21
57c6 57c6 s st_a1@	=	step_22
57c6 57c6 s st_b1	=	step_23
57c6 57c6 s 
57c6 57c6 s st_c2	=	step_24
57c6 57c6 s st_c2@	=	step_25
57c6 57c6 s st_d2	=	step_26
57c6 57c6 s st_d2@	=	step_27
57c6 57c6 s st_e2	=	step_28
57c6 57c6 s st_f2	=	step_29
57c6 57c6 s 
57c6 57c6 s st_null	=	0
57c6 57c6 s 
57c6 57c6 s 	endm
57c6 57c6 s 
57c6 57c6 s 	parkey = 2
57c6 57c6 s 
57c6 57c6 s 	key_l	25,k_Z,c0
57c6 57c6 s 	key	25,k_Z,c0,down_l
57c6 57c6 s   if parkey == 0
57c6 57c6 s param_25:
57c6 57c6 s   endif
57c6 57c6 s 
57c6 57c6 s   if parkey < 2
57c6 57c6 s 	defw	st_c0
57c6 57c6 s   endif
57c6 57c6 s 
57c6 57c6 s   if parkey == 0
57c6 57c6 s 	defw	ret_25
57c6 57c6 s 	defw	$ff00+25
57c6 57c6 s   endif
57c6 57c6 s 
57c6 57c6 s   if parkey == 2
57c6 57c6 s 	cycle
57c6 57c6 s 	start_cycle
57c6 57c6 s diff	defl	sampcyc-t($)
57c6 57c6 s 	assert	t($) == sampcyc
57c6 57c6 s 	sett	0
57c6 57c6 s 	endm
57c6 57c6 s 	samp_l
57c6 57c6 d 19
57c6 57c6 u 01 01
57c6 57c6 s 	add	hl,de
57c7 57c7 d 4c
57c7 57c7 u 01 01
57c7 57c7 s 	ld	c,h
57c8 57c8 d 0a
57c8 57c8 u 01 01
57c8 57c8 s 	ld	a,(bc)
57c9 57c9 d d3b9
57c9 57c9 u 02 01
57c9 57c9 s 	out	(dac_l),a
57cb 57cb s 	equval	dacp,%dn,$-1
57cb 57cb s dacp0	=	$-1
57cb 57cb s 	endm
57cb 57cb s 	dn++
57cb 57cb s 	endm
57cb 57cb s 	samp_r
57cb 57cb d d9
57cb 57cb u 01 01
57cb 57cb s 	exx
57cc 57cc d 19
57cc 57cc u 01 01
57cc 57cc s 	add	hl,de
57cd 57cd d 4c
57cd 57cd u 01 01
57cd 57cd s 	ld	c,h
57ce 57ce d 0a
57ce 57ce u 01 01
57ce 57ce s 	ld	a,(bc)
57cf 57cf d d3b5
57cf 57cf u 02 01
57cf 57cf s 	out	(dac_r),a
57d1 57d1 s 	equval	dacp,%dn,$-1
57d1 57d1 s dacp1	=	$-1
57d1 57d1 s 	endm
57d1 57d1 s 	dn++
57d1 57d1 d d9
57d1 57d1 u 01 01
57d1 57d1 s 	exx
57d2 57d2 s 	endm
57d2 57d2 s 	endm
57d2 57d2 d 31e365
57d2 57d2 u 03 01
57d2 57d2 s 	ld	sp,param_25
57d5 57d5 s 	; Waste 7+4
57d5 57d5 d 00
57d5 57d5 u 01 01
57d5 57d5 s 	nop
57d6 57d6 d 3e00
57d6 57d6 u 02 01
57d6 57d6 s 	ld	a,0
57d8 57d8 d 3e00
57d8 57d8 u 02 01
57d8 57d8 s 	ld	a,0		; waste we can eliminate?
57da 57da d 3a0838
57da 57da u 03 01
57da 57da s 	ld	a,(k_Z >> 8)
57dd 57dd d e604
57dd 57dd u 02 01
57dd 57dd s 	and	k_Z % $100
57df 57df d c25f5c
57df 57df u 03 01
57df 57df s 	jp	nz,down_l
57e2 57e2 s ret_25:
57e2 57e2 s   endif
57e2 57e2 s 	endm
57e2 57e2 s 	endm
57e2 57e2 s 	key_l	18,k_S,c0@
57e2 57e2 s 	key	18,k_S,c0@,down_l
57e2 57e2 s   if parkey == 0
57e2 57e2 s param_18:
57e2 57e2 s   endif
57e2 57e2 s 
57e2 57e2 s   if parkey < 2
57e2 57e2 s 	defw	st_c0@
57e2 57e2 s   endif
57e2 57e2 s 
57e2 57e2 s   if parkey == 0
57e2 57e2 s 	defw	ret_18
57e2 57e2 s 	defw	$ff00+18
57e2 57e2 s   endif
57e2 57e2 s 
57e2 57e2 s   if parkey == 2
57e2 57e2 s 	cycle
57e2 57e2 s 	start_cycle
57e2 57e2 s diff	defl	sampcyc-t($)
57e2 57e2 s 	assert	t($) == sampcyc
57e2 57e2 s 	sett	0
57e2 57e2 s 	endm
57e2 57e2 s 	samp_l
57e2 57e2 d 19
57e2 57e2 u 01 01
57e2 57e2 s 	add	hl,de
57e3 57e3 d 4c
57e3 57e3 u 01 01
57e3 57e3 s 	ld	c,h
57e4 57e4 d 0a
57e4 57e4 u 01 01
57e4 57e4 s 	ld	a,(bc)
57e5 57e5 d d3b9
57e5 57e5 u 02 01
57e5 57e5 s 	out	(dac_l),a
57e7 57e7 s 	equval	dacp,%dn,$-1
57e7 57e7 s dacp2	=	$-1
57e7 57e7 s 	endm
57e7 57e7 s 	dn++
57e7 57e7 s 	endm
57e7 57e7 s 	samp_r
57e7 57e7 d d9
57e7 57e7 u 01 01
57e7 57e7 s 	exx
57e8 57e8 d 19
57e8 57e8 u 01 01
57e8 57e8 s 	add	hl,de
57e9 57e9 d 4c
57e9 57e9 u 01 01
57e9 57e9 s 	ld	c,h
57ea 57ea d 0a
57ea 57ea u 01 01
57ea 57ea s 	ld	a,(bc)
57eb 57eb d d3b5
57eb 57eb u 02 01
57eb 57eb s 	out	(dac_r),a
57ed 57ed s 	equval	dacp,%dn,$-1
57ed 57ed s dacp3	=	$-1
57ed 57ed s 	endm
57ed 57ed s 	dn++
57ed 57ed d d9
57ed 57ed u 01 01
57ed 57ed s 	exx
57ee 57ee s 	endm
57ee 57ee s 	endm
57ee 57ee d 31e965
57ee 57ee u 03 01
57ee 57ee s 	ld	sp,param_18
57f1 57f1 s 	; Waste 7+4
57f1 57f1 d 00
57f1 57f1 u 01 01
57f1 57f1 s 	nop
57f2 57f2 d 3e00
57f2 57f2 u 02 01
57f2 57f2 s 	ld	a,0
57f4 57f4 d 3e00
57f4 57f4 u 02 01
57f4 57f4 s 	ld	a,0		; waste we can eliminate?
57f6 57f6 d 3a0438
57f6 57f6 u 03 01
57f6 57f6 s 	ld	a,(k_S >> 8)
57f9 57f9 d e608
57f9 57f9 u 02 01
57f9 57f9 s 	and	k_S % $100
57fb 57fb d c25f5c
57fb 57fb u 03 01
57fb 57fb s 	jp	nz,down_l
57fe 57fe s ret_18:
57fe 57fe s   endif
57fe 57fe s 	endm
57fe 57fe s 	endm
57fe 57fe s 	key_l	26,k_X,d0
57fe 57fe s 	key	26,k_X,d0,down_l
57fe 57fe s   if parkey == 0
57fe 57fe s param_26:
57fe 57fe s   endif
57fe 57fe s 
57fe 57fe s   if parkey < 2
57fe 57fe s 	defw	st_d0
57fe 57fe s   endif
57fe 57fe s 
57fe 57fe s   if parkey == 0
57fe 57fe s 	defw	ret_26
57fe 57fe s 	defw	$ff00+26
57fe 57fe s   endif
57fe 57fe s 
57fe 57fe s   if parkey == 2
57fe 57fe s 	cycle
57fe 57fe s 	start_cycle
57fe 57fe s diff	defl	sampcyc-t($)
57fe 57fe s 	assert	t($) == sampcyc
57fe 57fe s 	sett	0
57fe 57fe s 	endm
57fe 57fe s 	samp_l
57fe 57fe d 19
57fe 57fe u 01 01
57fe 57fe s 	add	hl,de
57ff 57ff d 4c
57ff 57ff u 01 01
57ff 57ff s 	ld	c,h
5800 5800 d 0a
5800 5800 u 01 01
5800 5800 s 	ld	a,(bc)
5801 5801 d d3b9
5801 5801 u 02 01
5801 5801 s 	out	(dac_l),a
5803 5803 s 	equval	dacp,%dn,$-1
5803 5803 s dacp4	=	$-1
5803 5803 s 	endm
5803 5803 s 	dn++
5803 5803 s 	endm
5803 5803 s 	samp_r
5803 5803 d d9
5803 5803 u 01 01
5803 5803 s 	exx
5804 5804 d 19
5804 5804 u 01 01
5804 5804 s 	add	hl,de
5805 5805 d 4c
5805 5805 u 01 01
5805 5805 s 	ld	c,h
5806 5806 d 0a
5806 5806 u 01 01
5806 5806 s 	ld	a,(bc)
5807 5807 d d3b5
5807 5807 u 02 01
5807 5807 s 	out	(dac_r),a
5809 5809 s 	equval	dacp,%dn,$-1
5809 5809 s dacp5	=	$-1
5809 5809 s 	endm
5809 5809 s 	dn++
5809 5809 d d9
5809 5809 u 01 01
5809 5809 s 	exx
580a 580a s 	endm
580a 580a s 	endm
580a 580a d 31ef65
580a 580a u 03 01
580a 580a s 	ld	sp,param_26
580d 580d s 	; Waste 7+4
580d 580d d 00
580d 580d u 01 01
580d 580d s 	nop
580e 580e d 3e00
580e 580e u 02 01
580e 580e s 	ld	a,0
5810 5810 d 3e00
5810 5810 u 02 01
5810 5810 s 	ld	a,0		; waste we can eliminate?
5812 5812 d 3a0838
5812 5812 u 03 01
5812 5812 s 	ld	a,(k_X >> 8)
5815 5815 d e601
5815 5815 u 02 01
5815 5815 s 	and	k_X % $100
5817 5817 d c25f5c
5817 5817 u 03 01
5817 5817 s 	jp	nz,down_l
581a 581a s ret_26:
581a 581a s   endif
581a 581a s 	endm
581a 581a s 	endm
581a 581a s 	key_l	19,k_D,d0@
581a 581a s 	key	19,k_D,d0@,down_l
581a 581a s   if parkey == 0
581a 581a s param_19:
581a 581a s   endif
581a 581a s 
581a 581a s   if parkey < 2
581a 581a s 	defw	st_d0@
581a 581a s   endif
581a 581a s 
581a 581a s   if parkey == 0
581a 581a s 	defw	ret_19
581a 581a s 	defw	$ff00+19
581a 581a s   endif
581a 581a s 
581a 581a s   if parkey == 2
581a 581a s 	cycle
581a 581a s 	start_cycle
581a 581a s diff	defl	sampcyc-t($)
581a 581a s 	assert	t($) == sampcyc
581a 581a s 	sett	0
581a 581a s 	endm
581a 581a s 	samp_l
581a 581a d 19
581a 581a u 01 01
581a 581a s 	add	hl,de
581b 581b d 4c
581b 581b u 01 01
581b 581b s 	ld	c,h
581c 581c d 0a
581c 581c u 01 01
581c 581c s 	ld	a,(bc)
581d 581d d d3b9
581d 581d u 02 01
581d 581d s 	out	(dac_l),a
581f 581f s 	equval	dacp,%dn,$-1
581f 581f s dacp6	=	$-1
581f 581f s 	endm
581f 581f s 	dn++
581f 581f s 	endm
581f 581f s 	samp_r
581f 581f d d9
581f 581f u 01 01
581f 581f s 	exx
5820 5820 d 19
5820 5820 u 01 01
5820 5820 s 	add	hl,de
5821 5821 d 4c
5821 5821 u 01 01
5821 5821 s 	ld	c,h
5822 5822 d 0a
5822 5822 u 01 01
5822 5822 s 	ld	a,(bc)
5823 5823 d d3b5
5823 5823 u 02 01
5823 5823 s 	out	(dac_r),a
5825 5825 s 	equval	dacp,%dn,$-1
5825 5825 s dacp7	=	$-1
5825 5825 s 	endm
5825 5825 s 	dn++
5825 5825 d d9
5825 5825 u 01 01
5825 5825 s 	exx
5826 5826 s 	endm
5826 5826 s 	endm
5826 5826 d 31f565
5826 5826 u 03 01
5826 5826 s 	ld	sp,param_19
5829 5829 s 	; Waste 7+4
5829 5829 d 00
5829 5829 u 01 01
5829 5829 s 	nop
582a 582a d 3e00
582a 582a u 02 01
582a 582a s 	ld	a,0
582c 582c d 3e00
582c 582c u 02 01
582c 582c s 	ld	a,0		; waste we can eliminate?
582e 582e d 3a0138
582e 582e u 03 01
582e 582e s 	ld	a,(k_D >> 8)
5831 5831 d e610
5831 5831 u 02 01
5831 5831 s 	and	k_D % $100
5833 5833 d c25f5c
5833 5833 u 03 01
5833 5833 s 	jp	nz,down_l
5836 5836 s ret_19:
5836 5836 s   endif
5836 5836 s 	endm
5836 5836 s 	endm
5836 5836 s 	key_l	27,k_C,e0
5836 5836 s 	key	27,k_C,e0,down_l
5836 5836 s   if parkey == 0
5836 5836 s param_27:
5836 5836 s   endif
5836 5836 s 
5836 5836 s   if parkey < 2
5836 5836 s 	defw	st_e0
5836 5836 s   endif
5836 5836 s 
5836 5836 s   if parkey == 0
5836 5836 s 	defw	ret_27
5836 5836 s 	defw	$ff00+27
5836 5836 s   endif
5836 5836 s 
5836 5836 s   if parkey == 2
5836 5836 s 	cycle
5836 5836 s 	start_cycle
5836 5836 s diff	defl	sampcyc-t($)
5836 5836 s 	assert	t($) == sampcyc
5836 5836 s 	sett	0
5836 5836 s 	endm
5836 5836 s 	samp_l
5836 5836 d 19
5836 5836 u 01 01
5836 5836 s 	add	hl,de
5837 5837 d 4c
5837 5837 u 01 01
5837 5837 s 	ld	c,h
5838 5838 d 0a
5838 5838 u 01 01
5838 5838 s 	ld	a,(bc)
5839 5839 d d3b9
5839 5839 u 02 01
5839 5839 s 	out	(dac_l),a
583b 583b s 	equval	dacp,%dn,$-1
583b 583b s dacp8	=	$-1
583b 583b s 	endm
583b 583b s 	dn++
583b 583b s 	endm
583b 583b s 	samp_r
583b 583b d d9
583b 583b u 01 01
583b 583b s 	exx
583c 583c d 19
583c 583c u 01 01
583c 583c s 	add	hl,de
583d 583d d 4c
583d 583d u 01 01
583d 583d s 	ld	c,h
583e 583e d 0a
583e 583e u 01 01
583e 583e s 	ld	a,(bc)
583f 583f d d3b5
583f 583f u 02 01
583f 583f s 	out	(dac_r),a
5841 5841 s 	equval	dacp,%dn,$-1
5841 5841 s dacp9	=	$-1
5841 5841 s 	endm
5841 5841 s 	dn++
5841 5841 d d9
5841 5841 u 01 01
5841 5841 s 	exx
5842 5842 s 	endm
5842 5842 s 	endm
5842 5842 d 31fb65
5842 5842 u 03 01
5842 5842 s 	ld	sp,param_27
5845 5845 s 	; Waste 7+4
5845 5845 d 00
5845 5845 u 01 01
5845 5845 s 	nop
5846 5846 d 3e00
5846 5846 u 02 01
5846 5846 s 	ld	a,0
5848 5848 d 3e00
5848 5848 u 02 01
5848 5848 s 	ld	a,0		; waste we can eliminate?
584a 584a d 3a0138
584a 584a u 03 01
584a 584a s 	ld	a,(k_C >> 8)
584d 584d d e608
584d 584d u 02 01
584d 584d s 	and	k_C % $100
584f 584f d c25f5c
584f 584f u 03 01
584f 584f s 	jp	nz,down_l
5852 5852 s ret_27:
5852 5852 s   endif
5852 5852 s 	endm
5852 5852 s 	endm
5852 5852 s 	key_l	28,k_V,f0
5852 5852 s 	key	28,k_V,f0,down_l
5852 5852 s   if parkey == 0
5852 5852 s param_28:
5852 5852 s   endif
5852 5852 s 
5852 5852 s   if parkey < 2
5852 5852 s 	defw	st_f0
5852 5852 s   endif
5852 5852 s 
5852 5852 s   if parkey == 0
5852 5852 s 	defw	ret_28
5852 5852 s 	defw	$ff00+28
5852 5852 s   endif
5852 5852 s 
5852 5852 s   if parkey == 2
5852 5852 s 	cycle
5852 5852 s 	start_cycle
5852 5852 s diff	defl	sampcyc-t($)
5852 5852 s 	assert	t($) == sampcyc
5852 5852 s 	sett	0
5852 5852 s 	endm
5852 5852 s 	samp_l
5852 5852 d 19
5852 5852 u 01 01
5852 5852 s 	add	hl,de
5853 5853 d 4c
5853 5853 u 01 01
5853 5853 s 	ld	c,h
5854 5854 d 0a
5854 5854 u 01 01
5854 5854 s 	ld	a,(bc)
5855 5855 d d3b9
5855 5855 u 02 01
5855 5855 s 	out	(dac_l),a
5857 5857 s 	equval	dacp,%dn,$-1
5857 5857 s dacp10	=	$-1
5857 5857 s 	endm
5857 5857 s 	dn++
5857 5857 s 	endm
5857 5857 s 	samp_r
5857 5857 d d9
5857 5857 u 01 01
5857 5857 s 	exx
5858 5858 d 19
5858 5858 u 01 01
5858 5858 s 	add	hl,de
5859 5859 d 4c
5859 5859 u 01 01
5859 5859 s 	ld	c,h
585a 585a d 0a
585a 585a u 01 01
585a 585a s 	ld	a,(bc)
585b 585b d d3b5
585b 585b u 02 01
585b 585b s 	out	(dac_r),a
585d 585d s 	equval	dacp,%dn,$-1
585d 585d s dacp11	=	$-1
585d 585d s 	endm
585d 585d s 	dn++
585d 585d d d9
585d 585d u 01 01
585d 585d s 	exx
585e 585e s 	endm
585e 585e s 	endm
585e 585e d 310166
585e 585e u 03 01
585e 585e s 	ld	sp,param_28
5861 5861 s 	; Waste 7+4
5861 5861 d 00
5861 5861 u 01 01
5861 5861 s 	nop
5862 5862 d 3e00
5862 5862 u 02 01
5862 5862 s 	ld	a,0
5864 5864 d 3e00
5864 5864 u 02 01
5864 5864 s 	ld	a,0		; waste we can eliminate?
5866 5866 d 3a0438
5866 5866 u 03 01
5866 5866 s 	ld	a,(k_V >> 8)
5869 5869 d e640
5869 5869 u 02 01
5869 5869 s 	and	k_V % $100
586b 586b d c25f5c
586b 586b u 03 01
586b 586b s 	jp	nz,down_l
586e 586e s ret_28:
586e 586e s   endif
586e 586e s 	endm
586e 586e s 	endm
586e 586e s 	key_l	20,k_G,f0@
586e 586e s 	key	20,k_G,f0@,down_l
586e 586e s   if parkey == 0
586e 586e s param_20:
586e 586e s   endif
586e 586e s 
586e 586e s   if parkey < 2
586e 586e s 	defw	st_f0@
586e 586e s   endif
586e 586e s 
586e 586e s   if parkey == 0
586e 586e s 	defw	ret_20
586e 586e s 	defw	$ff00+20
586e 586e s   endif
586e 586e s 
586e 586e s   if parkey == 2
586e 586e s 	cycle
586e 586e s 	start_cycle
586e 586e s diff	defl	sampcyc-t($)
586e 586e s 	assert	t($) == sampcyc
586e 586e s 	sett	0
586e 586e s 	endm
586e 586e s 	samp_l
586e 586e d 19
586e 586e u 01 01
586e 586e s 	add	hl,de
586f 586f d 4c
586f 586f u 01 01
586f 586f s 	ld	c,h
5870 5870 d 0a
5870 5870 u 01 01
5870 5870 s 	ld	a,(bc)
5871 5871 d d3b9
5871 5871 u 02 01
5871 5871 s 	out	(dac_l),a
5873 5873 s 	equval	dacp,%dn,$-1
5873 5873 s dacp12	=	$-1
5873 5873 s 	endm
5873 5873 s 	dn++
5873 5873 s 	endm
5873 5873 s 	samp_r
5873 5873 d d9
5873 5873 u 01 01
5873 5873 s 	exx
5874 5874 d 19
5874 5874 u 01 01
5874 5874 s 	add	hl,de
5875 5875 d 4c
5875 5875 u 01 01
5875 5875 s 	ld	c,h
5876 5876 d 0a
5876 5876 u 01 01
5876 5876 s 	ld	a,(bc)
5877 5877 d d3b5
5877 5877 u 02 01
5877 5877 s 	out	(dac_r),a
5879 5879 s 	equval	dacp,%dn,$-1
5879 5879 s dacp13	=	$-1
5879 5879 s 	endm
5879 5879 s 	dn++
5879 5879 d d9
5879 5879 u 01 01
5879 5879 s 	exx
587a 587a s 	endm
587a 587a s 	endm
587a 587a d 310766
587a 587a u 03 01
587a 587a s 	ld	sp,param_20
587d 587d s 	; Waste 7+4
587d 587d d 00
587d 587d u 01 01
587d 587d s 	nop
587e 587e d 3e00
587e 587e u 02 01
587e 587e s 	ld	a,0
5880 5880 d 3e00
5880 5880 u 02 01
5880 5880 s 	ld	a,0		; waste we can eliminate?
5882 5882 d 3a0138
5882 5882 u 03 01
5882 5882 s 	ld	a,(k_G >> 8)
5885 5885 d e680
5885 5885 u 02 01
5885 5885 s 	and	k_G % $100
5887 5887 d c25f5c
5887 5887 u 03 01
5887 5887 s 	jp	nz,down_l
588a 588a s ret_20:
588a 588a s   endif
588a 588a s 	endm
588a 588a s 	endm
588a 588a s 	key_l	29,k_B,g0
588a 588a s 	key	29,k_B,g0,down_l
588a 588a s   if parkey == 0
588a 588a s param_29:
588a 588a s   endif
588a 588a s 
588a 588a s   if parkey < 2
588a 588a s 	defw	st_g0
588a 588a s   endif
588a 588a s 
588a 588a s   if parkey == 0
588a 588a s 	defw	ret_29
588a 588a s 	defw	$ff00+29
588a 588a s   endif
588a 588a s 
588a 588a s   if parkey == 2
588a 588a s 	cycle
588a 588a s 	start_cycle
588a 588a s diff	defl	sampcyc-t($)
588a 588a s 	assert	t($) == sampcyc
588a 588a s 	sett	0
588a 588a s 	endm
588a 588a s 	samp_l
588a 588a d 19
588a 588a u 01 01
588a 588a s 	add	hl,de
588b 588b d 4c
588b 588b u 01 01
588b 588b s 	ld	c,h
588c 588c d 0a
588c 588c u 01 01
588c 588c s 	ld	a,(bc)
588d 588d d d3b9
588d 588d u 02 01
588d 588d s 	out	(dac_l),a
588f 588f s 	equval	dacp,%dn,$-1
588f 588f s dacp14	=	$-1
588f 588f s 	endm
588f 588f s 	dn++
588f 588f s 	endm
588f 588f s 	samp_r
588f 588f d d9
588f 588f u 01 01
588f 588f s 	exx
5890 5890 d 19
5890 5890 u 01 01
5890 5890 s 	add	hl,de
5891 5891 d 4c
5891 5891 u 01 01
5891 5891 s 	ld	c,h
5892 5892 d 0a
5892 5892 u 01 01
5892 5892 s 	ld	a,(bc)
5893 5893 d d3b5
5893 5893 u 02 01
5893 5893 s 	out	(dac_r),a
5895 5895 s 	equval	dacp,%dn,$-1
5895 5895 s dacp15	=	$-1
5895 5895 s 	endm
5895 5895 s 	dn++
5895 5895 d d9
5895 5895 u 01 01
5895 5895 s 	exx
5896 5896 s 	endm
5896 5896 s 	endm
5896 5896 d 310d66
5896 5896 u 03 01
5896 5896 s 	ld	sp,param_29
5899 5899 s 	; Waste 7+4
5899 5899 d 00
5899 5899 u 01 01
5899 5899 s 	nop
589a 589a d 3e00
589a 589a u 02 01
589a 589a s 	ld	a,0
589c 589c d 3e00
589c 589c u 02 01
589c 589c s 	ld	a,0		; waste we can eliminate?
589e 589e d 3a0138
589e 589e u 03 01
589e 589e s 	ld	a,(k_B >> 8)
58a1 58a1 d e604
58a1 58a1 u 02 01
58a1 58a1 s 	and	k_B % $100
58a3 58a3 d c25f5c
58a3 58a3 u 03 01
58a3 58a3 s 	jp	nz,down_l
58a6 58a6 s ret_29:
58a6 58a6 s   endif
58a6 58a6 s 	endm
58a6 58a6 s 	endm
58a6 58a6 s 	key_l	21,k_H,g0@
58a6 58a6 s 	key	21,k_H,g0@,down_l
58a6 58a6 s   if parkey == 0
58a6 58a6 s param_21:
58a6 58a6 s   endif
58a6 58a6 s 
58a6 58a6 s   if parkey < 2
58a6 58a6 s 	defw	st_g0@
58a6 58a6 s   endif
58a6 58a6 s 
58a6 58a6 s   if parkey == 0
58a6 58a6 s 	defw	ret_21
58a6 58a6 s 	defw	$ff00+21
58a6 58a6 s   endif
58a6 58a6 s 
58a6 58a6 s   if parkey == 2
58a6 58a6 s 	cycle
58a6 58a6 s 	start_cycle
58a6 58a6 s diff	defl	sampcyc-t($)
58a6 58a6 s 	assert	t($) == sampcyc
58a6 58a6 s 	sett	0
58a6 58a6 s 	endm
58a6 58a6 s 	samp_l
58a6 58a6 d 19
58a6 58a6 u 01 01
58a6 58a6 s 	add	hl,de
58a7 58a7 d 4c
58a7 58a7 u 01 01
58a7 58a7 s 	ld	c,h
58a8 58a8 d 0a
58a8 58a8 u 01 01
58a8 58a8 s 	ld	a,(bc)
58a9 58a9 d d3b9
58a9 58a9 u 02 01
58a9 58a9 s 	out	(dac_l),a
58ab 58ab s 	equval	dacp,%dn,$-1
58ab 58ab s dacp16	=	$-1
58ab 58ab s 	endm
58ab 58ab s 	dn++
58ab 58ab s 	endm
58ab 58ab s 	samp_r
58ab 58ab d d9
58ab 58ab u 01 01
58ab 58ab s 	exx
58ac 58ac d 19
58ac 58ac u 01 01
58ac 58ac s 	add	hl,de
58ad 58ad d 4c
58ad 58ad u 01 01
58ad 58ad s 	ld	c,h
58ae 58ae d 0a
58ae 58ae u 01 01
58ae 58ae s 	ld	a,(bc)
58af 58af d d3b5
58af 58af u 02 01
58af 58af s 	out	(dac_r),a
58b1 58b1 s 	equval	dacp,%dn,$-1
58b1 58b1 s dacp17	=	$-1
58b1 58b1 s 	endm
58b1 58b1 s 	dn++
58b1 58b1 d d9
58b1 58b1 u 01 01
58b1 58b1 s 	exx
58b2 58b2 s 	endm
58b2 58b2 s 	endm
58b2 58b2 d 311366
58b2 58b2 u 03 01
58b2 58b2 s 	ld	sp,param_21
58b5 58b5 s 	; Waste 7+4
58b5 58b5 d 00
58b5 58b5 u 01 01
58b5 58b5 s 	nop
58b6 58b6 d 3e00
58b6 58b6 u 02 01
58b6 58b6 s 	ld	a,0
58b8 58b8 d 3e00
58b8 58b8 u 02 01
58b8 58b8 s 	ld	a,0		; waste we can eliminate?
58ba 58ba d 3a0238
58ba 58ba u 03 01
58ba 58ba s 	ld	a,(k_H >> 8)
58bd 58bd d e601
58bd 58bd u 02 01
58bd 58bd s 	and	k_H % $100
58bf 58bf d c25f5c
58bf 58bf u 03 01
58bf 58bf s 	jp	nz,down_l
58c2 58c2 s ret_21:
58c2 58c2 s   endif
58c2 58c2 s 	endm
58c2 58c2 s 	endm
58c2 58c2 s 	key_l	30,k_N,a0
58c2 58c2 s 	key	30,k_N,a0,down_l
58c2 58c2 s   if parkey == 0
58c2 58c2 s param_30:
58c2 58c2 s   endif
58c2 58c2 s 
58c2 58c2 s   if parkey < 2
58c2 58c2 s 	defw	st_a0
58c2 58c2 s   endif
58c2 58c2 s 
58c2 58c2 s   if parkey == 0
58c2 58c2 s 	defw	ret_30
58c2 58c2 s 	defw	$ff00+30
58c2 58c2 s   endif
58c2 58c2 s 
58c2 58c2 s   if parkey == 2
58c2 58c2 s 	cycle
58c2 58c2 s 	start_cycle
58c2 58c2 s diff	defl	sampcyc-t($)
58c2 58c2 s 	assert	t($) == sampcyc
58c2 58c2 s 	sett	0
58c2 58c2 s 	endm
58c2 58c2 s 	samp_l
58c2 58c2 d 19
58c2 58c2 u 01 01
58c2 58c2 s 	add	hl,de
58c3 58c3 d 4c
58c3 58c3 u 01 01
58c3 58c3 s 	ld	c,h
58c4 58c4 d 0a
58c4 58c4 u 01 01
58c4 58c4 s 	ld	a,(bc)
58c5 58c5 d d3b9
58c5 58c5 u 02 01
58c5 58c5 s 	out	(dac_l),a
58c7 58c7 s 	equval	dacp,%dn,$-1
58c7 58c7 s dacp18	=	$-1
58c7 58c7 s 	endm
58c7 58c7 s 	dn++
58c7 58c7 s 	endm
58c7 58c7 s 	samp_r
58c7 58c7 d d9
58c7 58c7 u 01 01
58c7 58c7 s 	exx
58c8 58c8 d 19
58c8 58c8 u 01 01
58c8 58c8 s 	add	hl,de
58c9 58c9 d 4c
58c9 58c9 u 01 01
58c9 58c9 s 	ld	c,h
58ca 58ca d 0a
58ca 58ca u 01 01
58ca 58ca s 	ld	a,(bc)
58cb 58cb d d3b5
58cb 58cb u 02 01
58cb 58cb s 	out	(dac_r),a
58cd 58cd s 	equval	dacp,%dn,$-1
58cd 58cd s dacp19	=	$-1
58cd 58cd s 	endm
58cd 58cd s 	dn++
58cd 58cd d d9
58cd 58cd u 01 01
58cd 58cd s 	exx
58ce 58ce s 	endm
58ce 58ce s 	endm
58ce 58ce d 311966
58ce 58ce u 03 01
58ce 58ce s 	ld	sp,param_30
58d1 58d1 s 	; Waste 7+4
58d1 58d1 d 00
58d1 58d1 u 01 01
58d1 58d1 s 	nop
58d2 58d2 d 3e00
58d2 58d2 u 02 01
58d2 58d2 s 	ld	a,0
58d4 58d4 d 3e00
58d4 58d4 u 02 01
58d4 58d4 s 	ld	a,0		; waste we can eliminate?
58d6 58d6 d 3a0238
58d6 58d6 u 03 01
58d6 58d6 s 	ld	a,(k_N >> 8)
58d9 58d9 d e640
58d9 58d9 u 02 01
58d9 58d9 s 	and	k_N % $100
58db 58db d c25f5c
58db 58db u 03 01
58db 58db s 	jp	nz,down_l
58de 58de s ret_30:
58de 58de s   endif
58de 58de s 	endm
58de 58de s 	endm
58de 58de s 	key_l	22,k_J,a0@
58de 58de s 	key	22,k_J,a0@,down_l
58de 58de s   if parkey == 0
58de 58de s param_22:
58de 58de s   endif
58de 58de s 
58de 58de s   if parkey < 2
58de 58de s 	defw	st_a0@
58de 58de s   endif
58de 58de s 
58de 58de s   if parkey == 0
58de 58de s 	defw	ret_22
58de 58de s 	defw	$ff00+22
58de 58de s   endif
58de 58de s 
58de 58de s   if parkey == 2
58de 58de s 	cycle
58de 58de s 	start_cycle
58de 58de s diff	defl	sampcyc-t($)
58de 58de s 	assert	t($) == sampcyc
58de 58de s 	sett	0
58de 58de s 	endm
58de 58de s 	samp_l
58de 58de d 19
58de 58de u 01 01
58de 58de s 	add	hl,de
58df 58df d 4c
58df 58df u 01 01
58df 58df s 	ld	c,h
58e0 58e0 d 0a
58e0 58e0 u 01 01
58e0 58e0 s 	ld	a,(bc)
58e1 58e1 d d3b9
58e1 58e1 u 02 01
58e1 58e1 s 	out	(dac_l),a
58e3 58e3 s 	equval	dacp,%dn,$-1
58e3 58e3 s dacp20	=	$-1
58e3 58e3 s 	endm
58e3 58e3 s 	dn++
58e3 58e3 s 	endm
58e3 58e3 s 	samp_r
58e3 58e3 d d9
58e3 58e3 u 01 01
58e3 58e3 s 	exx
58e4 58e4 d 19
58e4 58e4 u 01 01
58e4 58e4 s 	add	hl,de
58e5 58e5 d 4c
58e5 58e5 u 01 01
58e5 58e5 s 	ld	c,h
58e6 58e6 d 0a
58e6 58e6 u 01 01
58e6 58e6 s 	ld	a,(bc)
58e7 58e7 d d3b5
58e7 58e7 u 02 01
58e7 58e7 s 	out	(dac_r),a
58e9 58e9 s 	equval	dacp,%dn,$-1
58e9 58e9 s dacp21	=	$-1
58e9 58e9 s 	endm
58e9 58e9 s 	dn++
58e9 58e9 d d9
58e9 58e9 u 01 01
58e9 58e9 s 	exx
58ea 58ea s 	endm
58ea 58ea s 	endm
58ea 58ea d 311f66
58ea 58ea u 03 01
58ea 58ea s 	ld	sp,param_22
58ed 58ed s 	; Waste 7+4
58ed 58ed d 00
58ed 58ed u 01 01
58ed 58ed s 	nop
58ee 58ee d 3e00
58ee 58ee u 02 01
58ee 58ee s 	ld	a,0
58f0 58f0 d 3e00
58f0 58f0 u 02 01
58f0 58f0 s 	ld	a,0		; waste we can eliminate?
58f2 58f2 d 3a0238
58f2 58f2 u 03 01
58f2 58f2 s 	ld	a,(k_J >> 8)
58f5 58f5 d e604
58f5 58f5 u 02 01
58f5 58f5 s 	and	k_J % $100
58f7 58f7 d c25f5c
58f7 58f7 u 03 01
58f7 58f7 s 	jp	nz,down_l
58fa 58fa s ret_22:
58fa 58fa s   endif
58fa 58fa s 	endm
58fa 58fa s 	endm
58fa 58fa s 	key_l	31,k_M,b0
58fa 58fa s 	key	31,k_M,b0,down_l
58fa 58fa s   if parkey == 0
58fa 58fa s param_31:
58fa 58fa s   endif
58fa 58fa s 
58fa 58fa s   if parkey < 2
58fa 58fa s 	defw	st_b0
58fa 58fa s   endif
58fa 58fa s 
58fa 58fa s   if parkey == 0
58fa 58fa s 	defw	ret_31
58fa 58fa s 	defw	$ff00+31
58fa 58fa s   endif
58fa 58fa s 
58fa 58fa s   if parkey == 2
58fa 58fa s 	cycle
58fa 58fa s 	start_cycle
58fa 58fa s diff	defl	sampcyc-t($)
58fa 58fa s 	assert	t($) == sampcyc
58fa 58fa s 	sett	0
58fa 58fa s 	endm
58fa 58fa s 	samp_l
58fa 58fa d 19
58fa 58fa u 01 01
58fa 58fa s 	add	hl,de
58fb 58fb d 4c
58fb 58fb u 01 01
58fb 58fb s 	ld	c,h
58fc 58fc d 0a
58fc 58fc u 01 01
58fc 58fc s 	ld	a,(bc)
58fd 58fd d d3b9
58fd 58fd u 02 01
58fd 58fd s 	out	(dac_l),a
58ff 58ff s 	equval	dacp,%dn,$-1
58ff 58ff s dacp22	=	$-1
58ff 58ff s 	endm
58ff 58ff s 	dn++
58ff 58ff s 	endm
58ff 58ff s 	samp_r
58ff 58ff d d9
58ff 58ff u 01 01
58ff 58ff s 	exx
5900 5900 d 19
5900 5900 u 01 01
5900 5900 s 	add	hl,de
5901 5901 d 4c
5901 5901 u 01 01
5901 5901 s 	ld	c,h
5902 5902 d 0a
5902 5902 u 01 01
5902 5902 s 	ld	a,(bc)
5903 5903 d d3b5
5903 5903 u 02 01
5903 5903 s 	out	(dac_r),a
5905 5905 s 	equval	dacp,%dn,$-1
5905 5905 s dacp23	=	$-1
5905 5905 s 	endm
5905 5905 s 	dn++
5905 5905 d d9
5905 5905 u 01 01
5905 5905 s 	exx
5906 5906 s 	endm
5906 5906 s 	endm
5906 5906 d 312566
5906 5906 u 03 01
5906 5906 s 	ld	sp,param_31
5909 5909 s 	; Waste 7+4
5909 5909 d 00
5909 5909 u 01 01
5909 5909 s 	nop
590a 590a d 3e00
590a 590a u 02 01
590a 590a s 	ld	a,0
590c 590c d 3e00
590c 590c u 02 01
590c 590c s 	ld	a,0		; waste we can eliminate?
590e 590e d 3a0238
590e 590e u 03 01
590e 590e s 	ld	a,(k_M >> 8)
5911 5911 d e620
5911 5911 u 02 01
5911 5911 s 	and	k_M % $100
5913 5913 d c25f5c
5913 5913 u 03 01
5913 5913 s 	jp	nz,down_l
5916 5916 s ret_31:
5916 5916 s   endif
5916 5916 s 	endm
5916 5916 s 	endm
5916 5916 s 	key_l	32,k_comma,c1
5916 5916 s 	key	32,k_comma,c1,down_l
5916 5916 s   if parkey == 0
5916 5916 s param_32:
5916 5916 s   endif
5916 5916 s 
5916 5916 s   if parkey < 2
5916 5916 s 	defw	st_c1
5916 5916 s   endif
5916 5916 s 
5916 5916 s   if parkey == 0
5916 5916 s 	defw	ret_32
5916 5916 s 	defw	$ff00+32
5916 5916 s   endif
5916 5916 s 
5916 5916 s   if parkey == 2
5916 5916 s 	cycle
5916 5916 s 	start_cycle
5916 5916 s diff	defl	sampcyc-t($)
5916 5916 s 	assert	t($) == sampcyc
5916 5916 s 	sett	0
5916 5916 s 	endm
5916 5916 s 	samp_l
5916 5916 d 19
5916 5916 u 01 01
5916 5916 s 	add	hl,de
5917 5917 d 4c
5917 5917 u 01 01
5917 5917 s 	ld	c,h
5918 5918 d 0a
5918 5918 u 01 01
5918 5918 s 	ld	a,(bc)
5919 5919 d d3b9
5919 5919 u 02 01
5919 5919 s 	out	(dac_l),a
591b 591b s 	equval	dacp,%dn,$-1
591b 591b s dacp24	=	$-1
591b 591b s 	endm
591b 591b s 	dn++
591b 591b s 	endm
591b 591b s 	samp_r
591b 591b d d9
591b 591b u 01 01
591b 591b s 	exx
591c 591c d 19
591c 591c u 01 01
591c 591c s 	add	hl,de
591d 591d d 4c
591d 591d u 01 01
591d 591d s 	ld	c,h
591e 591e d 0a
591e 591e u 01 01
591e 591e s 	ld	a,(bc)
591f 591f d d3b5
591f 591f u 02 01
591f 591f s 	out	(dac_r),a
5921 5921 s 	equval	dacp,%dn,$-1
5921 5921 s dacp25	=	$-1
5921 5921 s 	endm
5921 5921 s 	dn++
5921 5921 d d9
5921 5921 u 01 01
5921 5921 s 	exx
5922 5922 s 	endm
5922 5922 s 	endm
5922 5922 d 312b66
5922 5922 u 03 01
5922 5922 s 	ld	sp,param_32
5925 5925 s 	; Waste 7+4
5925 5925 d 00
5925 5925 u 01 01
5925 5925 s 	nop
5926 5926 d 3e00
5926 5926 u 02 01
5926 5926 s 	ld	a,0
5928 5928 d 3e00
5928 5928 u 02 01
5928 5928 s 	ld	a,0		; waste we can eliminate?
592a 592a d 3a2038
592a 592a u 03 01
592a 592a s 	ld	a,(k_comma >> 8)
592d 592d d e610
592d 592d u 02 01
592d 592d s 	and	k_comma % $100
592f 592f d c25f5c
592f 592f u 03 01
592f 592f s 	jp	nz,down_l
5932 5932 s ret_32:
5932 5932 s   endif
5932 5932 s 	endm
5932 5932 s 	endm
5932 5932 s 	key_l	23,k_L,c1@
5932 5932 s 	key	23,k_L,c1@,down_l
5932 5932 s   if parkey == 0
5932 5932 s param_23:
5932 5932 s   endif
5932 5932 s 
5932 5932 s   if parkey < 2
5932 5932 s 	defw	st_c1@
5932 5932 s   endif
5932 5932 s 
5932 5932 s   if parkey == 0
5932 5932 s 	defw	ret_23
5932 5932 s 	defw	$ff00+23
5932 5932 s   endif
5932 5932 s 
5932 5932 s   if parkey == 2
5932 5932 s 	cycle
5932 5932 s 	start_cycle
5932 5932 s diff	defl	sampcyc-t($)
5932 5932 s 	assert	t($) == sampcyc
5932 5932 s 	sett	0
5932 5932 s 	endm
5932 5932 s 	samp_l
5932 5932 d 19
5932 5932 u 01 01
5932 5932 s 	add	hl,de
5933 5933 d 4c
5933 5933 u 01 01
5933 5933 s 	ld	c,h
5934 5934 d 0a
5934 5934 u 01 01
5934 5934 s 	ld	a,(bc)
5935 5935 d d3b9
5935 5935 u 02 01
5935 5935 s 	out	(dac_l),a
5937 5937 s 	equval	dacp,%dn,$-1
5937 5937 s dacp26	=	$-1
5937 5937 s 	endm
5937 5937 s 	dn++
5937 5937 s 	endm
5937 5937 s 	samp_r
5937 5937 d d9
5937 5937 u 01 01
5937 5937 s 	exx
5938 5938 d 19
5938 5938 u 01 01
5938 5938 s 	add	hl,de
5939 5939 d 4c
5939 5939 u 01 01
5939 5939 s 	ld	c,h
593a 593a d 0a
593a 593a u 01 01
593a 593a s 	ld	a,(bc)
593b 593b d d3b5
593b 593b u 02 01
593b 593b s 	out	(dac_r),a
593d 593d s 	equval	dacp,%dn,$-1
593d 593d s dacp27	=	$-1
593d 593d s 	endm
593d 593d s 	dn++
593d 593d d d9
593d 593d u 01 01
593d 593d s 	exx
593e 593e s 	endm
593e 593e s 	endm
593e 593e d 313166
593e 593e u 03 01
593e 593e s 	ld	sp,param_23
5941 5941 s 	; Waste 7+4
5941 5941 d 00
5941 5941 u 01 01
5941 5941 s 	nop
5942 5942 d 3e00
5942 5942 u 02 01
5942 5942 s 	ld	a,0
5944 5944 d 3e00
5944 5944 u 02 01
5944 5944 s 	ld	a,0		; waste we can eliminate?
5946 5946 d 3a0238
5946 5946 u 03 01
5946 5946 s 	ld	a,(k_L >> 8)
5949 5949 d e610
5949 5949 u 02 01
5949 5949 s 	and	k_L % $100
594b 594b d c25f5c
594b 594b u 03 01
594b 594b s 	jp	nz,down_l
594e 594e s ret_23:
594e 594e s   endif
594e 594e s 	endm
594e 594e s 	endm
594e 594e s 	key_l	33,k_dot,d1
594e 594e s 	key	33,k_dot,d1,down_l
594e 594e s   if parkey == 0
594e 594e s param_33:
594e 594e s   endif
594e 594e s 
594e 594e s   if parkey < 2
594e 594e s 	defw	st_d1
594e 594e s   endif
594e 594e s 
594e 594e s   if parkey == 0
594e 594e s 	defw	ret_33
594e 594e s 	defw	$ff00+33
594e 594e s   endif
594e 594e s 
594e 594e s   if parkey == 2
594e 594e s 	cycle
594e 594e s 	start_cycle
594e 594e s diff	defl	sampcyc-t($)
594e 594e s 	assert	t($) == sampcyc
594e 594e s 	sett	0
594e 594e s 	endm
594e 594e s 	samp_l
594e 594e d 19
594e 594e u 01 01
594e 594e s 	add	hl,de
594f 594f d 4c
594f 594f u 01 01
594f 594f s 	ld	c,h
5950 5950 d 0a
5950 5950 u 01 01
5950 5950 s 	ld	a,(bc)
5951 5951 d d3b9
5951 5951 u 02 01
5951 5951 s 	out	(dac_l),a
5953 5953 s 	equval	dacp,%dn,$-1
5953 5953 s dacp28	=	$-1
5953 5953 s 	endm
5953 5953 s 	dn++
5953 5953 s 	endm
5953 5953 s 	samp_r
5953 5953 d d9
5953 5953 u 01 01
5953 5953 s 	exx
5954 5954 d 19
5954 5954 u 01 01
5954 5954 s 	add	hl,de
5955 5955 d 4c
5955 5955 u 01 01
5955 5955 s 	ld	c,h
5956 5956 d 0a
5956 5956 u 01 01
5956 5956 s 	ld	a,(bc)
5957 5957 d d3b5
5957 5957 u 02 01
5957 5957 s 	out	(dac_r),a
5959 5959 s 	equval	dacp,%dn,$-1
5959 5959 s dacp29	=	$-1
5959 5959 s 	endm
5959 5959 s 	dn++
5959 5959 d d9
5959 5959 u 01 01
5959 5959 s 	exx
595a 595a s 	endm
595a 595a s 	endm
595a 595a d 313766
595a 595a u 03 01
595a 595a s 	ld	sp,param_33
595d 595d s 	; Waste 7+4
595d 595d d 00
595d 595d u 01 01
595d 595d s 	nop
595e 595e d 3e00
595e 595e u 02 01
595e 595e s 	ld	a,0
5960 5960 d 3e00
5960 5960 u 02 01
5960 5960 s 	ld	a,0		; waste we can eliminate?
5962 5962 d 3a2038
5962 5962 u 03 01
5962 5962 s 	ld	a,(k_dot >> 8)
5965 5965 d e640
5965 5965 u 02 01
5965 5965 s 	and	k_dot % $100
5967 5967 d c25f5c
5967 5967 u 03 01
5967 5967 s 	jp	nz,down_l
596a 596a s ret_33:
596a 596a s   endif
596a 596a s 	endm
596a 596a s 	endm
596a 596a s 	key_l	24,k_semi,d1@
596a 596a s 	key	24,k_semi,d1@,down_l
596a 596a s   if parkey == 0
596a 596a s param_24:
596a 596a s   endif
596a 596a s 
596a 596a s   if parkey < 2
596a 596a s 	defw	st_d1@
596a 596a s   endif
596a 596a s 
596a 596a s   if parkey == 0
596a 596a s 	defw	ret_24
596a 596a s 	defw	$ff00+24
596a 596a s   endif
596a 596a s 
596a 596a s   if parkey == 2
596a 596a s 	cycle
596a 596a s 	start_cycle
596a 596a s diff	defl	sampcyc-t($)
596a 596a s 	assert	t($) == sampcyc
596a 596a s 	sett	0
596a 596a s 	endm
596a 596a s 	samp_l
596a 596a d 19
596a 596a u 01 01
596a 596a s 	add	hl,de
596b 596b d 4c
596b 596b u 01 01
596b 596b s 	ld	c,h
596c 596c d 0a
596c 596c u 01 01
596c 596c s 	ld	a,(bc)
596d 596d d d3b9
596d 596d u 02 01
596d 596d s 	out	(dac_l),a
596f 596f s 	equval	dacp,%dn,$-1
596f 596f s dacp30	=	$-1
596f 596f s 	endm
596f 596f s 	dn++
596f 596f s 	endm
596f 596f s 	samp_r
596f 596f d d9
596f 596f u 01 01
596f 596f s 	exx
5970 5970 d 19
5970 5970 u 01 01
5970 5970 s 	add	hl,de
5971 5971 d 4c
5971 5971 u 01 01
5971 5971 s 	ld	c,h
5972 5972 d 0a
5972 5972 u 01 01
5972 5972 s 	ld	a,(bc)
5973 5973 d d3b5
5973 5973 u 02 01
5973 5973 s 	out	(dac_r),a
5975 5975 s 	equval	dacp,%dn,$-1
5975 5975 s dacp31	=	$-1
5975 5975 s 	endm
5975 5975 s 	dn++
5975 5975 d d9
5975 5975 u 01 01
5975 5975 s 	exx
5976 5976 s 	endm
5976 5976 s 	endm
5976 5976 d 313d66
5976 5976 u 03 01
5976 5976 s 	ld	sp,param_24
5979 5979 s 	; Waste 7+4
5979 5979 d 00
5979 5979 u 01 01
5979 5979 s 	nop
597a 597a d 3e00
597a 597a u 02 01
597a 597a s 	ld	a,0
597c 597c d 3e00
597c 597c u 02 01
597c 597c s 	ld	a,0		; waste we can eliminate?
597e 597e d 3a2038
597e 597e u 03 01
597e 597e s 	ld	a,(k_semi >> 8)
5981 5981 d e608
5981 5981 u 02 01
5981 5981 s 	and	k_semi % $100
5983 5983 d c25f5c
5983 5983 u 03 01
5983 5983 s 	jp	nz,down_l
5986 5986 s ret_24:
5986 5986 s   endif
5986 5986 s 	endm
5986 5986 s 	endm
5986 5986 s 	key_l	34,k_slash,e1
5986 5986 s 	key	34,k_slash,e1,down_l
5986 5986 s   if parkey == 0
5986 5986 s param_34:
5986 5986 s   endif
5986 5986 s 
5986 5986 s   if parkey < 2
5986 5986 s 	defw	st_e1
5986 5986 s   endif
5986 5986 s 
5986 5986 s   if parkey == 0
5986 5986 s 	defw	ret_34
5986 5986 s 	defw	$ff00+34
5986 5986 s   endif
5986 5986 s 
5986 5986 s   if parkey == 2
5986 5986 s 	cycle
5986 5986 s 	start_cycle
5986 5986 s diff	defl	sampcyc-t($)
5986 5986 s 	assert	t($) == sampcyc
5986 5986 s 	sett	0
5986 5986 s 	endm
5986 5986 s 	samp_l
5986 5986 d 19
5986 5986 u 01 01
5986 5986 s 	add	hl,de
5987 5987 d 4c
5987 5987 u 01 01
5987 5987 s 	ld	c,h
5988 5988 d 0a
5988 5988 u 01 01
5988 5988 s 	ld	a,(bc)
5989 5989 d d3b9
5989 5989 u 02 01
5989 5989 s 	out	(dac_l),a
598b 598b s 	equval	dacp,%dn,$-1
598b 598b s dacp32	=	$-1
598b 598b s 	endm
598b 598b s 	dn++
598b 598b s 	endm
598b 598b s 	samp_r
598b 598b d d9
598b 598b u 01 01
598b 598b s 	exx
598c 598c d 19
598c 598c u 01 01
598c 598c s 	add	hl,de
598d 598d d 4c
598d 598d u 01 01
598d 598d s 	ld	c,h
598e 598e d 0a
598e 598e u 01 01
598e 598e s 	ld	a,(bc)
598f 598f d d3b5
598f 598f u 02 01
598f 598f s 	out	(dac_r),a
5991 5991 s 	equval	dacp,%dn,$-1
5991 5991 s dacp33	=	$-1
5991 5991 s 	endm
5991 5991 s 	dn++
5991 5991 d d9
5991 5991 u 01 01
5991 5991 s 	exx
5992 5992 s 	endm
5992 5992 s 	endm
5992 5992 d 314366
5992 5992 u 03 01
5992 5992 s 	ld	sp,param_34
5995 5995 s 	; Waste 7+4
5995 5995 d 00
5995 5995 u 01 01
5995 5995 s 	nop
5996 5996 d 3e00
5996 5996 u 02 01
5996 5996 s 	ld	a,0
5998 5998 d 3e00
5998 5998 u 02 01
5998 5998 s 	ld	a,0		; waste we can eliminate?
599a 599a d 3a2038
599a 599a u 03 01
599a 599a s 	ld	a,(k_slash >> 8)
599d 599d d e680
599d 599d u 02 01
599d 599d s 	and	k_slash % $100
599f 599f d c25f5c
599f 599f u 03 01
599f 599f s 	jp	nz,down_l
59a2 59a2 s ret_34:
59a2 59a2 s   endif
59a2 59a2 s 	endm
59a2 59a2 s 	endm
59a2 59a2 s 
59a2 59a2 s 	key_r	07,k_Q,c1
59a2 59a2 s 	key	07,k_Q,c1,down_r
59a2 59a2 s   if parkey == 0
59a2 59a2 s param_07:
59a2 59a2 s   endif
59a2 59a2 s 
59a2 59a2 s   if parkey < 2
59a2 59a2 s 	defw	st_c1
59a2 59a2 s   endif
59a2 59a2 s 
59a2 59a2 s   if parkey == 0
59a2 59a2 s 	defw	ret_07
59a2 59a2 s 	defw	$ff00+07
59a2 59a2 s   endif
59a2 59a2 s 
59a2 59a2 s   if parkey == 2
59a2 59a2 s 	cycle
59a2 59a2 s 	start_cycle
59a2 59a2 s diff	defl	sampcyc-t($)
59a2 59a2 s 	assert	t($) == sampcyc
59a2 59a2 s 	sett	0
59a2 59a2 s 	endm
59a2 59a2 s 	samp_l
59a2 59a2 d 19
59a2 59a2 u 01 01
59a2 59a2 s 	add	hl,de
59a3 59a3 d 4c
59a3 59a3 u 01 01
59a3 59a3 s 	ld	c,h
59a4 59a4 d 0a
59a4 59a4 u 01 01
59a4 59a4 s 	ld	a,(bc)
59a5 59a5 d d3b9
59a5 59a5 u 02 01
59a5 59a5 s 	out	(dac_l),a
59a7 59a7 s 	equval	dacp,%dn,$-1
59a7 59a7 s dacp34	=	$-1
59a7 59a7 s 	endm
59a7 59a7 s 	dn++
59a7 59a7 s 	endm
59a7 59a7 s 	samp_r
59a7 59a7 d d9
59a7 59a7 u 01 01
59a7 59a7 s 	exx
59a8 59a8 d 19
59a8 59a8 u 01 01
59a8 59a8 s 	add	hl,de
59a9 59a9 d 4c
59a9 59a9 u 01 01
59a9 59a9 s 	ld	c,h
59aa 59aa d 0a
59aa 59aa u 01 01
59aa 59aa s 	ld	a,(bc)
59ab 59ab d d3b5
59ab 59ab u 02 01
59ab 59ab s 	out	(dac_r),a
59ad 59ad s 	equval	dacp,%dn,$-1
59ad 59ad s dacp35	=	$-1
59ad 59ad s 	endm
59ad 59ad s 	dn++
59ad 59ad d d9
59ad 59ad u 01 01
59ad 59ad s 	exx
59ae 59ae s 	endm
59ae 59ae s 	endm
59ae 59ae d 314966
59ae 59ae u 03 01
59ae 59ae s 	ld	sp,param_07
59b1 59b1 s 	; Waste 7+4
59b1 59b1 d 00
59b1 59b1 u 01 01
59b1 59b1 s 	nop
59b2 59b2 d 3e00
59b2 59b2 u 02 01
59b2 59b2 s 	ld	a,0
59b4 59b4 d 3e00
59b4 59b4 u 02 01
59b4 59b4 s 	ld	a,0		; waste we can eliminate?
59b6 59b6 d 3a0438
59b6 59b6 u 03 01
59b6 59b6 s 	ld	a,(k_Q >> 8)
59b9 59b9 d e602
59b9 59b9 u 02 01
59b9 59b9 s 	and	k_Q % $100
59bb 59bb d c2615d
59bb 59bb u 03 01
59bb 59bb s 	jp	nz,down_r
59be 59be s ret_07:
59be 59be s   endif
59be 59be s 	endm
59be 59be s 	endm
59be 59be s 	key_r	00,k_2,c1@
59be 59be s 	key	00,k_2,c1@,down_r
59be 59be s   if parkey == 0
59be 59be s param_00:
59be 59be s   endif
59be 59be s 
59be 59be s   if parkey < 2
59be 59be s 	defw	st_c1@
59be 59be s   endif
59be 59be s 
59be 59be s   if parkey == 0
59be 59be s 	defw	ret_00
59be 59be s 	defw	$ff00+00
59be 59be s   endif
59be 59be s 
59be 59be s   if parkey == 2
59be 59be s 	cycle
59be 59be s 	start_cycle
59be 59be s diff	defl	sampcyc-t($)
59be 59be s 	assert	t($) == sampcyc
59be 59be s 	sett	0
59be 59be s 	endm
59be 59be s 	samp_l
59be 59be d 19
59be 59be u 01 01
59be 59be s 	add	hl,de
59bf 59bf d 4c
59bf 59bf u 01 01
59bf 59bf s 	ld	c,h
59c0 59c0 d 0a
59c0 59c0 u 01 01
59c0 59c0 s 	ld	a,(bc)
59c1 59c1 d d3b9
59c1 59c1 u 02 01
59c1 59c1 s 	out	(dac_l),a
59c3 59c3 s 	equval	dacp,%dn,$-1
59c3 59c3 s dacp36	=	$-1
59c3 59c3 s 	endm
59c3 59c3 s 	dn++
59c3 59c3 s 	endm
59c3 59c3 s 	samp_r
59c3 59c3 d d9
59c3 59c3 u 01 01
59c3 59c3 s 	exx
59c4 59c4 d 19
59c4 59c4 u 01 01
59c4 59c4 s 	add	hl,de
59c5 59c5 d 4c
59c5 59c5 u 01 01
59c5 59c5 s 	ld	c,h
59c6 59c6 d 0a
59c6 59c6 u 01 01
59c6 59c6 s 	ld	a,(bc)
59c7 59c7 d d3b5
59c7 59c7 u 02 01
59c7 59c7 s 	out	(dac_r),a
59c9 59c9 s 	equval	dacp,%dn,$-1
59c9 59c9 s dacp37	=	$-1
59c9 59c9 s 	endm
59c9 59c9 s 	dn++
59c9 59c9 d d9
59c9 59c9 u 01 01
59c9 59c9 s 	exx
59ca 59ca s 	endm
59ca 59ca s 	endm
59ca 59ca d 314f66
59ca 59ca u 03 01
59ca 59ca s 	ld	sp,param_00
59cd 59cd s 	; Waste 7+4
59cd 59cd d 00
59cd 59cd u 01 01
59cd 59cd s 	nop
59ce 59ce d 3e00
59ce 59ce u 02 01
59ce 59ce s 	ld	a,0
59d0 59d0 d 3e00
59d0 59d0 u 02 01
59d0 59d0 s 	ld	a,0		; waste we can eliminate?
59d2 59d2 d 3a1038
59d2 59d2 u 03 01
59d2 59d2 s 	ld	a,(k_2 >> 8)
59d5 59d5 d e604
59d5 59d5 u 02 01
59d5 59d5 s 	and	k_2 % $100
59d7 59d7 d c2615d
59d7 59d7 u 03 01
59d7 59d7 s 	jp	nz,down_r
59da 59da s ret_00:
59da 59da s   endif
59da 59da s 	endm
59da 59da s 	endm
59da 59da s 	key_r	08,k_W,d1
59da 59da s 	key	08,k_W,d1,down_r
59da 59da s   if parkey == 0
59da 59da s param_08:
59da 59da s   endif
59da 59da s 
59da 59da s   if parkey < 2
59da 59da s 	defw	st_d1
59da 59da s   endif
59da 59da s 
59da 59da s   if parkey == 0
59da 59da s 	defw	ret_08
59da 59da s 	defw	$ff00+08
59da 59da s   endif
59da 59da s 
59da 59da s   if parkey == 2
59da 59da s 	cycle
59da 59da s 	start_cycle
59da 59da s diff	defl	sampcyc-t($)
59da 59da s 	assert	t($) == sampcyc
59da 59da s 	sett	0
59da 59da s 	endm
59da 59da s 	samp_l
59da 59da d 19
59da 59da u 01 01
59da 59da s 	add	hl,de
59db 59db d 4c
59db 59db u 01 01
59db 59db s 	ld	c,h
59dc 59dc d 0a
59dc 59dc u 01 01
59dc 59dc s 	ld	a,(bc)
59dd 59dd d d3b9
59dd 59dd u 02 01
59dd 59dd s 	out	(dac_l),a
59df 59df s 	equval	dacp,%dn,$-1
59df 59df s dacp38	=	$-1
59df 59df s 	endm
59df 59df s 	dn++
59df 59df s 	endm
59df 59df s 	samp_r
59df 59df d d9
59df 59df u 01 01
59df 59df s 	exx
59e0 59e0 d 19
59e0 59e0 u 01 01
59e0 59e0 s 	add	hl,de
59e1 59e1 d 4c
59e1 59e1 u 01 01
59e1 59e1 s 	ld	c,h
59e2 59e2 d 0a
59e2 59e2 u 01 01
59e2 59e2 s 	ld	a,(bc)
59e3 59e3 d d3b5
59e3 59e3 u 02 01
59e3 59e3 s 	out	(dac_r),a
59e5 59e5 s 	equval	dacp,%dn,$-1
59e5 59e5 s dacp39	=	$-1
59e5 59e5 s 	endm
59e5 59e5 s 	dn++
59e5 59e5 d d9
59e5 59e5 u 01 01
59e5 59e5 s 	exx
59e6 59e6 s 	endm
59e6 59e6 s 	endm
59e6 59e6 d 315566
59e6 59e6 u 03 01
59e6 59e6 s 	ld	sp,param_08
59e9 59e9 s 	; Waste 7+4
59e9 59e9 d 00
59e9 59e9 u 01 01
59e9 59e9 s 	nop
59ea 59ea d 3e00
59ea 59ea u 02 01
59ea 59ea s 	ld	a,0
59ec 59ec d 3e00
59ec 59ec u 02 01
59ec 59ec s 	ld	a,0		; waste we can eliminate?
59ee 59ee d 3a0438
59ee 59ee u 03 01
59ee 59ee s 	ld	a,(k_W >> 8)
59f1 59f1 d e680
59f1 59f1 u 02 01
59f1 59f1 s 	and	k_W % $100
59f3 59f3 d c2615d
59f3 59f3 u 03 01
59f3 59f3 s 	jp	nz,down_r
59f6 59f6 s ret_08:
59f6 59f6 s   endif
59f6 59f6 s 	endm
59f6 59f6 s 	endm
59f6 59f6 s 	key_r	01,k_3,d1@
59f6 59f6 s 	key	01,k_3,d1@,down_r
59f6 59f6 s   if parkey == 0
59f6 59f6 s param_01:
59f6 59f6 s   endif
59f6 59f6 s 
59f6 59f6 s   if parkey < 2
59f6 59f6 s 	defw	st_d1@
59f6 59f6 s   endif
59f6 59f6 s 
59f6 59f6 s   if parkey == 0
59f6 59f6 s 	defw	ret_01
59f6 59f6 s 	defw	$ff00+01
59f6 59f6 s   endif
59f6 59f6 s 
59f6 59f6 s   if parkey == 2
59f6 59f6 s 	cycle
59f6 59f6 s 	start_cycle
59f6 59f6 s diff	defl	sampcyc-t($)
59f6 59f6 s 	assert	t($) == sampcyc
59f6 59f6 s 	sett	0
59f6 59f6 s 	endm
59f6 59f6 s 	samp_l
59f6 59f6 d 19
59f6 59f6 u 01 01
59f6 59f6 s 	add	hl,de
59f7 59f7 d 4c
59f7 59f7 u 01 01
59f7 59f7 s 	ld	c,h
59f8 59f8 d 0a
59f8 59f8 u 01 01
59f8 59f8 s 	ld	a,(bc)
59f9 59f9 d d3b9
59f9 59f9 u 02 01
59f9 59f9 s 	out	(dac_l),a
59fb 59fb s 	equval	dacp,%dn,$-1
59fb 59fb s dacp40	=	$-1
59fb 59fb s 	endm
59fb 59fb s 	dn++
59fb 59fb s 	endm
59fb 59fb s 	samp_r
59fb 59fb d d9
59fb 59fb u 01 01
59fb 59fb s 	exx
59fc 59fc d 19
59fc 59fc u 01 01
59fc 59fc s 	add	hl,de
59fd 59fd d 4c
59fd 59fd u 01 01
59fd 59fd s 	ld	c,h
59fe 59fe d 0a
59fe 59fe u 01 01
59fe 59fe s 	ld	a,(bc)
59ff 59ff d d3b5
59ff 59ff u 02 01
59ff 59ff s 	out	(dac_r),a
5a01 5a01 s 	equval	dacp,%dn,$-1
5a01 5a01 s dacp41	=	$-1
5a01 5a01 s 	endm
5a01 5a01 s 	dn++
5a01 5a01 d d9
5a01 5a01 u 01 01
5a01 5a01 s 	exx
5a02 5a02 s 	endm
5a02 5a02 s 	endm
5a02 5a02 d 315b66
5a02 5a02 u 03 01
5a02 5a02 s 	ld	sp,param_01
5a05 5a05 s 	; Waste 7+4
5a05 5a05 d 00
5a05 5a05 u 01 01
5a05 5a05 s 	nop
5a06 5a06 d 3e00
5a06 5a06 u 02 01
5a06 5a06 s 	ld	a,0
5a08 5a08 d 3e00
5a08 5a08 u 02 01
5a08 5a08 s 	ld	a,0		; waste we can eliminate?
5a0a 5a0a d 3a1038
5a0a 5a0a u 03 01
5a0a 5a0a s 	ld	a,(k_3 >> 8)
5a0d 5a0d d e608
5a0d 5a0d u 02 01
5a0d 5a0d s 	and	k_3 % $100
5a0f 5a0f d c2615d
5a0f 5a0f u 03 01
5a0f 5a0f s 	jp	nz,down_r
5a12 5a12 s ret_01:
5a12 5a12 s   endif
5a12 5a12 s 	endm
5a12 5a12 s 	endm
5a12 5a12 s 	key_r	09,k_E,e1
5a12 5a12 s 	key	09,k_E,e1,down_r
5a12 5a12 s   if parkey == 0
5a12 5a12 s param_09:
5a12 5a12 s   endif
5a12 5a12 s 
5a12 5a12 s   if parkey < 2
5a12 5a12 s 	defw	st_e1
5a12 5a12 s   endif
5a12 5a12 s 
5a12 5a12 s   if parkey == 0
5a12 5a12 s 	defw	ret_09
5a12 5a12 s 	defw	$ff00+09
5a12 5a12 s   endif
5a12 5a12 s 
5a12 5a12 s   if parkey == 2
5a12 5a12 s 	cycle
5a12 5a12 s 	start_cycle
5a12 5a12 s diff	defl	sampcyc-t($)
5a12 5a12 s 	assert	t($) == sampcyc
5a12 5a12 s 	sett	0
5a12 5a12 s 	endm
5a12 5a12 s 	samp_l
5a12 5a12 d 19
5a12 5a12 u 01 01
5a12 5a12 s 	add	hl,de
5a13 5a13 d 4c
5a13 5a13 u 01 01
5a13 5a13 s 	ld	c,h
5a14 5a14 d 0a
5a14 5a14 u 01 01
5a14 5a14 s 	ld	a,(bc)
5a15 5a15 d d3b9
5a15 5a15 u 02 01
5a15 5a15 s 	out	(dac_l),a
5a17 5a17 s 	equval	dacp,%dn,$-1
5a17 5a17 s dacp42	=	$-1
5a17 5a17 s 	endm
5a17 5a17 s 	dn++
5a17 5a17 s 	endm
5a17 5a17 s 	samp_r
5a17 5a17 d d9
5a17 5a17 u 01 01
5a17 5a17 s 	exx
5a18 5a18 d 19
5a18 5a18 u 01 01
5a18 5a18 s 	add	hl,de
5a19 5a19 d 4c
5a19 5a19 u 01 01
5a19 5a19 s 	ld	c,h
5a1a 5a1a d 0a
5a1a 5a1a u 01 01
5a1a 5a1a s 	ld	a,(bc)
5a1b 5a1b d d3b5
5a1b 5a1b u 02 01
5a1b 5a1b s 	out	(dac_r),a
5a1d 5a1d s 	equval	dacp,%dn,$-1
5a1d 5a1d s dacp43	=	$-1
5a1d 5a1d s 	endm
5a1d 5a1d s 	dn++
5a1d 5a1d d d9
5a1d 5a1d u 01 01
5a1d 5a1d s 	exx
5a1e 5a1e s 	endm
5a1e 5a1e s 	endm
5a1e 5a1e d 316166
5a1e 5a1e u 03 01
5a1e 5a1e s 	ld	sp,param_09
5a21 5a21 s 	; Waste 7+4
5a21 5a21 d 00
5a21 5a21 u 01 01
5a21 5a21 s 	nop
5a22 5a22 d 3e00
5a22 5a22 u 02 01
5a22 5a22 s 	ld	a,0
5a24 5a24 d 3e00
5a24 5a24 u 02 01
5a24 5a24 s 	ld	a,0		; waste we can eliminate?
5a26 5a26 d 3a0138
5a26 5a26 u 03 01
5a26 5a26 s 	ld	a,(k_E >> 8)
5a29 5a29 d e620
5a29 5a29 u 02 01
5a29 5a29 s 	and	k_E % $100
5a2b 5a2b d c2615d
5a2b 5a2b u 03 01
5a2b 5a2b s 	jp	nz,down_r
5a2e 5a2e s ret_09:
5a2e 5a2e s   endif
5a2e 5a2e s 	endm
5a2e 5a2e s 	endm
5a2e 5a2e s 	key_r	10,k_R,f1
5a2e 5a2e s 	key	10,k_R,f1,down_r
5a2e 5a2e s   if parkey == 0
5a2e 5a2e s param_10:
5a2e 5a2e s   endif
5a2e 5a2e s 
5a2e 5a2e s   if parkey < 2
5a2e 5a2e s 	defw	st_f1
5a2e 5a2e s   endif
5a2e 5a2e s 
5a2e 5a2e s   if parkey == 0
5a2e 5a2e s 	defw	ret_10
5a2e 5a2e s 	defw	$ff00+10
5a2e 5a2e s   endif
5a2e 5a2e s 
5a2e 5a2e s   if parkey == 2
5a2e 5a2e s 	cycle
5a2e 5a2e s 	start_cycle
5a2e 5a2e s diff	defl	sampcyc-t($)
5a2e 5a2e s 	assert	t($) == sampcyc
5a2e 5a2e s 	sett	0
5a2e 5a2e s 	endm
5a2e 5a2e s 	samp_l
5a2e 5a2e d 19
5a2e 5a2e u 01 01
5a2e 5a2e s 	add	hl,de
5a2f 5a2f d 4c
5a2f 5a2f u 01 01
5a2f 5a2f s 	ld	c,h
5a30 5a30 d 0a
5a30 5a30 u 01 01
5a30 5a30 s 	ld	a,(bc)
5a31 5a31 d d3b9
5a31 5a31 u 02 01
5a31 5a31 s 	out	(dac_l),a
5a33 5a33 s 	equval	dacp,%dn,$-1
5a33 5a33 s dacp44	=	$-1
5a33 5a33 s 	endm
5a33 5a33 s 	dn++
5a33 5a33 s 	endm
5a33 5a33 s 	samp_r
5a33 5a33 d d9
5a33 5a33 u 01 01
5a33 5a33 s 	exx
5a34 5a34 d 19
5a34 5a34 u 01 01
5a34 5a34 s 	add	hl,de
5a35 5a35 d 4c
5a35 5a35 u 01 01
5a35 5a35 s 	ld	c,h
5a36 5a36 d 0a
5a36 5a36 u 01 01
5a36 5a36 s 	ld	a,(bc)
5a37 5a37 d d3b5
5a37 5a37 u 02 01
5a37 5a37 s 	out	(dac_r),a
5a39 5a39 s 	equval	dacp,%dn,$-1
5a39 5a39 s dacp45	=	$-1
5a39 5a39 s 	endm
5a39 5a39 s 	dn++
5a39 5a39 d d9
5a39 5a39 u 01 01
5a39 5a39 s 	exx
5a3a 5a3a s 	endm
5a3a 5a3a s 	endm
5a3a 5a3a d 316766
5a3a 5a3a u 03 01
5a3a 5a3a s 	ld	sp,param_10
5a3d 5a3d s 	; Waste 7+4
5a3d 5a3d d 00
5a3d 5a3d u 01 01
5a3d 5a3d s 	nop
5a3e 5a3e d 3e00
5a3e 5a3e u 02 01
5a3e 5a3e s 	ld	a,0
5a40 5a40 d 3e00
5a40 5a40 u 02 01
5a40 5a40 s 	ld	a,0		; waste we can eliminate?
5a42 5a42 d 3a0438
5a42 5a42 u 03 01
5a42 5a42 s 	ld	a,(k_R >> 8)
5a45 5a45 d e604
5a45 5a45 u 02 01
5a45 5a45 s 	and	k_R % $100
5a47 5a47 d c2615d
5a47 5a47 u 03 01
5a47 5a47 s 	jp	nz,down_r
5a4a 5a4a s ret_10:
5a4a 5a4a s   endif
5a4a 5a4a s 	endm
5a4a 5a4a s 	endm
5a4a 5a4a s 	key_r	02,k_5,f1@
5a4a 5a4a s 	key	02,k_5,f1@,down_r
5a4a 5a4a s   if parkey == 0
5a4a 5a4a s param_02:
5a4a 5a4a s   endif
5a4a 5a4a s 
5a4a 5a4a s   if parkey < 2
5a4a 5a4a s 	defw	st_f1@
5a4a 5a4a s   endif
5a4a 5a4a s 
5a4a 5a4a s   if parkey == 0
5a4a 5a4a s 	defw	ret_02
5a4a 5a4a s 	defw	$ff00+02
5a4a 5a4a s   endif
5a4a 5a4a s 
5a4a 5a4a s   if parkey == 2
5a4a 5a4a s 	cycle
5a4a 5a4a s 	start_cycle
5a4a 5a4a s diff	defl	sampcyc-t($)
5a4a 5a4a s 	assert	t($) == sampcyc
5a4a 5a4a s 	sett	0
5a4a 5a4a s 	endm
5a4a 5a4a s 	samp_l
5a4a 5a4a d 19
5a4a 5a4a u 01 01
5a4a 5a4a s 	add	hl,de
5a4b 5a4b d 4c
5a4b 5a4b u 01 01
5a4b 5a4b s 	ld	c,h
5a4c 5a4c d 0a
5a4c 5a4c u 01 01
5a4c 5a4c s 	ld	a,(bc)
5a4d 5a4d d d3b9
5a4d 5a4d u 02 01
5a4d 5a4d s 	out	(dac_l),a
5a4f 5a4f s 	equval	dacp,%dn,$-1
5a4f 5a4f s dacp46	=	$-1
5a4f 5a4f s 	endm
5a4f 5a4f s 	dn++
5a4f 5a4f s 	endm
5a4f 5a4f s 	samp_r
5a4f 5a4f d d9
5a4f 5a4f u 01 01
5a4f 5a4f s 	exx
5a50 5a50 d 19
5a50 5a50 u 01 01
5a50 5a50 s 	add	hl,de
5a51 5a51 d 4c
5a51 5a51 u 01 01
5a51 5a51 s 	ld	c,h
5a52 5a52 d 0a
5a52 5a52 u 01 01
5a52 5a52 s 	ld	a,(bc)
5a53 5a53 d d3b5
5a53 5a53 u 02 01
5a53 5a53 s 	out	(dac_r),a
5a55 5a55 s 	equval	dacp,%dn,$-1
5a55 5a55 s dacp47	=	$-1
5a55 5a55 s 	endm
5a55 5a55 s 	dn++
5a55 5a55 d d9
5a55 5a55 u 01 01
5a55 5a55 s 	exx
5a56 5a56 s 	endm
5a56 5a56 s 	endm
5a56 5a56 d 316d66
5a56 5a56 u 03 01
5a56 5a56 s 	ld	sp,param_02
5a59 5a59 s 	; Waste 7+4
5a59 5a59 d 00
5a59 5a59 u 01 01
5a59 5a59 s 	nop
5a5a 5a5a d 3e00
5a5a 5a5a u 02 01
5a5a 5a5a s 	ld	a,0
5a5c 5a5c d 3e00
5a5c 5a5c u 02 01
5a5c 5a5c s 	ld	a,0		; waste we can eliminate?
5a5e 5a5e d 3a1038
5a5e 5a5e u 03 01
5a5e 5a5e s 	ld	a,(k_5 >> 8)
5a61 5a61 d e620
5a61 5a61 u 02 01
5a61 5a61 s 	and	k_5 % $100
5a63 5a63 d c2615d
5a63 5a63 u 03 01
5a63 5a63 s 	jp	nz,down_r
5a66 5a66 s ret_02:
5a66 5a66 s   endif
5a66 5a66 s 	endm
5a66 5a66 s 	endm
5a66 5a66 s 	key_r	11,k_T,g1
5a66 5a66 s 	key	11,k_T,g1,down_r
5a66 5a66 s   if parkey == 0
5a66 5a66 s param_11:
5a66 5a66 s   endif
5a66 5a66 s 
5a66 5a66 s   if parkey < 2
5a66 5a66 s 	defw	st_g1
5a66 5a66 s   endif
5a66 5a66 s 
5a66 5a66 s   if parkey == 0
5a66 5a66 s 	defw	ret_11
5a66 5a66 s 	defw	$ff00+11
5a66 5a66 s   endif
5a66 5a66 s 
5a66 5a66 s   if parkey == 2
5a66 5a66 s 	cycle
5a66 5a66 s 	start_cycle
5a66 5a66 s diff	defl	sampcyc-t($)
5a66 5a66 s 	assert	t($) == sampcyc
5a66 5a66 s 	sett	0
5a66 5a66 s 	endm
5a66 5a66 s 	samp_l
5a66 5a66 d 19
5a66 5a66 u 01 01
5a66 5a66 s 	add	hl,de
5a67 5a67 d 4c
5a67 5a67 u 01 01
5a67 5a67 s 	ld	c,h
5a68 5a68 d 0a
5a68 5a68 u 01 01
5a68 5a68 s 	ld	a,(bc)
5a69 5a69 d d3b9
5a69 5a69 u 02 01
5a69 5a69 s 	out	(dac_l),a
5a6b 5a6b s 	equval	dacp,%dn,$-1
5a6b 5a6b s dacp48	=	$-1
5a6b 5a6b s 	endm
5a6b 5a6b s 	dn++
5a6b 5a6b s 	endm
5a6b 5a6b s 	samp_r
5a6b 5a6b d d9
5a6b 5a6b u 01 01
5a6b 5a6b s 	exx
5a6c 5a6c d 19
5a6c 5a6c u 01 01
5a6c 5a6c s 	add	hl,de
5a6d 5a6d d 4c
5a6d 5a6d u 01 01
5a6d 5a6d s 	ld	c,h
5a6e 5a6e d 0a
5a6e 5a6e u 01 01
5a6e 5a6e s 	ld	a,(bc)
5a6f 5a6f d d3b5
5a6f 5a6f u 02 01
5a6f 5a6f s 	out	(dac_r),a
5a71 5a71 s 	equval	dacp,%dn,$-1
5a71 5a71 s dacp49	=	$-1
5a71 5a71 s 	endm
5a71 5a71 s 	dn++
5a71 5a71 d d9
5a71 5a71 u 01 01
5a71 5a71 s 	exx
5a72 5a72 s 	endm
5a72 5a72 s 	endm
5a72 5a72 d 317366
5a72 5a72 u 03 01
5a72 5a72 s 	ld	sp,param_11
5a75 5a75 s 	; Waste 7+4
5a75 5a75 d 00
5a75 5a75 u 01 01
5a75 5a75 s 	nop
5a76 5a76 d 3e00
5a76 5a76 u 02 01
5a76 5a76 s 	ld	a,0
5a78 5a78 d 3e00
5a78 5a78 u 02 01
5a78 5a78 s 	ld	a,0		; waste we can eliminate?
5a7a 5a7a d 3a0438
5a7a 5a7a u 03 01
5a7a 5a7a s 	ld	a,(k_T >> 8)
5a7d 5a7d d e610
5a7d 5a7d u 02 01
5a7d 5a7d s 	and	k_T % $100
5a7f 5a7f d c2615d
5a7f 5a7f u 03 01
5a7f 5a7f s 	jp	nz,down_r
5a82 5a82 s ret_11:
5a82 5a82 s   endif
5a82 5a82 s 	endm
5a82 5a82 s 	endm
5a82 5a82 s 	key_r	03,k_6,g1@
5a82 5a82 s 	key	03,k_6,g1@,down_r
5a82 5a82 s   if parkey == 0
5a82 5a82 s param_03:
5a82 5a82 s   endif
5a82 5a82 s 
5a82 5a82 s   if parkey < 2
5a82 5a82 s 	defw	st_g1@
5a82 5a82 s   endif
5a82 5a82 s 
5a82 5a82 s   if parkey == 0
5a82 5a82 s 	defw	ret_03
5a82 5a82 s 	defw	$ff00+03
5a82 5a82 s   endif
5a82 5a82 s 
5a82 5a82 s   if parkey == 2
5a82 5a82 s 	cycle
5a82 5a82 s 	start_cycle
5a82 5a82 s diff	defl	sampcyc-t($)
5a82 5a82 s 	assert	t($) == sampcyc
5a82 5a82 s 	sett	0
5a82 5a82 s 	endm
5a82 5a82 s 	samp_l
5a82 5a82 d 19
5a82 5a82 u 01 01
5a82 5a82 s 	add	hl,de
5a83 5a83 d 4c
5a83 5a83 u 01 01
5a83 5a83 s 	ld	c,h
5a84 5a84 d 0a
5a84 5a84 u 01 01
5a84 5a84 s 	ld	a,(bc)
5a85 5a85 d d3b9
5a85 5a85 u 02 01
5a85 5a85 s 	out	(dac_l),a
5a87 5a87 s 	equval	dacp,%dn,$-1
5a87 5a87 s dacp50	=	$-1
5a87 5a87 s 	endm
5a87 5a87 s 	dn++
5a87 5a87 s 	endm
5a87 5a87 s 	samp_r
5a87 5a87 d d9
5a87 5a87 u 01 01
5a87 5a87 s 	exx
5a88 5a88 d 19
5a88 5a88 u 01 01
5a88 5a88 s 	add	hl,de
5a89 5a89 d 4c
5a89 5a89 u 01 01
5a89 5a89 s 	ld	c,h
5a8a 5a8a d 0a
5a8a 5a8a u 01 01
5a8a 5a8a s 	ld	a,(bc)
5a8b 5a8b d d3b5
5a8b 5a8b u 02 01
5a8b 5a8b s 	out	(dac_r),a
5a8d 5a8d s 	equval	dacp,%dn,$-1
5a8d 5a8d s dacp51	=	$-1
5a8d 5a8d s 	endm
5a8d 5a8d s 	dn++
5a8d 5a8d d d9
5a8d 5a8d u 01 01
5a8d 5a8d s 	exx
5a8e 5a8e s 	endm
5a8e 5a8e s 	endm
5a8e 5a8e d 317966
5a8e 5a8e u 03 01
5a8e 5a8e s 	ld	sp,param_03
5a91 5a91 s 	; Waste 7+4
5a91 5a91 d 00
5a91 5a91 u 01 01
5a91 5a91 s 	nop
5a92 5a92 d 3e00
5a92 5a92 u 02 01
5a92 5a92 s 	ld	a,0
5a94 5a94 d 3e00
5a94 5a94 u 02 01
5a94 5a94 s 	ld	a,0		; waste we can eliminate?
5a96 5a96 d 3a1038
5a96 5a96 u 03 01
5a96 5a96 s 	ld	a,(k_6 >> 8)
5a99 5a99 d e640
5a99 5a99 u 02 01
5a99 5a99 s 	and	k_6 % $100
5a9b 5a9b d c2615d
5a9b 5a9b u 03 01
5a9b 5a9b s 	jp	nz,down_r
5a9e 5a9e s ret_03:
5a9e 5a9e s   endif
5a9e 5a9e s 	endm
5a9e 5a9e s 	endm
5a9e 5a9e s 	key_r	12,k_Y,a1
5a9e 5a9e s 	key	12,k_Y,a1,down_r
5a9e 5a9e s   if parkey == 0
5a9e 5a9e s param_12:
5a9e 5a9e s   endif
5a9e 5a9e s 
5a9e 5a9e s   if parkey < 2
5a9e 5a9e s 	defw	st_a1
5a9e 5a9e s   endif
5a9e 5a9e s 
5a9e 5a9e s   if parkey == 0
5a9e 5a9e s 	defw	ret_12
5a9e 5a9e s 	defw	$ff00+12
5a9e 5a9e s   endif
5a9e 5a9e s 
5a9e 5a9e s   if parkey == 2
5a9e 5a9e s 	cycle
5a9e 5a9e s 	start_cycle
5a9e 5a9e s diff	defl	sampcyc-t($)
5a9e 5a9e s 	assert	t($) == sampcyc
5a9e 5a9e s 	sett	0
5a9e 5a9e s 	endm
5a9e 5a9e s 	samp_l
5a9e 5a9e d 19
5a9e 5a9e u 01 01
5a9e 5a9e s 	add	hl,de
5a9f 5a9f d 4c
5a9f 5a9f u 01 01
5a9f 5a9f s 	ld	c,h
5aa0 5aa0 d 0a
5aa0 5aa0 u 01 01
5aa0 5aa0 s 	ld	a,(bc)
5aa1 5aa1 d d3b9
5aa1 5aa1 u 02 01
5aa1 5aa1 s 	out	(dac_l),a
5aa3 5aa3 s 	equval	dacp,%dn,$-1
5aa3 5aa3 s dacp52	=	$-1
5aa3 5aa3 s 	endm
5aa3 5aa3 s 	dn++
5aa3 5aa3 s 	endm
5aa3 5aa3 s 	samp_r
5aa3 5aa3 d d9
5aa3 5aa3 u 01 01
5aa3 5aa3 s 	exx
5aa4 5aa4 d 19
5aa4 5aa4 u 01 01
5aa4 5aa4 s 	add	hl,de
5aa5 5aa5 d 4c
5aa5 5aa5 u 01 01
5aa5 5aa5 s 	ld	c,h
5aa6 5aa6 d 0a
5aa6 5aa6 u 01 01
5aa6 5aa6 s 	ld	a,(bc)
5aa7 5aa7 d d3b5
5aa7 5aa7 u 02 01
5aa7 5aa7 s 	out	(dac_r),a
5aa9 5aa9 s 	equval	dacp,%dn,$-1
5aa9 5aa9 s dacp53	=	$-1
5aa9 5aa9 s 	endm
5aa9 5aa9 s 	dn++
5aa9 5aa9 d d9
5aa9 5aa9 u 01 01
5aa9 5aa9 s 	exx
5aaa 5aaa s 	endm
5aaa 5aaa s 	endm
5aaa 5aaa d 317f66
5aaa 5aaa u 03 01
5aaa 5aaa s 	ld	sp,param_12
5aad 5aad s 	; Waste 7+4
5aad 5aad d 00
5aad 5aad u 01 01
5aad 5aad s 	nop
5aae 5aae d 3e00
5aae 5aae u 02 01
5aae 5aae s 	ld	a,0
5ab0 5ab0 d 3e00
5ab0 5ab0 u 02 01
5ab0 5ab0 s 	ld	a,0		; waste we can eliminate?
5ab2 5ab2 d 3a0838
5ab2 5ab2 u 03 01
5ab2 5ab2 s 	ld	a,(k_Y >> 8)
5ab5 5ab5 d e602
5ab5 5ab5 u 02 01
5ab5 5ab5 s 	and	k_Y % $100
5ab7 5ab7 d c2615d
5ab7 5ab7 u 03 01
5ab7 5ab7 s 	jp	nz,down_r
5aba 5aba s ret_12:
5aba 5aba s   endif
5aba 5aba s 	endm
5aba 5aba s 	endm
5aba 5aba s 	key_r	04,k_7,a1@
5aba 5aba s 	key	04,k_7,a1@,down_r
5aba 5aba s   if parkey == 0
5aba 5aba s param_04:
5aba 5aba s   endif
5aba 5aba s 
5aba 5aba s   if parkey < 2
5aba 5aba s 	defw	st_a1@
5aba 5aba s   endif
5aba 5aba s 
5aba 5aba s   if parkey == 0
5aba 5aba s 	defw	ret_04
5aba 5aba s 	defw	$ff00+04
5aba 5aba s   endif
5aba 5aba s 
5aba 5aba s   if parkey == 2
5aba 5aba s 	cycle
5aba 5aba s 	start_cycle
5aba 5aba s diff	defl	sampcyc-t($)
5aba 5aba s 	assert	t($) == sampcyc
5aba 5aba s 	sett	0
5aba 5aba s 	endm
5aba 5aba s 	samp_l
5aba 5aba d 19
5aba 5aba u 01 01
5aba 5aba s 	add	hl,de
5abb 5abb d 4c
5abb 5abb u 01 01
5abb 5abb s 	ld	c,h
5abc 5abc d 0a
5abc 5abc u 01 01
5abc 5abc s 	ld	a,(bc)
5abd 5abd d d3b9
5abd 5abd u 02 01
5abd 5abd s 	out	(dac_l),a
5abf 5abf s 	equval	dacp,%dn,$-1
5abf 5abf s dacp54	=	$-1
5abf 5abf s 	endm
5abf 5abf s 	dn++
5abf 5abf s 	endm
5abf 5abf s 	samp_r
5abf 5abf d d9
5abf 5abf u 01 01
5abf 5abf s 	exx
5ac0 5ac0 d 19
5ac0 5ac0 u 01 01
5ac0 5ac0 s 	add	hl,de
5ac1 5ac1 d 4c
5ac1 5ac1 u 01 01
5ac1 5ac1 s 	ld	c,h
5ac2 5ac2 d 0a
5ac2 5ac2 u 01 01
5ac2 5ac2 s 	ld	a,(bc)
5ac3 5ac3 d d3b5
5ac3 5ac3 u 02 01
5ac3 5ac3 s 	out	(dac_r),a
5ac5 5ac5 s 	equval	dacp,%dn,$-1
5ac5 5ac5 s dacp55	=	$-1
5ac5 5ac5 s 	endm
5ac5 5ac5 s 	dn++
5ac5 5ac5 d d9
5ac5 5ac5 u 01 01
5ac5 5ac5 s 	exx
5ac6 5ac6 s 	endm
5ac6 5ac6 s 	endm
5ac6 5ac6 d 318566
5ac6 5ac6 u 03 01
5ac6 5ac6 s 	ld	sp,param_04
5ac9 5ac9 s 	; Waste 7+4
5ac9 5ac9 d 00
5ac9 5ac9 u 01 01
5ac9 5ac9 s 	nop
5aca 5aca d 3e00
5aca 5aca u 02 01
5aca 5aca s 	ld	a,0
5acc 5acc d 3e00
5acc 5acc u 02 01
5acc 5acc s 	ld	a,0		; waste we can eliminate?
5ace 5ace d 3a1038
5ace 5ace u 03 01
5ace 5ace s 	ld	a,(k_7 >> 8)
5ad1 5ad1 d e680
5ad1 5ad1 u 02 01
5ad1 5ad1 s 	and	k_7 % $100
5ad3 5ad3 d c2615d
5ad3 5ad3 u 03 01
5ad3 5ad3 s 	jp	nz,down_r
5ad6 5ad6 s ret_04:
5ad6 5ad6 s   endif
5ad6 5ad6 s 	endm
5ad6 5ad6 s 	endm
5ad6 5ad6 s 	key_r	13,k_U,b1
5ad6 5ad6 s 	key	13,k_U,b1,down_r
5ad6 5ad6 s   if parkey == 0
5ad6 5ad6 s param_13:
5ad6 5ad6 s   endif
5ad6 5ad6 s 
5ad6 5ad6 s   if parkey < 2
5ad6 5ad6 s 	defw	st_b1
5ad6 5ad6 s   endif
5ad6 5ad6 s 
5ad6 5ad6 s   if parkey == 0
5ad6 5ad6 s 	defw	ret_13
5ad6 5ad6 s 	defw	$ff00+13
5ad6 5ad6 s   endif
5ad6 5ad6 s 
5ad6 5ad6 s   if parkey == 2
5ad6 5ad6 s 	cycle
5ad6 5ad6 s 	start_cycle
5ad6 5ad6 s diff	defl	sampcyc-t($)
5ad6 5ad6 s 	assert	t($) == sampcyc
5ad6 5ad6 s 	sett	0
5ad6 5ad6 s 	endm
5ad6 5ad6 s 	samp_l
5ad6 5ad6 d 19
5ad6 5ad6 u 01 01
5ad6 5ad6 s 	add	hl,de
5ad7 5ad7 d 4c
5ad7 5ad7 u 01 01
5ad7 5ad7 s 	ld	c,h
5ad8 5ad8 d 0a
5ad8 5ad8 u 01 01
5ad8 5ad8 s 	ld	a,(bc)
5ad9 5ad9 d d3b9
5ad9 5ad9 u 02 01
5ad9 5ad9 s 	out	(dac_l),a
5adb 5adb s 	equval	dacp,%dn,$-1
5adb 5adb s dacp56	=	$-1
5adb 5adb s 	endm
5adb 5adb s 	dn++
5adb 5adb s 	endm
5adb 5adb s 	samp_r
5adb 5adb d d9
5adb 5adb u 01 01
5adb 5adb s 	exx
5adc 5adc d 19
5adc 5adc u 01 01
5adc 5adc s 	add	hl,de
5add 5add d 4c
5add 5add u 01 01
5add 5add s 	ld	c,h
5ade 5ade d 0a
5ade 5ade u 01 01
5ade 5ade s 	ld	a,(bc)
5adf 5adf d d3b5
5adf 5adf u 02 01
5adf 5adf s 	out	(dac_r),a
5ae1 5ae1 s 	equval	dacp,%dn,$-1
5ae1 5ae1 s dacp57	=	$-1
5ae1 5ae1 s 	endm
5ae1 5ae1 s 	dn++
5ae1 5ae1 d d9
5ae1 5ae1 u 01 01
5ae1 5ae1 s 	exx
5ae2 5ae2 s 	endm
5ae2 5ae2 s 	endm
5ae2 5ae2 d 318b66
5ae2 5ae2 u 03 01
5ae2 5ae2 s 	ld	sp,param_13
5ae5 5ae5 s 	; Waste 7+4
5ae5 5ae5 d 00
5ae5 5ae5 u 01 01
5ae5 5ae5 s 	nop
5ae6 5ae6 d 3e00
5ae6 5ae6 u 02 01
5ae6 5ae6 s 	ld	a,0
5ae8 5ae8 d 3e00
5ae8 5ae8 u 02 01
5ae8 5ae8 s 	ld	a,0		; waste we can eliminate?
5aea 5aea d 3a0438
5aea 5aea u 03 01
5aea 5aea s 	ld	a,(k_U >> 8)
5aed 5aed d e620
5aed 5aed u 02 01
5aed 5aed s 	and	k_U % $100
5aef 5aef d c2615d
5aef 5aef u 03 01
5aef 5aef s 	jp	nz,down_r
5af2 5af2 s ret_13:
5af2 5af2 s   endif
5af2 5af2 s 	endm
5af2 5af2 s 	endm
5af2 5af2 s 	key_r	14,k_I,c2
5af2 5af2 s 	key	14,k_I,c2,down_r
5af2 5af2 s   if parkey == 0
5af2 5af2 s param_14:
5af2 5af2 s   endif
5af2 5af2 s 
5af2 5af2 s   if parkey < 2
5af2 5af2 s 	defw	st_c2
5af2 5af2 s   endif
5af2 5af2 s 
5af2 5af2 s   if parkey == 0
5af2 5af2 s 	defw	ret_14
5af2 5af2 s 	defw	$ff00+14
5af2 5af2 s   endif
5af2 5af2 s 
5af2 5af2 s   if parkey == 2
5af2 5af2 s 	cycle
5af2 5af2 s 	start_cycle
5af2 5af2 s diff	defl	sampcyc-t($)
5af2 5af2 s 	assert	t($) == sampcyc
5af2 5af2 s 	sett	0
5af2 5af2 s 	endm
5af2 5af2 s 	samp_l
5af2 5af2 d 19
5af2 5af2 u 01 01
5af2 5af2 s 	add	hl,de
5af3 5af3 d 4c
5af3 5af3 u 01 01
5af3 5af3 s 	ld	c,h
5af4 5af4 d 0a
5af4 5af4 u 01 01
5af4 5af4 s 	ld	a,(bc)
5af5 5af5 d d3b9
5af5 5af5 u 02 01
5af5 5af5 s 	out	(dac_l),a
5af7 5af7 s 	equval	dacp,%dn,$-1
5af7 5af7 s dacp58	=	$-1
5af7 5af7 s 	endm
5af7 5af7 s 	dn++
5af7 5af7 s 	endm
5af7 5af7 s 	samp_r
5af7 5af7 d d9
5af7 5af7 u 01 01
5af7 5af7 s 	exx
5af8 5af8 d 19
5af8 5af8 u 01 01
5af8 5af8 s 	add	hl,de
5af9 5af9 d 4c
5af9 5af9 u 01 01
5af9 5af9 s 	ld	c,h
5afa 5afa d 0a
5afa 5afa u 01 01
5afa 5afa s 	ld	a,(bc)
5afb 5afb d d3b5
5afb 5afb u 02 01
5afb 5afb s 	out	(dac_r),a
5afd 5afd s 	equval	dacp,%dn,$-1
5afd 5afd s dacp59	=	$-1
5afd 5afd s 	endm
5afd 5afd s 	dn++
5afd 5afd d d9
5afd 5afd u 01 01
5afd 5afd s 	exx
5afe 5afe s 	endm
5afe 5afe s 	endm
5afe 5afe d 319166
5afe 5afe u 03 01
5afe 5afe s 	ld	sp,param_14
5b01 5b01 s 	; Waste 7+4
5b01 5b01 d 00
5b01 5b01 u 01 01
5b01 5b01 s 	nop
5b02 5b02 d 3e00
5b02 5b02 u 02 01
5b02 5b02 s 	ld	a,0
5b04 5b04 d 3e00
5b04 5b04 u 02 01
5b04 5b04 s 	ld	a,0		; waste we can eliminate?
5b06 5b06 d 3a0238
5b06 5b06 u 03 01
5b06 5b06 s 	ld	a,(k_I >> 8)
5b09 5b09 d e602
5b09 5b09 u 02 01
5b09 5b09 s 	and	k_I % $100
5b0b 5b0b d c2615d
5b0b 5b0b u 03 01
5b0b 5b0b s 	jp	nz,down_r
5b0e 5b0e s ret_14:
5b0e 5b0e s   endif
5b0e 5b0e s 	endm
5b0e 5b0e s 	endm
5b0e 5b0e s 	key_r	05,k_9,c2@
5b0e 5b0e s 	key	05,k_9,c2@,down_r
5b0e 5b0e s   if parkey == 0
5b0e 5b0e s param_05:
5b0e 5b0e s   endif
5b0e 5b0e s 
5b0e 5b0e s   if parkey < 2
5b0e 5b0e s 	defw	st_c2@
5b0e 5b0e s   endif
5b0e 5b0e s 
5b0e 5b0e s   if parkey == 0
5b0e 5b0e s 	defw	ret_05
5b0e 5b0e s 	defw	$ff00+05
5b0e 5b0e s   endif
5b0e 5b0e s 
5b0e 5b0e s   if parkey == 2
5b0e 5b0e s 	cycle
5b0e 5b0e s 	start_cycle
5b0e 5b0e s diff	defl	sampcyc-t($)
5b0e 5b0e s 	assert	t($) == sampcyc
5b0e 5b0e s 	sett	0
5b0e 5b0e s 	endm
5b0e 5b0e s 	samp_l
5b0e 5b0e d 19
5b0e 5b0e u 01 01
5b0e 5b0e s 	add	hl,de
5b0f 5b0f d 4c
5b0f 5b0f u 01 01
5b0f 5b0f s 	ld	c,h
5b10 5b10 d 0a
5b10 5b10 u 01 01
5b10 5b10 s 	ld	a,(bc)
5b11 5b11 d d3b9
5b11 5b11 u 02 01
5b11 5b11 s 	out	(dac_l),a
5b13 5b13 s 	equval	dacp,%dn,$-1
5b13 5b13 s dacp60	=	$-1
5b13 5b13 s 	endm
5b13 5b13 s 	dn++
5b13 5b13 s 	endm
5b13 5b13 s 	samp_r
5b13 5b13 d d9
5b13 5b13 u 01 01
5b13 5b13 s 	exx
5b14 5b14 d 19
5b14 5b14 u 01 01
5b14 5b14 s 	add	hl,de
5b15 5b15 d 4c
5b15 5b15 u 01 01
5b15 5b15 s 	ld	c,h
5b16 5b16 d 0a
5b16 5b16 u 01 01
5b16 5b16 s 	ld	a,(bc)
5b17 5b17 d d3b5
5b17 5b17 u 02 01
5b17 5b17 s 	out	(dac_r),a
5b19 5b19 s 	equval	dacp,%dn,$-1
5b19 5b19 s dacp61	=	$-1
5b19 5b19 s 	endm
5b19 5b19 s 	dn++
5b19 5b19 d d9
5b19 5b19 u 01 01
5b19 5b19 s 	exx
5b1a 5b1a s 	endm
5b1a 5b1a s 	endm
5b1a 5b1a d 319766
5b1a 5b1a u 03 01
5b1a 5b1a s 	ld	sp,param_05
5b1d 5b1d s 	; Waste 7+4
5b1d 5b1d d 00
5b1d 5b1d u 01 01
5b1d 5b1d s 	nop
5b1e 5b1e d 3e00
5b1e 5b1e u 02 01
5b1e 5b1e s 	ld	a,0
5b20 5b20 d 3e00
5b20 5b20 u 02 01
5b20 5b20 s 	ld	a,0		; waste we can eliminate?
5b22 5b22 d 3a2038
5b22 5b22 u 03 01
5b22 5b22 s 	ld	a,(k_9 >> 8)
5b25 5b25 d e602
5b25 5b25 u 02 01
5b25 5b25 s 	and	k_9 % $100
5b27 5b27 d c2615d
5b27 5b27 u 03 01
5b27 5b27 s 	jp	nz,down_r
5b2a 5b2a s ret_05:
5b2a 5b2a s   endif
5b2a 5b2a s 	endm
5b2a 5b2a s 	endm
5b2a 5b2a s 	key_r	15,k_O,d2
5b2a 5b2a s 	key	15,k_O,d2,down_r
5b2a 5b2a s   if parkey == 0
5b2a 5b2a s param_15:
5b2a 5b2a s   endif
5b2a 5b2a s 
5b2a 5b2a s   if parkey < 2
5b2a 5b2a s 	defw	st_d2
5b2a 5b2a s   endif
5b2a 5b2a s 
5b2a 5b2a s   if parkey == 0
5b2a 5b2a s 	defw	ret_15
5b2a 5b2a s 	defw	$ff00+15
5b2a 5b2a s   endif
5b2a 5b2a s 
5b2a 5b2a s   if parkey == 2
5b2a 5b2a s 	cycle
5b2a 5b2a s 	start_cycle
5b2a 5b2a s diff	defl	sampcyc-t($)
5b2a 5b2a s 	assert	t($) == sampcyc
5b2a 5b2a s 	sett	0
5b2a 5b2a s 	endm
5b2a 5b2a s 	samp_l
5b2a 5b2a d 19
5b2a 5b2a u 01 01
5b2a 5b2a s 	add	hl,de
5b2b 5b2b d 4c
5b2b 5b2b u 01 01
5b2b 5b2b s 	ld	c,h
5b2c 5b2c d 0a
5b2c 5b2c u 01 01
5b2c 5b2c s 	ld	a,(bc)
5b2d 5b2d d d3b9
5b2d 5b2d u 02 01
5b2d 5b2d s 	out	(dac_l),a
5b2f 5b2f s 	equval	dacp,%dn,$-1
5b2f 5b2f s dacp62	=	$-1
5b2f 5b2f s 	endm
5b2f 5b2f s 	dn++
5b2f 5b2f s 	endm
5b2f 5b2f s 	samp_r
5b2f 5b2f d d9
5b2f 5b2f u 01 01
5b2f 5b2f s 	exx
5b30 5b30 d 19
5b30 5b30 u 01 01
5b30 5b30 s 	add	hl,de
5b31 5b31 d 4c
5b31 5b31 u 01 01
5b31 5b31 s 	ld	c,h
5b32 5b32 d 0a
5b32 5b32 u 01 01
5b32 5b32 s 	ld	a,(bc)
5b33 5b33 d d3b5
5b33 5b33 u 02 01
5b33 5b33 s 	out	(dac_r),a
5b35 5b35 s 	equval	dacp,%dn,$-1
5b35 5b35 s dacp63	=	$-1
5b35 5b35 s 	endm
5b35 5b35 s 	dn++
5b35 5b35 d d9
5b35 5b35 u 01 01
5b35 5b35 s 	exx
5b36 5b36 s 	endm
5b36 5b36 s 	endm
5b36 5b36 d 319d66
5b36 5b36 u 03 01
5b36 5b36 s 	ld	sp,param_15
5b39 5b39 s 	; Waste 7+4
5b39 5b39 d 00
5b39 5b39 u 01 01
5b39 5b39 s 	nop
5b3a 5b3a d 3e00
5b3a 5b3a u 02 01
5b3a 5b3a s 	ld	a,0
5b3c 5b3c d 3e00
5b3c 5b3c u 02 01
5b3c 5b3c s 	ld	a,0		; waste we can eliminate?
5b3e 5b3e d 3a0238
5b3e 5b3e u 03 01
5b3e 5b3e s 	ld	a,(k_O >> 8)
5b41 5b41 d e680
5b41 5b41 u 02 01
5b41 5b41 s 	and	k_O % $100
5b43 5b43 d c2615d
5b43 5b43 u 03 01
5b43 5b43 s 	jp	nz,down_r
5b46 5b46 s ret_15:
5b46 5b46 s   endif
5b46 5b46 s 	endm
5b46 5b46 s 	endm
5b46 5b46 s 	key_r	06,k_0,d2@
5b46 5b46 s 	key	06,k_0,d2@,down_r
5b46 5b46 s   if parkey == 0
5b46 5b46 s param_06:
5b46 5b46 s   endif
5b46 5b46 s 
5b46 5b46 s   if parkey < 2
5b46 5b46 s 	defw	st_d2@
5b46 5b46 s   endif
5b46 5b46 s 
5b46 5b46 s   if parkey == 0
5b46 5b46 s 	defw	ret_06
5b46 5b46 s 	defw	$ff00+06
5b46 5b46 s   endif
5b46 5b46 s 
5b46 5b46 s   if parkey == 2
5b46 5b46 s 	cycle
5b46 5b46 s 	start_cycle
5b46 5b46 s diff	defl	sampcyc-t($)
5b46 5b46 s 	assert	t($) == sampcyc
5b46 5b46 s 	sett	0
5b46 5b46 s 	endm
5b46 5b46 s 	samp_l
5b46 5b46 d 19
5b46 5b46 u 01 01
5b46 5b46 s 	add	hl,de
5b47 5b47 d 4c
5b47 5b47 u 01 01
5b47 5b47 s 	ld	c,h
5b48 5b48 d 0a
5b48 5b48 u 01 01
5b48 5b48 s 	ld	a,(bc)
5b49 5b49 d d3b9
5b49 5b49 u 02 01
5b49 5b49 s 	out	(dac_l),a
5b4b 5b4b s 	equval	dacp,%dn,$-1
5b4b 5b4b s dacp64	=	$-1
5b4b 5b4b s 	endm
5b4b 5b4b s 	dn++
5b4b 5b4b s 	endm
5b4b 5b4b s 	samp_r
5b4b 5b4b d d9
5b4b 5b4b u 01 01
5b4b 5b4b s 	exx
5b4c 5b4c d 19
5b4c 5b4c u 01 01
5b4c 5b4c s 	add	hl,de
5b4d 5b4d d 4c
5b4d 5b4d u 01 01
5b4d 5b4d s 	ld	c,h
5b4e 5b4e d 0a
5b4e 5b4e u 01 01
5b4e 5b4e s 	ld	a,(bc)
5b4f 5b4f d d3b5
5b4f 5b4f u 02 01
5b4f 5b4f s 	out	(dac_r),a
5b51 5b51 s 	equval	dacp,%dn,$-1
5b51 5b51 s dacp65	=	$-1
5b51 5b51 s 	endm
5b51 5b51 s 	dn++
5b51 5b51 d d9
5b51 5b51 u 01 01
5b51 5b51 s 	exx
5b52 5b52 s 	endm
5b52 5b52 s 	endm
5b52 5b52 d 31a366
5b52 5b52 u 03 01
5b52 5b52 s 	ld	sp,param_06
5b55 5b55 s 	; Waste 7+4
5b55 5b55 d 00
5b55 5b55 u 01 01
5b55 5b55 s 	nop
5b56 5b56 d 3e00
5b56 5b56 u 02 01
5b56 5b56 s 	ld	a,0
5b58 5b58 d 3e00
5b58 5b58 u 02 01
5b58 5b58 s 	ld	a,0		; waste we can eliminate?
5b5a 5b5a d 3a1038
5b5a 5b5a u 03 01
5b5a 5b5a s 	ld	a,(k_0 >> 8)
5b5d 5b5d d e601
5b5d 5b5d u 02 01
5b5d 5b5d s 	and	k_0 % $100
5b5f 5b5f d c2615d
5b5f 5b5f u 03 01
5b5f 5b5f s 	jp	nz,down_r
5b62 5b62 s ret_06:
5b62 5b62 s   endif
5b62 5b62 s 	endm
5b62 5b62 s 	endm
5b62 5b62 s 	key_r	16,k_P,e2
5b62 5b62 s 	key	16,k_P,e2,down_r
5b62 5b62 s   if parkey == 0
5b62 5b62 s param_16:
5b62 5b62 s   endif
5b62 5b62 s 
5b62 5b62 s   if parkey < 2
5b62 5b62 s 	defw	st_e2
5b62 5b62 s   endif
5b62 5b62 s 
5b62 5b62 s   if parkey == 0
5b62 5b62 s 	defw	ret_16
5b62 5b62 s 	defw	$ff00+16
5b62 5b62 s   endif
5b62 5b62 s 
5b62 5b62 s   if parkey == 2
5b62 5b62 s 	cycle
5b62 5b62 s 	start_cycle
5b62 5b62 s diff	defl	sampcyc-t($)
5b62 5b62 s 	assert	t($) == sampcyc
5b62 5b62 s 	sett	0
5b62 5b62 s 	endm
5b62 5b62 s 	samp_l
5b62 5b62 d 19
5b62 5b62 u 01 01
5b62 5b62 s 	add	hl,de
5b63 5b63 d 4c
5b63 5b63 u 01 01
5b63 5b63 s 	ld	c,h
5b64 5b64 d 0a
5b64 5b64 u 01 01
5b64 5b64 s 	ld	a,(bc)
5b65 5b65 d d3b9
5b65 5b65 u 02 01
5b65 5b65 s 	out	(dac_l),a
5b67 5b67 s 	equval	dacp,%dn,$-1
5b67 5b67 s dacp66	=	$-1
5b67 5b67 s 	endm
5b67 5b67 s 	dn++
5b67 5b67 s 	endm
5b67 5b67 s 	samp_r
5b67 5b67 d d9
5b67 5b67 u 01 01
5b67 5b67 s 	exx
5b68 5b68 d 19
5b68 5b68 u 01 01
5b68 5b68 s 	add	hl,de
5b69 5b69 d 4c
5b69 5b69 u 01 01
5b69 5b69 s 	ld	c,h
5b6a 5b6a d 0a
5b6a 5b6a u 01 01
5b6a 5b6a s 	ld	a,(bc)
5b6b 5b6b d d3b5
5b6b 5b6b u 02 01
5b6b 5b6b s 	out	(dac_r),a
5b6d 5b6d s 	equval	dacp,%dn,$-1
5b6d 5b6d s dacp67	=	$-1
5b6d 5b6d s 	endm
5b6d 5b6d s 	dn++
5b6d 5b6d d d9
5b6d 5b6d u 01 01
5b6d 5b6d s 	exx
5b6e 5b6e s 	endm
5b6e 5b6e s 	endm
5b6e 5b6e d 31a966
5b6e 5b6e u 03 01
5b6e 5b6e s 	ld	sp,param_16
5b71 5b71 s 	; Waste 7+4
5b71 5b71 d 00
5b71 5b71 u 01 01
5b71 5b71 s 	nop
5b72 5b72 d 3e00
5b72 5b72 u 02 01
5b72 5b72 s 	ld	a,0
5b74 5b74 d 3e00
5b74 5b74 u 02 01
5b74 5b74 s 	ld	a,0		; waste we can eliminate?
5b76 5b76 d 3a0438
5b76 5b76 u 03 01
5b76 5b76 s 	ld	a,(k_P >> 8)
5b79 5b79 d e601
5b79 5b79 u 02 01
5b79 5b79 s 	and	k_P % $100
5b7b 5b7b d c2615d
5b7b 5b7b u 03 01
5b7b 5b7b s 	jp	nz,down_r
5b7e 5b7e s ret_16:
5b7e 5b7e s   endif
5b7e 5b7e s 	endm
5b7e 5b7e s 	endm
5b7e 5b7e s 	key_r	17,k_@,f2
5b7e 5b7e s 	key	17,k_@,f2,down_r
5b7e 5b7e s   if parkey == 0
5b7e 5b7e s param_17:
5b7e 5b7e s   endif
5b7e 5b7e s 
5b7e 5b7e s   if parkey < 2
5b7e 5b7e s 	defw	st_f2
5b7e 5b7e s   endif
5b7e 5b7e s 
5b7e 5b7e s   if parkey == 0
5b7e 5b7e s 	defw	ret_17
5b7e 5b7e s 	defw	$ff00+17
5b7e 5b7e s   endif
5b7e 5b7e s 
5b7e 5b7e s   if parkey == 2
5b7e 5b7e s 	cycle
5b7e 5b7e s 	start_cycle
5b7e 5b7e s diff	defl	sampcyc-t($)
5b7e 5b7e s 	assert	t($) == sampcyc
5b7e 5b7e s 	sett	0
5b7e 5b7e s 	endm
5b7e 5b7e s 	samp_l
5b7e 5b7e d 19
5b7e 5b7e u 01 01
5b7e 5b7e s 	add	hl,de
5b7f 5b7f d 4c
5b7f 5b7f u 01 01
5b7f 5b7f s 	ld	c,h
5b80 5b80 d 0a
5b80 5b80 u 01 01
5b80 5b80 s 	ld	a,(bc)
5b81 5b81 d d3b9
5b81 5b81 u 02 01
5b81 5b81 s 	out	(dac_l),a
5b83 5b83 s 	equval	dacp,%dn,$-1
5b83 5b83 s dacp68	=	$-1
5b83 5b83 s 	endm
5b83 5b83 s 	dn++
5b83 5b83 s 	endm
5b83 5b83 s 	samp_r
5b83 5b83 d d9
5b83 5b83 u 01 01
5b83 5b83 s 	exx
5b84 5b84 d 19
5b84 5b84 u 01 01
5b84 5b84 s 	add	hl,de
5b85 5b85 d 4c
5b85 5b85 u 01 01
5b85 5b85 s 	ld	c,h
5b86 5b86 d 0a
5b86 5b86 u 01 01
5b86 5b86 s 	ld	a,(bc)
5b87 5b87 d d3b5
5b87 5b87 u 02 01
5b87 5b87 s 	out	(dac_r),a
5b89 5b89 s 	equval	dacp,%dn,$-1
5b89 5b89 s dacp69	=	$-1
5b89 5b89 s 	endm
5b89 5b89 s 	dn++
5b89 5b89 d d9
5b89 5b89 u 01 01
5b89 5b89 s 	exx
5b8a 5b8a s 	endm
5b8a 5b8a s 	endm
5b8a 5b8a d 31af66
5b8a 5b8a u 03 01
5b8a 5b8a s 	ld	sp,param_17
5b8d 5b8d s 	; Waste 7+4
5b8d 5b8d d 00
5b8d 5b8d u 01 01
5b8d 5b8d s 	nop
5b8e 5b8e d 3e00
5b8e 5b8e u 02 01
5b8e 5b8e s 	ld	a,0
5b90 5b90 d 3e00
5b90 5b90 u 02 01
5b90 5b90 s 	ld	a,0		; waste we can eliminate?
5b92 5b92 d 3a0138
5b92 5b92 u 03 01
5b92 5b92 s 	ld	a,(k_@ >> 8)
5b95 5b95 d e601
5b95 5b95 u 02 01
5b95 5b95 s 	and	k_@ % $100
5b97 5b97 d c2615d
5b97 5b97 u 03 01
5b97 5b97 s 	jp	nz,down_r
5b9a 5b9a s ret_17:
5b9a 5b9a s   endif
5b9a 5b9a s 	endm
5b9a 5b9a s 	endm
5b9a 5b9a s 
5b9a 5b9a s 	key	35,k_A,null,wave_down_l
5b9a 5b9a s   if parkey == 0
5b9a 5b9a s param_35:
5b9a 5b9a s   endif
5b9a 5b9a s 
5b9a 5b9a s   if parkey < 2
5b9a 5b9a s 	defw	st_null
5b9a 5b9a s   endif
5b9a 5b9a s 
5b9a 5b9a s   if parkey == 0
5b9a 5b9a s 	defw	ret_35
5b9a 5b9a s 	defw	$ff00+35
5b9a 5b9a s   endif
5b9a 5b9a s 
5b9a 5b9a s   if parkey == 2
5b9a 5b9a s 	cycle
5b9a 5b9a s 	start_cycle
5b9a 5b9a s diff	defl	sampcyc-t($)
5b9a 5b9a s 	assert	t($) == sampcyc
5b9a 5b9a s 	sett	0
5b9a 5b9a s 	endm
5b9a 5b9a s 	samp_l
5b9a 5b9a d 19
5b9a 5b9a u 01 01
5b9a 5b9a s 	add	hl,de
5b9b 5b9b d 4c
5b9b 5b9b u 01 01
5b9b 5b9b s 	ld	c,h
5b9c 5b9c d 0a
5b9c 5b9c u 01 01
5b9c 5b9c s 	ld	a,(bc)
5b9d 5b9d d d3b9
5b9d 5b9d u 02 01
5b9d 5b9d s 	out	(dac_l),a
5b9f 5b9f s 	equval	dacp,%dn,$-1
5b9f 5b9f s dacp70	=	$-1
5b9f 5b9f s 	endm
5b9f 5b9f s 	dn++
5b9f 5b9f s 	endm
5b9f 5b9f s 	samp_r
5b9f 5b9f d d9
5b9f 5b9f u 01 01
5b9f 5b9f s 	exx
5ba0 5ba0 d 19
5ba0 5ba0 u 01 01
5ba0 5ba0 s 	add	hl,de
5ba1 5ba1 d 4c
5ba1 5ba1 u 01 01
5ba1 5ba1 s 	ld	c,h
5ba2 5ba2 d 0a
5ba2 5ba2 u 01 01
5ba2 5ba2 s 	ld	a,(bc)
5ba3 5ba3 d d3b5
5ba3 5ba3 u 02 01
5ba3 5ba3 s 	out	(dac_r),a
5ba5 5ba5 s 	equval	dacp,%dn,$-1
5ba5 5ba5 s dacp71	=	$-1
5ba5 5ba5 s 	endm
5ba5 5ba5 s 	dn++
5ba5 5ba5 d d9
5ba5 5ba5 u 01 01
5ba5 5ba5 s 	exx
5ba6 5ba6 s 	endm
5ba6 5ba6 s 	endm
5ba6 5ba6 d 31b566
5ba6 5ba6 u 03 01
5ba6 5ba6 s 	ld	sp,param_35
5ba9 5ba9 s 	; Waste 7+4
5ba9 5ba9 d 00
5ba9 5ba9 u 01 01
5ba9 5ba9 s 	nop
5baa 5baa d 3e00
5baa 5baa u 02 01
5baa 5baa s 	ld	a,0
5bac 5bac d 3e00
5bac 5bac u 02 01
5bac 5bac s 	ld	a,0		; waste we can eliminate?
5bae 5bae d 3a0138
5bae 5bae u 03 01
5bae 5bae s 	ld	a,(k_A >> 8)
5bb1 5bb1 d e602
5bb1 5bb1 u 02 01
5bb1 5bb1 s 	and	k_A % $100
5bb3 5bb3 d c2605e
5bb3 5bb3 u 03 01
5bb3 5bb3 s 	jp	nz,wave_down_l
5bb6 5bb6 s ret_35:
5bb6 5bb6 s   endif
5bb6 5bb6 s 	endm
5bb6 5bb6 s 	key	36,k_1,null,wave_down_r
5bb6 5bb6 s   if parkey == 0
5bb6 5bb6 s param_36:
5bb6 5bb6 s   endif
5bb6 5bb6 s 
5bb6 5bb6 s   if parkey < 2
5bb6 5bb6 s 	defw	st_null
5bb6 5bb6 s   endif
5bb6 5bb6 s 
5bb6 5bb6 s   if parkey == 0
5bb6 5bb6 s 	defw	ret_36
5bb6 5bb6 s 	defw	$ff00+36
5bb6 5bb6 s   endif
5bb6 5bb6 s 
5bb6 5bb6 s   if parkey == 2
5bb6 5bb6 s 	cycle
5bb6 5bb6 s 	start_cycle
5bb6 5bb6 s diff	defl	sampcyc-t($)
5bb6 5bb6 s 	assert	t($) == sampcyc
5bb6 5bb6 s 	sett	0
5bb6 5bb6 s 	endm
5bb6 5bb6 s 	samp_l
5bb6 5bb6 d 19
5bb6 5bb6 u 01 01
5bb6 5bb6 s 	add	hl,de
5bb7 5bb7 d 4c
5bb7 5bb7 u 01 01
5bb7 5bb7 s 	ld	c,h
5bb8 5bb8 d 0a
5bb8 5bb8 u 01 01
5bb8 5bb8 s 	ld	a,(bc)
5bb9 5bb9 d d3b9
5bb9 5bb9 u 02 01
5bb9 5bb9 s 	out	(dac_l),a
5bbb 5bbb s 	equval	dacp,%dn,$-1
5bbb 5bbb s dacp72	=	$-1
5bbb 5bbb s 	endm
5bbb 5bbb s 	dn++
5bbb 5bbb s 	endm
5bbb 5bbb s 	samp_r
5bbb 5bbb d d9
5bbb 5bbb u 01 01
5bbb 5bbb s 	exx
5bbc 5bbc d 19
5bbc 5bbc u 01 01
5bbc 5bbc s 	add	hl,de
5bbd 5bbd d 4c
5bbd 5bbd u 01 01
5bbd 5bbd s 	ld	c,h
5bbe 5bbe d 0a
5bbe 5bbe u 01 01
5bbe 5bbe s 	ld	a,(bc)
5bbf 5bbf d d3b5
5bbf 5bbf u 02 01
5bbf 5bbf s 	out	(dac_r),a
5bc1 5bc1 s 	equval	dacp,%dn,$-1
5bc1 5bc1 s dacp73	=	$-1
5bc1 5bc1 s 	endm
5bc1 5bc1 s 	dn++
5bc1 5bc1 d d9
5bc1 5bc1 u 01 01
5bc1 5bc1 s 	exx
5bc2 5bc2 s 	endm
5bc2 5bc2 s 	endm
5bc2 5bc2 d 31bb66
5bc2 5bc2 u 03 01
5bc2 5bc2 s 	ld	sp,param_36
5bc5 5bc5 s 	; Waste 7+4
5bc5 5bc5 d 00
5bc5 5bc5 u 01 01
5bc5 5bc5 s 	nop
5bc6 5bc6 d 3e00
5bc6 5bc6 u 02 01
5bc6 5bc6 s 	ld	a,0
5bc8 5bc8 d 3e00
5bc8 5bc8 u 02 01
5bc8 5bc8 s 	ld	a,0		; waste we can eliminate?
5bca 5bca d 3a1038
5bca 5bca u 03 01
5bca 5bca s 	ld	a,(k_1 >> 8)
5bcd 5bcd d e602
5bcd 5bcd u 02 01
5bcd 5bcd s 	and	k_1 % $100
5bcf 5bcf d c25b5f
5bcf 5bcf u 03 01
5bcf 5bcf s 	jp	nz,wave_down_r
5bd2 5bd2 s ret_36:
5bd2 5bd2 s   endif
5bd2 5bd2 s 	endm
5bd2 5bd2 s 
5bd2 5bd2 s    if havevol
5bd2 5bd2 s 	key	37,k_up,null,vol_up_down_l
5bd2 5bd2 s   if parkey == 0
5bd2 5bd2 s param_37:
5bd2 5bd2 s   endif
5bd2 5bd2 s 
5bd2 5bd2 s   if parkey < 2
5bd2 5bd2 s 	defw	st_null
5bd2 5bd2 s   endif
5bd2 5bd2 s 
5bd2 5bd2 s   if parkey == 0
5bd2 5bd2 s 	defw	ret_37
5bd2 5bd2 s 	defw	$ff00+37
5bd2 5bd2 s   endif
5bd2 5bd2 s 
5bd2 5bd2 s   if parkey == 2
5bd2 5bd2 s 	cycle
5bd2 5bd2 s 	start_cycle
5bd2 5bd2 s diff	defl	sampcyc-t($)
5bd2 5bd2 s 	assert	t($) == sampcyc
5bd2 5bd2 s 	sett	0
5bd2 5bd2 s 	endm
5bd2 5bd2 s 	samp_l
5bd2 5bd2 d 19
5bd2 5bd2 u 01 01
5bd2 5bd2 s 	add	hl,de
5bd3 5bd3 d 4c
5bd3 5bd3 u 01 01
5bd3 5bd3 s 	ld	c,h
5bd4 5bd4 d 0a
5bd4 5bd4 u 01 01
5bd4 5bd4 s 	ld	a,(bc)
5bd5 5bd5 d d3b9
5bd5 5bd5 u 02 01
5bd5 5bd5 s 	out	(dac_l),a
5bd7 5bd7 s 	equval	dacp,%dn,$-1
5bd7 5bd7 s dacp74	=	$-1
5bd7 5bd7 s 	endm
5bd7 5bd7 s 	dn++
5bd7 5bd7 s 	endm
5bd7 5bd7 s 	samp_r
5bd7 5bd7 d d9
5bd7 5bd7 u 01 01
5bd7 5bd7 s 	exx
5bd8 5bd8 d 19
5bd8 5bd8 u 01 01
5bd8 5bd8 s 	add	hl,de
5bd9 5bd9 d 4c
5bd9 5bd9 u 01 01
5bd9 5bd9 s 	ld	c,h
5bda 5bda d 0a
5bda 5bda u 01 01
5bda 5bda s 	ld	a,(bc)
5bdb 5bdb d d3b5
5bdb 5bdb u 02 01
5bdb 5bdb s 	out	(dac_r),a
5bdd 5bdd s 	equval	dacp,%dn,$-1
5bdd 5bdd s dacp75	=	$-1
5bdd 5bdd s 	endm
5bdd 5bdd s 	dn++
5bdd 5bdd d d9
5bdd 5bdd u 01 01
5bdd 5bdd s 	exx
5bde 5bde s 	endm
5bde 5bde s 	endm
5bde 5bde d 31c166
5bde 5bde u 03 01
5bde 5bde s 	ld	sp,param_37
5be1 5be1 s 	; Waste 7+4
5be1 5be1 d 00
5be1 5be1 u 01 01
5be1 5be1 s 	nop
5be2 5be2 d 3e00
5be2 5be2 u 02 01
5be2 5be2 s 	ld	a,0
5be4 5be4 d 3e00
5be4 5be4 u 02 01
5be4 5be4 s 	ld	a,0		; waste we can eliminate?
5be6 5be6 d 3a4038
5be6 5be6 u 03 01
5be6 5be6 s 	ld	a,(k_up >> 8)
5be9 5be9 d e608
5be9 5be9 u 02 01
5be9 5be9 s 	and	k_up % $100
5beb 5beb d c2b061
5beb 5beb u 03 01
5beb 5beb s 	jp	nz,vol_up_down_l
5bee 5bee s ret_37:
5bee 5bee s   endif
5bee 5bee s 	endm
5bee 5bee s 	key	38,k_down,null,vol_down_down_l
5bee 5bee s   if parkey == 0
5bee 5bee s param_38:
5bee 5bee s   endif
5bee 5bee s 
5bee 5bee s   if parkey < 2
5bee 5bee s 	defw	st_null
5bee 5bee s   endif
5bee 5bee s 
5bee 5bee s   if parkey == 0
5bee 5bee s 	defw	ret_38
5bee 5bee s 	defw	$ff00+38
5bee 5bee s   endif
5bee 5bee s 
5bee 5bee s   if parkey == 2
5bee 5bee s 	cycle
5bee 5bee s 	start_cycle
5bee 5bee s diff	defl	sampcyc-t($)
5bee 5bee s 	assert	t($) == sampcyc
5bee 5bee s 	sett	0
5bee 5bee s 	endm
5bee 5bee s 	samp_l
5bee 5bee d 19
5bee 5bee u 01 01
5bee 5bee s 	add	hl,de
5bef 5bef d 4c
5bef 5bef u 01 01
5bef 5bef s 	ld	c,h
5bf0 5bf0 d 0a
5bf0 5bf0 u 01 01
5bf0 5bf0 s 	ld	a,(bc)
5bf1 5bf1 d d3b9
5bf1 5bf1 u 02 01
5bf1 5bf1 s 	out	(dac_l),a
5bf3 5bf3 s 	equval	dacp,%dn,$-1
5bf3 5bf3 s dacp76	=	$-1
5bf3 5bf3 s 	endm
5bf3 5bf3 s 	dn++
5bf3 5bf3 s 	endm
5bf3 5bf3 s 	samp_r
5bf3 5bf3 d d9
5bf3 5bf3 u 01 01
5bf3 5bf3 s 	exx
5bf4 5bf4 d 19
5bf4 5bf4 u 01 01
5bf4 5bf4 s 	add	hl,de
5bf5 5bf5 d 4c
5bf5 5bf5 u 01 01
5bf5 5bf5 s 	ld	c,h
5bf6 5bf6 d 0a
5bf6 5bf6 u 01 01
5bf6 5bf6 s 	ld	a,(bc)
5bf7 5bf7 d d3b5
5bf7 5bf7 u 02 01
5bf7 5bf7 s 	out	(dac_r),a
5bf9 5bf9 s 	equval	dacp,%dn,$-1
5bf9 5bf9 s dacp77	=	$-1
5bf9 5bf9 s 	endm
5bf9 5bf9 s 	dn++
5bf9 5bf9 d d9
5bf9 5bf9 u 01 01
5bf9 5bf9 s 	exx
5bfa 5bfa s 	endm
5bfa 5bfa s 	endm
5bfa 5bfa d 31c766
5bfa 5bfa u 03 01
5bfa 5bfa s 	ld	sp,param_38
5bfd 5bfd s 	; Waste 7+4
5bfd 5bfd d 00
5bfd 5bfd u 01 01
5bfd 5bfd s 	nop
5bfe 5bfe d 3e00
5bfe 5bfe u 02 01
5bfe 5bfe s 	ld	a,0
5c00 5c00 d 3e00
5c00 5c00 u 02 01
5c00 5c00 s 	ld	a,0		; waste we can eliminate?
5c02 5c02 d 3a4038
5c02 5c02 u 03 01
5c02 5c02 s 	ld	a,(k_down >> 8)
5c05 5c05 d e610
5c05 5c05 u 02 01
5c05 5c05 s 	and	k_down % $100
5c07 5c07 d c25660
5c07 5c07 u 03 01
5c07 5c07 s 	jp	nz,vol_down_down_l
5c0a 5c0a s ret_38:
5c0a 5c0a s   endif
5c0a 5c0a s 	endm
5c0a 5c0a s 
5c0a 5c0a s 	key	39,k_left,null,vol_up_down_r
5c0a 5c0a s   if parkey == 0
5c0a 5c0a s param_39:
5c0a 5c0a s   endif
5c0a 5c0a s 
5c0a 5c0a s   if parkey < 2
5c0a 5c0a s 	defw	st_null
5c0a 5c0a s   endif
5c0a 5c0a s 
5c0a 5c0a s   if parkey == 0
5c0a 5c0a s 	defw	ret_39
5c0a 5c0a s 	defw	$ff00+39
5c0a 5c0a s   endif
5c0a 5c0a s 
5c0a 5c0a s   if parkey == 2
5c0a 5c0a s 	cycle
5c0a 5c0a s 	start_cycle
5c0a 5c0a s diff	defl	sampcyc-t($)
5c0a 5c0a s 	assert	t($) == sampcyc
5c0a 5c0a s 	sett	0
5c0a 5c0a s 	endm
5c0a 5c0a s 	samp_l
5c0a 5c0a d 19
5c0a 5c0a u 01 01
5c0a 5c0a s 	add	hl,de
5c0b 5c0b d 4c
5c0b 5c0b u 01 01
5c0b 5c0b s 	ld	c,h
5c0c 5c0c d 0a
5c0c 5c0c u 01 01
5c0c 5c0c s 	ld	a,(bc)
5c0d 5c0d d d3b9
5c0d 5c0d u 02 01
5c0d 5c0d s 	out	(dac_l),a
5c0f 5c0f s 	equval	dacp,%dn,$-1
5c0f 5c0f s dacp78	=	$-1
5c0f 5c0f s 	endm
5c0f 5c0f s 	dn++
5c0f 5c0f s 	endm
5c0f 5c0f s 	samp_r
5c0f 5c0f d d9
5c0f 5c0f u 01 01
5c0f 5c0f s 	exx
5c10 5c10 d 19
5c10 5c10 u 01 01
5c10 5c10 s 	add	hl,de
5c11 5c11 d 4c
5c11 5c11 u 01 01
5c11 5c11 s 	ld	c,h
5c12 5c12 d 0a
5c12 5c12 u 01 01
5c12 5c12 s 	ld	a,(bc)
5c13 5c13 d d3b5
5c13 5c13 u 02 01
5c13 5c13 s 	out	(dac_r),a
5c15 5c15 s 	equval	dacp,%dn,$-1
5c15 5c15 s dacp79	=	$-1
5c15 5c15 s 	endm
5c15 5c15 s 	dn++
5c15 5c15 d d9
5c15 5c15 u 01 01
5c15 5c15 s 	exx
5c16 5c16 s 	endm
5c16 5c16 s 	endm
5c16 5c16 d 31cd66
5c16 5c16 u 03 01
5c16 5c16 s 	ld	sp,param_39
5c19 5c19 s 	; Waste 7+4
5c19 5c19 d 00
5c19 5c19 u 01 01
5c19 5c19 s 	nop
5c1a 5c1a d 3e00
5c1a 5c1a u 02 01
5c1a 5c1a s 	ld	a,0
5c1c 5c1c d 3e00
5c1c 5c1c u 02 01
5c1c 5c1c s 	ld	a,0		; waste we can eliminate?
5c1e 5c1e d 3a4038
5c1e 5c1e u 03 01
5c1e 5c1e s 	ld	a,(k_left >> 8)
5c21 5c21 d e620
5c21 5c21 u 02 01
5c21 5c21 s 	and	k_left % $100
5c23 5c23 d c26364
5c23 5c23 u 03 01
5c23 5c23 s 	jp	nz,vol_up_down_r
5c26 5c26 s ret_39:
5c26 5c26 s   endif
5c26 5c26 s 	endm
5c26 5c26 s 	key	40,k_right,null,vol_down_down_r
5c26 5c26 s   if parkey == 0
5c26 5c26 s param_40:
5c26 5c26 s   endif
5c26 5c26 s 
5c26 5c26 s   if parkey < 2
5c26 5c26 s 	defw	st_null
5c26 5c26 s   endif
5c26 5c26 s 
5c26 5c26 s   if parkey == 0
5c26 5c26 s 	defw	ret_40
5c26 5c26 s 	defw	$ff00+40
5c26 5c26 s   endif
5c26 5c26 s 
5c26 5c26 s   if parkey == 2
5c26 5c26 s 	cycle
5c26 5c26 s 	start_cycle
5c26 5c26 s diff	defl	sampcyc-t($)
5c26 5c26 s 	assert	t($) == sampcyc
5c26 5c26 s 	sett	0
5c26 5c26 s 	endm
5c26 5c26 s 	samp_l
5c26 5c26 d 19
5c26 5c26 u 01 01
5c26 5c26 s 	add	hl,de
5c27 5c27 d 4c
5c27 5c27 u 01 01
5c27 5c27 s 	ld	c,h
5c28 5c28 d 0a
5c28 5c28 u 01 01
5c28 5c28 s 	ld	a,(bc)
5c29 5c29 d d3b9
5c29 5c29 u 02 01
5c29 5c29 s 	out	(dac_l),a
5c2b 5c2b s 	equval	dacp,%dn,$-1
5c2b 5c2b s dacp80	=	$-1
5c2b 5c2b s 	endm
5c2b 5c2b s 	dn++
5c2b 5c2b s 	endm
5c2b 5c2b s 	samp_r
5c2b 5c2b d d9
5c2b 5c2b u 01 01
5c2b 5c2b s 	exx
5c2c 5c2c d 19
5c2c 5c2c u 01 01
5c2c 5c2c s 	add	hl,de
5c2d 5c2d d 4c
5c2d 5c2d u 01 01
5c2d 5c2d s 	ld	c,h
5c2e 5c2e d 0a
5c2e 5c2e u 01 01
5c2e 5c2e s 	ld	a,(bc)
5c2f 5c2f d d3b5
5c2f 5c2f u 02 01
5c2f 5c2f s 	out	(dac_r),a
5c31 5c31 s 	equval	dacp,%dn,$-1
5c31 5c31 s dacp81	=	$-1
5c31 5c31 s 	endm
5c31 5c31 s 	dn++
5c31 5c31 d d9
5c31 5c31 u 01 01
5c31 5c31 s 	exx
5c32 5c32 s 	endm
5c32 5c32 s 	endm
5c32 5c32 d 31d366
5c32 5c32 u 03 01
5c32 5c32 s 	ld	sp,param_40
5c35 5c35 s 	; Waste 7+4
5c35 5c35 d 00
5c35 5c35 u 01 01
5c35 5c35 s 	nop
5c36 5c36 d 3e00
5c36 5c36 u 02 01
5c36 5c36 s 	ld	a,0
5c38 5c38 d 3e00
5c38 5c38 u 02 01
5c38 5c38 s 	ld	a,0		; waste we can eliminate?
5c3a 5c3a d 3a4038
5c3a 5c3a u 03 01
5c3a 5c3a s 	ld	a,(k_right >> 8)
5c3d 5c3d d e640
5c3d 5c3d u 02 01
5c3d 5c3d s 	and	k_right % $100
5c3f 5c3f d c20963
5c3f 5c3f u 03 01
5c3f 5c3f s 	jp	nz,vol_down_down_r
5c42 5c42 s ret_40:
5c42 5c42 s   endif
5c42 5c42 s 	endm
5c42 5c42 s    endif
5c42 5c42 s 
5c42 5c42 s 	endm
5c42 5c42 s 
5c42 5c42 s 	cycle
5c42 5c42 s 	start_cycle
5c42 5c42 s diff	defl	sampcyc-t($)
5c42 5c42 s 	assert	t($) == sampcyc
5c42 5c42 s 	sett	0
5c42 5c42 s 	endm
5c42 5c42 s 	samp_l
5c42 5c42 d 19
5c42 5c42 u 01 01
5c42 5c42 s 	add	hl,de
5c43 5c43 d 4c
5c43 5c43 u 01 01
5c43 5c43 s 	ld	c,h
5c44 5c44 d 0a
5c44 5c44 u 01 01
5c44 5c44 s 	ld	a,(bc)
5c45 5c45 d d3b9
5c45 5c45 u 02 01
5c45 5c45 s 	out	(dac_l),a
5c47 5c47 s 	equval	dacp,%dn,$-1
5c47 5c47 s dacp82	=	$-1
5c47 5c47 s 	endm
5c47 5c47 s 	dn++
5c47 5c47 s 	endm
5c47 5c47 s 	samp_r
5c47 5c47 d d9
5c47 5c47 u 01 01
5c47 5c47 s 	exx
5c48 5c48 d 19
5c48 5c48 u 01 01
5c48 5c48 s 	add	hl,de
5c49 5c49 d 4c
5c49 5c49 u 01 01
5c49 5c49 s 	ld	c,h
5c4a 5c4a d 0a
5c4a 5c4a u 01 01
5c4a 5c4a s 	ld	a,(bc)
5c4b 5c4b d d3b5
5c4b 5c4b u 02 01
5c4b 5c4b s 	out	(dac_r),a
5c4d 5c4d s 	equval	dacp,%dn,$-1
5c4d 5c4d s dacp83	=	$-1
5c4d 5c4d s 	endm
5c4d 5c4d s 	dn++
5c4d 5c4d d d9
5c4d 5c4d u 01 01
5c4d 5c4d s 	exx
5c4e 5c4e s 	endm
5c4e 5c4e s 	endm
5c4e 5c4e s 
5c4e 5c4e s 	; waste 48
5c4e 5c4e d c3515c
5c4e 5c4e u 03 01
5c4e 5c4e s 	jp	$+3
5c51 5c51 d c3545c
5c51 5c51 u 03 01
5c51 5c51 s 	jp	$+3
5c54 5c54 d c3575c
5c54 5c54 u 03 01
5c54 5c54 s 	jp	$+3
5c57 5c57 d c35a5c
5c57 5c57 u 03 01
5c57 5c57 s 	jp	$+3
5c5a 5c5a d 00
5c5a 5c5a u 01 01
5c5a 5c5a s 	nop
5c5b 5c5b d 00
5c5b 5c5b u 01 01
5c5b 5c5b s 	nop
5c5c 5c5c s 
5c5c 5c5c d c3c657
5c5c 5c5c u 03 01
5c5c 5c5c s 	jp	main
5c5f 5c5f s 
5c5f 5c5f s ; In the simple case a key goes down, it self modifies so that when it goes
5c5f 5c5f s ; up it turns off the audio for that channel.  But if a key goes down and
5c5f 5c5f s ; then another does then that first one should not key off the sound.  How
5c5f 5c5f s ; can it know?  On key down we need to set the key up handler to reset the
5c5f 5c5f s ; jump but not stop the audio.
5c5f 5c5f s 
5c5f 5c5f s jp_nz	equ	$C2
5c5f 5c5f s jp_z	equ	$CA
5c5f 5c5f s 
5c5f 5c5f s ; Handle note key down on left channel.
5c5f 5c5f s ; IY is new Hz step for DE.
5c5f 5c5f s down_l:
5c5f 5c5f s 	start_cycle
5c5f 5c5f s diff	defl	sampcyc-t($)
5c5f 5c5f s 	assert	t($) == sampcyc
5c5f 5c5f s 	sett	0
5c5f 5c5f s 	endm
5c5f 5c5f d d1
5c5f 5c5f u 01 01
5c5f 5c5f s 	pop	de
5c60 5c60 d fde1
5c60 5c60 u 02 01
5c60 5c60 s 	pop	iy
5c62 5c62 s 	; waste 9
5c62 5c62 d 37
5c62 5c62 u 01 01
5c62 5c62 s 	scf
5c63 5c63 d d0
5c63 5c63 u 01 01
5c63 5c63 s 	ret	nc
5c64 5c64 s 	check_l
5c64 5c64 s ldiff	defl	33-t($)
5c64 5c64 s 	assert	t($) == 11+4+7+11 ; cycles used in samp_l
5c64 5c64 s 	endm
5c64 5c64 s 	samp_r
5c64 5c64 d d9
5c64 5c64 u 01 01
5c64 5c64 s 	exx
5c65 5c65 d 19
5c65 5c65 u 01 01
5c65 5c65 s 	add	hl,de
5c66 5c66 d 4c
5c66 5c66 u 01 01
5c66 5c66 s 	ld	c,h
5c67 5c67 d 0a
5c67 5c67 u 01 01
5c67 5c67 s 	ld	a,(bc)
5c68 5c68 d d3b5
5c68 5c68 u 02 01
5c68 5c68 s 	out	(dac_r),a
5c6a 5c6a s 	equval	dacp,%dn,$-1
5c6a 5c6a s dacp84	=	$-1
5c6a 5c6a s 	endm
5c6a 5c6a s 	dn++
5c6a 5c6a d d9
5c6a 5c6a u 01 01
5c6a 5c6a s 	exx
5c6b 5c6b s 	endm
5c6b 5c6b s 
5c6b 5c6b d 0680
5c6b 5c6b u 02 01
5c6b 5c6b s 	ld	b,high(wavebnk)
5c6c 5c6c s 	org	$-1
5c6c 5c6c d 80
5c6c 5c6c u 01 03
5c6c 5c6c s wf_l:	defb	high(wavebnk)
5c6d 5c6d s 	; waste 14
5c6d 5c6d d c3705c
5c6d 5c6d u 03 01
5c6d 5c6d s 	jp	$+3
5c70 5c70 d 00
5c70 5c70 u 01 01
5c70 5c70 s 	nop
5c71 5c71 s 
5c71 5c71 d fd36fdca
5c71 5c71 u 04 01
5c71 5c71 s 	ld	(iy-3),jp_z
5c75 5c75 d dd210300
5c75 5c75 u 04 01
5c75 5c75 s 	ld	ix,3		; active down key
5c77 5c77 s 	org	$-2
5c77 5c77 d 0300
5c77 5c77 u 02 03
5c77 5c77 s active_l:	defw	3
5c79 5c79 s 	; waste 4
5c79 5c79 d 00
5c79 5c79 u 01 01
5c79 5c79 s 	nop
5c7a 5c7a s 
5c7a 5c7a s 	cycle
5c7a 5c7a s 	start_cycle
5c7a 5c7a s diff	defl	sampcyc-t($)
5c7a 5c7a s 	assert	t($) == sampcyc
5c7a 5c7a s 	sett	0
5c7a 5c7a s 	endm
5c7a 5c7a s 	samp_l
5c7a 5c7a d 19
5c7a 5c7a u 01 01
5c7a 5c7a s 	add	hl,de
5c7b 5c7b d 4c
5c7b 5c7b u 01 01
5c7b 5c7b s 	ld	c,h
5c7c 5c7c d 0a
5c7c 5c7c u 01 01
5c7c 5c7c s 	ld	a,(bc)
5c7d 5c7d d d3b9
5c7d 5c7d u 02 01
5c7d 5c7d s 	out	(dac_l),a
5c7f 5c7f s 	equval	dacp,%dn,$-1
5c7f 5c7f s dacp85	=	$-1
5c7f 5c7f s 	endm
5c7f 5c7f s 	dn++
5c7f 5c7f s 	endm
5c7f 5c7f s 	samp_r
5c7f 5c7f d d9
5c7f 5c7f u 01 01
5c7f 5c7f s 	exx
5c80 5c80 d 19
5c80 5c80 u 01 01
5c80 5c80 s 	add	hl,de
5c81 5c81 d 4c
5c81 5c81 u 01 01
5c81 5c81 s 	ld	c,h
5c82 5c82 d 0a
5c82 5c82 u 01 01
5c82 5c82 s 	ld	a,(bc)
5c83 5c83 d d3b5
5c83 5c83 u 02 01
5c83 5c83 s 	out	(dac_r),a
5c85 5c85 s 	equval	dacp,%dn,$-1
5c85 5c85 s dacp86	=	$-1
5c85 5c85 s 	endm
5c85 5c85 s 	dn++
5c85 5c85 d d9
5c85 5c85 u 01 01
5c85 5c85 s 	exx
5c86 5c86 s 	endm
5c86 5c86 s 	endm
5c86 5c86 s 	; Adjust active first in case it is us.
5c86 5c86 d dd36fe17
5c86 5c86 u 04 01
5c86 5c86 s 	ld	(ix-2),low(old_up_l)
5c8a 5c8a d dd36ff5d
5c8a 5c8a u 04 01
5c8a 5c8a s 	ld	(ix-1),high(old_up_l)
5c8e 5c8e d fd22775c
5c8e 5c8e u 04 01
5c8e 5c8e s 	ld	(active_l),iy	; we're the one to stop
5c92 5c92 s 
5c92 5c92 s 	cycle
5c92 5c92 s 	start_cycle
5c92 5c92 s diff	defl	sampcyc-t($)
5c92 5c92 s 	assert	t($) == sampcyc
5c92 5c92 s 	sett	0
5c92 5c92 s 	endm
5c92 5c92 s 	samp_l
5c92 5c92 d 19
5c92 5c92 u 01 01
5c92 5c92 s 	add	hl,de
5c93 5c93 d 4c
5c93 5c93 u 01 01
5c93 5c93 s 	ld	c,h
5c94 5c94 d 0a
5c94 5c94 u 01 01
5c94 5c94 s 	ld	a,(bc)
5c95 5c95 d d3b9
5c95 5c95 u 02 01
5c95 5c95 s 	out	(dac_l),a
5c97 5c97 s 	equval	dacp,%dn,$-1
5c97 5c97 s dacp87	=	$-1
5c97 5c97 s 	endm
5c97 5c97 s 	dn++
5c97 5c97 s 	endm
5c97 5c97 s 	samp_r
5c97 5c97 d d9
5c97 5c97 u 01 01
5c97 5c97 s 	exx
5c98 5c98 d 19
5c98 5c98 u 01 01
5c98 5c98 s 	add	hl,de
5c99 5c99 d 4c
5c99 5c99 u 01 01
5c99 5c99 s 	ld	c,h
5c9a 5c9a d 0a
5c9a 5c9a u 01 01
5c9a 5c9a s 	ld	a,(bc)
5c9b 5c9b d d3b5
5c9b 5c9b u 02 01
5c9b 5c9b s 	out	(dac_r),a
5c9d 5c9d s 	equval	dacp,%dn,$-1
5c9d 5c9d s dacp88	=	$-1
5c9d 5c9d s 	endm
5c9d 5c9d s 	dn++
5c9d 5c9d d d9
5c9d 5c9d u 01 01
5c9d 5c9d s 	exx
5c9e 5c9e s 	endm
5c9e 5c9e s 	endm
5c9e 5c9e d fd36fec5
5c9e 5c9e u 04 01
5c9e 5c9e s 	ld	(iy-2),low(up_l)
5ca2 5ca2 d fd36ff5c
5ca2 5ca2 u 04 01
5ca2 5ca2 s 	ld	(iy-1),high(up_l)	; previous will not stop audio
5ca6 5ca6 s 	; waste 20
5ca6 5ca6 d c3a95c
5ca6 5ca6 u 03 01
5ca6 5ca6 s 	jp	$+3
5ca9 5ca9 d c3ac5c
5ca9 5ca9 u 03 01
5ca9 5ca9 s 	jp	$+3
5cac 5cac s 
5cac 5cac s 	cycle
5cac 5cac s 	start_cycle
5cac 5cac s diff	defl	sampcyc-t($)
5cac 5cac s 	assert	t($) == sampcyc
5cac 5cac s 	sett	0
5cac 5cac s 	endm
5cac 5cac s 	samp_l
5cac 5cac d 19
5cac 5cac u 01 01
5cac 5cac s 	add	hl,de
5cad 5cad d 4c
5cad 5cad u 01 01
5cad 5cad s 	ld	c,h
5cae 5cae d 0a
5cae 5cae u 01 01
5cae 5cae s 	ld	a,(bc)
5caf 5caf d d3b9
5caf 5caf u 02 01
5caf 5caf s 	out	(dac_l),a
5cb1 5cb1 s 	equval	dacp,%dn,$-1
5cb1 5cb1 s dacp89	=	$-1
5cb1 5cb1 s 	endm
5cb1 5cb1 s 	dn++
5cb1 5cb1 s 	endm
5cb1 5cb1 s 	samp_r
5cb1 5cb1 d d9
5cb1 5cb1 u 01 01
5cb1 5cb1 s 	exx
5cb2 5cb2 d 19
5cb2 5cb2 u 01 01
5cb2 5cb2 s 	add	hl,de
5cb3 5cb3 d 4c
5cb3 5cb3 u 01 01
5cb3 5cb3 s 	ld	c,h
5cb4 5cb4 d 0a
5cb4 5cb4 u 01 01
5cb4 5cb4 s 	ld	a,(bc)
5cb5 5cb5 d d3b5
5cb5 5cb5 u 02 01
5cb5 5cb5 s 	out	(dac_r),a
5cb7 5cb7 s 	equval	dacp,%dn,$-1
5cb7 5cb7 s dacp90	=	$-1
5cb7 5cb7 s 	endm
5cb7 5cb7 s 	dn++
5cb7 5cb7 d d9
5cb7 5cb7 u 01 01
5cb7 5cb7 s 	exx
5cb8 5cb8 s 	endm
5cb8 5cb8 s 	endm
5cb8 5cb8 d dde1
5cb8 5cb8 u 02 01
5cb8 5cb8 s 	pop	ix
5cba 5cba d dd36002a
5cba 5cba u 04 01
5cba 5cba s 	ld	(ix),'*'
5cbe 5cbe s 	; waste 17
5cbe 5cbe d 3e00
5cbe 5cbe u 02 01
5cbe 5cbe s 	ld	a,0
5cc0 5cc0 d c3c35c
5cc0 5cc0 u 03 01
5cc0 5cc0 s 	jp	$+3
5cc3 5cc3 s 
5cc3 5cc3 d fde9
5cc3 5cc3 u 02 01
5cc3 5cc3 s 	jp	(iy)		; return to main key scan loop
5cc5 5cc5 s 
5cc5 5cc5 s up_l:
5cc5 5cc5 s 	start_cycle
5cc5 5cc5 s diff	defl	sampcyc-t($)
5cc5 5cc5 s 	assert	t($) == sampcyc
5cc5 5cc5 s 	sett	0
5cc5 5cc5 s 	endm
5cc5 5cc5 d 06c0
5cc5 5cc5 u 02 01
5cc5 5cc5 s 	ld	b,high(silence)	; back to quiet
5cc7 5cc7 d 33
5cc7 5cc7 u 01 01
5cc7 5cc7 s 	inc	sp
5cc8 5cc8 d 33
5cc8 5cc8 u 01 01
5cc8 5cc8 s 	inc	sp	; skip stack top with 2 extra
5cc9 5cc9 d fde1
5cc9 5cc9 u 02 01
5cc9 5cc9 s 	pop	iy
5ccb 5ccb s 	check_l
5ccb 5ccb s ldiff	defl	33-t($)
5ccb 5ccb s 	assert	t($) == 11+4+7+11 ; cycles used in samp_l
5ccb 5ccb s 	endm
5ccb 5ccb s 	samp_r
5ccb 5ccb d d9
5ccb 5ccb u 01 01
5ccb 5ccb s 	exx
5ccc 5ccc d 19
5ccc 5ccc u 01 01
5ccc 5ccc s 	add	hl,de
5ccd 5ccd d 4c
5ccd 5ccd u 01 01
5ccd 5ccd s 	ld	c,h
5cce 5cce d 0a
5cce 5cce u 01 01
5cce 5cce s 	ld	a,(bc)
5ccf 5ccf d d3b5
5ccf 5ccf u 02 01
5ccf 5ccf s 	out	(dac_r),a
5cd1 5cd1 s 	equval	dacp,%dn,$-1
5cd1 5cd1 s dacp91	=	$-1
5cd1 5cd1 s 	endm
5cd1 5cd1 s 	dn++
5cd1 5cd1 d d9
5cd1 5cd1 u 01 01
5cd1 5cd1 s 	exx
5cd2 5cd2 s 	endm
5cd2 5cd2 s 
5cd2 5cd2 d fd36fdc2
5cd2 5cd2 u 04 01
5cd2 5cd2 s 	ld	(iy-3),jp_nz
5cd6 5cd6 d fd36fe5f
5cd6 5cd6 u 04 01
5cd6 5cd6 s 	ld	(iy-2),low(down_l)
5cda 5cda s 	; waste 20
5cda 5cda d c3dd5c
5cda 5cda u 03 01
5cda 5cda s 	jp	$+3
5cdd 5cdd d c3e05c
5cdd 5cdd u 03 01
5cdd 5cdd s 	jp	$+3
5ce0 5ce0 s 
5ce0 5ce0 s 	start_cycle
5ce0 5ce0 s diff	defl	sampcyc-t($)
5ce0 5ce0 s 	assert	t($) == sampcyc
5ce0 5ce0 s 	sett	0
5ce0 5ce0 s 	endm
5ce0 5ce0 d fd36ff5c
5ce0 5ce0 u 04 01
5ce0 5ce0 s 	ld	(iy-1),high(down_l)
5ce4 5ce4 s 	; waste 14
5ce4 5ce4 d 00
5ce4 5ce4 u 01 01
5ce4 5ce4 s 	nop
5ce5 5ce5 d c3e85c
5ce5 5ce5 u 03 01
5ce5 5ce5 s 	jp	$+3
5ce8 5ce8 s 	check_l
5ce8 5ce8 s ldiff	defl	33-t($)
5ce8 5ce8 s 	assert	t($) == 11+4+7+11 ; cycles used in samp_l
5ce8 5ce8 s 	endm
5ce8 5ce8 s 	samp_r
5ce8 5ce8 d d9
5ce8 5ce8 u 01 01
5ce8 5ce8 s 	exx
5ce9 5ce9 d 19
5ce9 5ce9 u 01 01
5ce9 5ce9 s 	add	hl,de
5cea 5cea d 4c
5cea 5cea u 01 01
5cea 5cea s 	ld	c,h
5ceb 5ceb d 0a
5ceb 5ceb u 01 01
5ceb 5ceb s 	ld	a,(bc)
5cec 5cec d d3b5
5cec 5cec u 02 01
5cec 5cec s 	out	(dac_r),a
5cee 5cee s 	equval	dacp,%dn,$-1
5cee 5cee s dacp92	=	$-1
5cee 5cee s 	endm
5cee 5cee s 	dn++
5cee 5cee d d9
5cee 5cee u 01 01
5cee 5cee s 	exx
5cef 5cef s 	endm
5cef 5cef s 	; audio is off so active no longer matters
5cef 5cef d dd210300
5cef 5cef u 04 01
5cef 5cef s 	ld	ix,3
5cf3 5cf3 d dd22775c
5cf3 5cf3 u 04 01
5cf3 5cf3 s 	ld	(active_l),ix
5cf7 5cf7 s 
5cf7 5cf7 s 	; waste 24
5cf7 5cf7 d c3fa5c
5cf7 5cf7 u 03 01
5cf7 5cf7 s 	jp	$+3
5cfa 5cfa d c3fd5c
5cfa 5cfa u 03 01
5cfa 5cfa s 	jp	$+3
5cfd 5cfd d 00
5cfd 5cfd u 01 01
5cfd 5cfd s 	nop
5cfe 5cfe s 
5cfe 5cfe s 	cycle
5cfe 5cfe s 	start_cycle
5cfe 5cfe s diff	defl	sampcyc-t($)
5cfe 5cfe s 	assert	t($) == sampcyc
5cfe 5cfe s 	sett	0
5cfe 5cfe s 	endm
5cfe 5cfe s 	samp_l
5cfe 5cfe d 19
5cfe 5cfe u 01 01
5cfe 5cfe s 	add	hl,de
5cff 5cff d 4c
5cff 5cff u 01 01
5cff 5cff s 	ld	c,h
5d00 5d00 d 0a
5d00 5d00 u 01 01
5d00 5d00 s 	ld	a,(bc)
5d01 5d01 d d3b9
5d01 5d01 u 02 01
5d01 5d01 s 	out	(dac_l),a
5d03 5d03 s 	equval	dacp,%dn,$-1
5d03 5d03 s dacp93	=	$-1
5d03 5d03 s 	endm
5d03 5d03 s 	dn++
5d03 5d03 s 	endm
5d03 5d03 s 	samp_r
5d03 5d03 d d9
5d03 5d03 u 01 01
5d03 5d03 s 	exx
5d04 5d04 d 19
5d04 5d04 u 01 01
5d04 5d04 s 	add	hl,de
5d05 5d05 d 4c
5d05 5d05 u 01 01
5d05 5d05 s 	ld	c,h
5d06 5d06 d 0a
5d06 5d06 u 01 01
5d06 5d06 s 	ld	a,(bc)
5d07 5d07 d d3b5
5d07 5d07 u 02 01
5d07 5d07 s 	out	(dac_r),a
5d09 5d09 s 	equval	dacp,%dn,$-1
5d09 5d09 s dacp94	=	$-1
5d09 5d09 s 	endm
5d09 5d09 s 	dn++
5d09 5d09 d d9
5d09 5d09 u 01 01
5d09 5d09 s 	exx
5d0a 5d0a s 	endm
5d0a 5d0a s 	endm
5d0a 5d0a d dde1
5d0a 5d0a u 02 01
5d0a 5d0a s 	pop	ix
5d0c 5d0c d dd360020
5d0c 5d0c u 04 01
5d0c 5d0c s 	ld	(ix),' '
5d10 5d10 s 	; waste 17
5d10 5d10 d 3e00
5d10 5d10 u 02 01
5d10 5d10 s 	ld	a,0
5d12 5d12 d c3155d
5d12 5d12 u 03 01
5d12 5d12 s 	jp	$+3
5d15 5d15 s 
5d15 5d15 d fde9
5d15 5d15 u 02 01
5d15 5d15 s 	jp	(iy)		; return
5d17 5d17 s 
5d17 5d17 s ; A key has gone up but it is no longer in charge of the note.
5d17 5d17 s old_up_l:
5d17 5d17 s 	cycle
5d17 5d17 s 	start_cycle
5d17 5d17 s diff	defl	sampcyc-t($)
5d17 5d17 s 	assert	t($) == sampcyc
5d17 5d17 s 	sett	0
5d17 5d17 s 	endm
5d17 5d17 s 	samp_l
5d17 5d17 d 19
5d17 5d17 u 01 01
5d17 5d17 s 	add	hl,de
5d18 5d18 d 4c
5d18 5d18 u 01 01
5d18 5d18 s 	ld	c,h
5d19 5d19 d 0a
5d19 5d19 u 01 01
5d19 5d19 s 	ld	a,(bc)
5d1a 5d1a d d3b9
5d1a 5d1a u 02 01
5d1a 5d1a s 	out	(dac_l),a
5d1c 5d1c s 	equval	dacp,%dn,$-1
5d1c 5d1c s dacp95	=	$-1
5d1c 5d1c s 	endm
5d1c 5d1c s 	dn++
5d1c 5d1c s 	endm
5d1c 5d1c s 	samp_r
5d1c 5d1c d d9
5d1c 5d1c u 01 01
5d1c 5d1c s 	exx
5d1d 5d1d d 19
5d1d 5d1d u 01 01
5d1d 5d1d s 	add	hl,de
5d1e 5d1e d 4c
5d1e 5d1e u 01 01
5d1e 5d1e s 	ld	c,h
5d1f 5d1f d 0a
5d1f 5d1f u 01 01
5d1f 5d1f s 	ld	a,(bc)
5d20 5d20 d d3b5
5d20 5d20 u 02 01
5d20 5d20 s 	out	(dac_r),a
5d22 5d22 s 	equval	dacp,%dn,$-1
5d22 5d22 s dacp96	=	$-1
5d22 5d22 s 	endm
5d22 5d22 s 	dn++
5d22 5d22 d d9
5d22 5d22 u 01 01
5d22 5d22 s 	exx
5d23 5d23 s 	endm
5d23 5d23 s 	endm
5d23 5d23 d f1
5d23 5d23 u 01 01
5d23 5d23 s 	pop	af
5d24 5d24 d fde1
5d24 5d24 u 02 01
5d24 5d24 s 	pop	iy
5d26 5d26 d fd36fdc2
5d26 5d26 u 04 01
5d26 5d26 s 	ld	(iy-3),jp_nz
5d2a 5d2a s 	; waste 15
5d2a 5d2a d 00
5d2a 5d2a u 01 01
5d2a 5d2a s 	nop
5d2b 5d2b d 00
5d2b 5d2b u 01 01
5d2b 5d2b s 	nop
5d2c 5d2c d 3e00
5d2c 5d2c u 02 01
5d2c 5d2c s 	ld	a,0
5d2e 5d2e s 
5d2e 5d2e s 	cycle
5d2e 5d2e s 	start_cycle
5d2e 5d2e s diff	defl	sampcyc-t($)
5d2e 5d2e s 	assert	t($) == sampcyc
5d2e 5d2e s 	sett	0
5d2e 5d2e s 	endm
5d2e 5d2e s 	samp_l
5d2e 5d2e d 19
5d2e 5d2e u 01 01
5d2e 5d2e s 	add	hl,de
5d2f 5d2f d 4c
5d2f 5d2f u 01 01
5d2f 5d2f s 	ld	c,h
5d30 5d30 d 0a
5d30 5d30 u 01 01
5d30 5d30 s 	ld	a,(bc)
5d31 5d31 d d3b9
5d31 5d31 u 02 01
5d31 5d31 s 	out	(dac_l),a
5d33 5d33 s 	equval	dacp,%dn,$-1
5d33 5d33 s dacp97	=	$-1
5d33 5d33 s 	endm
5d33 5d33 s 	dn++
5d33 5d33 s 	endm
5d33 5d33 s 	samp_r
5d33 5d33 d d9
5d33 5d33 u 01 01
5d33 5d33 s 	exx
5d34 5d34 d 19
5d34 5d34 u 01 01
5d34 5d34 s 	add	hl,de
5d35 5d35 d 4c
5d35 5d35 u 01 01
5d35 5d35 s 	ld	c,h
5d36 5d36 d 0a
5d36 5d36 u 01 01
5d36 5d36 s 	ld	a,(bc)
5d37 5d37 d d3b5
5d37 5d37 u 02 01
5d37 5d37 s 	out	(dac_r),a
5d39 5d39 s 	equval	dacp,%dn,$-1
5d39 5d39 s dacp98	=	$-1
5d39 5d39 s 	endm
5d39 5d39 s 	dn++
5d39 5d39 d d9
5d39 5d39 u 01 01
5d39 5d39 s 	exx
5d3a 5d3a s 	endm
5d3a 5d3a s 	endm
5d3a 5d3a d fd36ff5c
5d3a 5d3a u 04 01
5d3a 5d3a s 	ld	(iy-1),high(down_l)
5d3e 5d3e d fd36fe5f
5d3e 5d3e u 04 01
5d3e 5d3e s 	ld	(iy-2),low(down_l)
5d42 5d42 s 	; waste 20
5d42 5d42 d c3455d
5d42 5d42 u 03 01
5d42 5d42 s 	jp	$+3
5d45 5d45 d c3485d
5d45 5d45 u 03 01
5d45 5d45 s 	jp	$+3
5d48 5d48 s 
5d48 5d48 s 	cycle
5d48 5d48 s 	start_cycle
5d48 5d48 s diff	defl	sampcyc-t($)
5d48 5d48 s 	assert	t($) == sampcyc
5d48 5d48 s 	sett	0
5d48 5d48 s 	endm
5d48 5d48 s 	samp_l
5d48 5d48 d 19
5d48 5d48 u 01 01
5d48 5d48 s 	add	hl,de
5d49 5d49 d 4c
5d49 5d49 u 01 01
5d49 5d49 s 	ld	c,h
5d4a 5d4a d 0a
5d4a 5d4a u 01 01
5d4a 5d4a s 	ld	a,(bc)
5d4b 5d4b d d3b9
5d4b 5d4b u 02 01
5d4b 5d4b s 	out	(dac_l),a
5d4d 5d4d s 	equval	dacp,%dn,$-1
5d4d 5d4d s dacp99	=	$-1
5d4d 5d4d s 	endm
5d4d 5d4d s 	dn++
5d4d 5d4d s 	endm
5d4d 5d4d s 	samp_r
5d4d 5d4d d d9
5d4d 5d4d u 01 01
5d4d 5d4d s 	exx
5d4e 5d4e d 19
5d4e 5d4e u 01 01
5d4e 5d4e s 	add	hl,de
5d4f 5d4f d 4c
5d4f 5d4f u 01 01
5d4f 5d4f s 	ld	c,h
5d50 5d50 d 0a
5d50 5d50 u 01 01
5d50 5d50 s 	ld	a,(bc)
5d51 5d51 d d3b5
5d51 5d51 u 02 01
5d51 5d51 s 	out	(dac_r),a
5d53 5d53 s 	equval	dacp,%dn,$-1
5d53 5d53 s dacp100	=	$-1
5d53 5d53 s 	endm
5d53 5d53 s 	dn++
5d53 5d53 d d9
5d53 5d53 u 01 01
5d53 5d53 s 	exx
5d54 5d54 s 	endm
5d54 5d54 s 	endm
5d54 5d54 d dde1
5d54 5d54 u 02 01
5d54 5d54 s 	pop	ix
5d56 5d56 d dd360020
5d56 5d56 u 04 01
5d56 5d56 s 	ld	(ix),' '
5d5a 5d5a s 	; waste 17
5d5a 5d5a d 3e00
5d5a 5d5a u 02 01
5d5a 5d5a s 	ld	a,0
5d5c 5d5c d c35f5d
5d5c 5d5c u 03 01
5d5c 5d5c s 	jp	$+3
5d5f 5d5f s 
5d5f 5d5f d fde9
5d5f 5d5f u 02 01
5d5f 5d5f s 	jp	(iy)		; return
5d61 5d61 s 
5d61 5d61 s ; Handle note key down on right channel.
5d61 5d61 s ; Top of stack is new Hz step for DE.
5d61 5d61 s ; Next stack is return address.
5d61 5d61 s ; Next stack is screen address for key press on/off indicator.
5d61 5d61 s 
5d61 5d61 s down_r:
5d61 5d61 s 	start_cycle
5d61 5d61 s diff	defl	sampcyc-t($)
5d61 5d61 s 	assert	t($) == sampcyc
5d61 5d61 s 	sett	0
5d61 5d61 s 	endm
5d61 5d61 s 	samp_l
5d61 5d61 d 19
5d61 5d61 u 01 01
5d61 5d61 s 	add	hl,de
5d62 5d62 d 4c
5d62 5d62 u 01 01
5d62 5d62 s 	ld	c,h
5d63 5d63 d 0a
5d63 5d63 u 01 01
5d63 5d63 s 	ld	a,(bc)
5d64 5d64 d d3b9
5d64 5d64 u 02 01
5d64 5d64 s 	out	(dac_l),a
5d66 5d66 s 	equval	dacp,%dn,$-1
5d66 5d66 s dacp101	=	$-1
5d66 5d66 s 	endm
5d66 5d66 s 	dn++
5d66 5d66 s 	endm
5d66 5d66 d d9
5d66 5d66 u 01 01
5d66 5d66 s 	exx
5d67 5d67 d d1
5d67 5d67 u 01 01
5d67 5d67 s 	pop	de
5d68 5d68 d 0680
5d68 5d68 u 02 01
5d68 5d68 s 	ld	b,high(wavebnk)
5d69 5d69 s 	org	$-1
5d69 5d69 d 80
5d69 5d69 u 01 03
5d69 5d69 s wf_r:	defb	high(wavebnk)
5d6a 5d6a d d9
5d6a 5d6a u 01 01
5d6a 5d6a s 	exx
5d6b 5d6b d fde1
5d6b 5d6b u 02 01
5d6b 5d6b s 	pop	iy		; to self-modify key-down check
5d6d 5d6d d fd36fdca
5d6d 5d6d u 04 01
5d6d 5d6d s 	ld	(iy-3),jp_z
5d71 5d71 d dd210300
5d71 5d71 u 04 01
5d71 5d71 s 	ld	ix,3		; active down key
5d73 5d73 s 	org	$-2
5d73 5d73 d 0300
5d73 5d73 u 02 03
5d73 5d73 s active_r:	defw	3
5d75 5d75 s 	; waste 12
5d75 5d75 d 1800
5d75 5d75 u 02 01
5d75 5d75 s 	jr	$+2
5d77 5d77 s 	; waste another 15
5d77 5d77 d 00
5d77 5d77 u 01 01
5d77 5d77 s 	nop
5d78 5d78 d 00
5d78 5d78 u 01 01
5d78 5d78 s 	nop
5d79 5d79 d 3e00
5d79 5d79 u 02 01
5d79 5d79 s 	ld	a,0
5d7b 5d7b s 
5d7b 5d7b s 	cycle
5d7b 5d7b s 	start_cycle
5d7b 5d7b s diff	defl	sampcyc-t($)
5d7b 5d7b s 	assert	t($) == sampcyc
5d7b 5d7b s 	sett	0
5d7b 5d7b s 	endm
5d7b 5d7b s 	samp_l
5d7b 5d7b d 19
5d7b 5d7b u 01 01
5d7b 5d7b s 	add	hl,de
5d7c 5d7c d 4c
5d7c 5d7c u 01 01
5d7c 5d7c s 	ld	c,h
5d7d 5d7d d 0a
5d7d 5d7d u 01 01
5d7d 5d7d s 	ld	a,(bc)
5d7e 5d7e d d3b9
5d7e 5d7e u 02 01
5d7e 5d7e s 	out	(dac_l),a
5d80 5d80 s 	equval	dacp,%dn,$-1
5d80 5d80 s dacp102	=	$-1
5d80 5d80 s 	endm
5d80 5d80 s 	dn++
5d80 5d80 s 	endm
5d80 5d80 s 	samp_r
5d80 5d80 d d9
5d80 5d80 u 01 01
5d80 5d80 s 	exx
5d81 5d81 d 19
5d81 5d81 u 01 01
5d81 5d81 s 	add	hl,de
5d82 5d82 d 4c
5d82 5d82 u 01 01
5d82 5d82 s 	ld	c,h
5d83 5d83 d 0a
5d83 5d83 u 01 01
5d83 5d83 s 	ld	a,(bc)
5d84 5d84 d d3b5
5d84 5d84 u 02 01
5d84 5d84 s 	out	(dac_r),a
5d86 5d86 s 	equval	dacp,%dn,$-1
5d86 5d86 s dacp103	=	$-1
5d86 5d86 s 	endm
5d86 5d86 s 	dn++
5d86 5d86 d d9
5d86 5d86 u 01 01
5d86 5d86 s 	exx
5d87 5d87 s 	endm
5d87 5d87 s 	endm
5d87 5d87 s 	; Adjust active first in case it is us.
5d87 5d87 d dd36fe16
5d87 5d87 u 04 01
5d87 5d87 s 	ld	(ix-2),low(old_up_r)
5d8b 5d8b d dd36ff5e
5d8b 5d8b u 04 01
5d8b 5d8b s 	ld	(ix-1),high(old_up_r)
5d8f 5d8f d fd22735d
5d8f 5d8f u 04 01
5d8f 5d8f s 	ld	(active_r),iy	; we're the one to stop
5d93 5d93 s 
5d93 5d93 s 	cycle
5d93 5d93 s 	start_cycle
5d93 5d93 s diff	defl	sampcyc-t($)
5d93 5d93 s 	assert	t($) == sampcyc
5d93 5d93 s 	sett	0
5d93 5d93 s 	endm
5d93 5d93 s 	samp_l
5d93 5d93 d 19
5d93 5d93 u 01 01
5d93 5d93 s 	add	hl,de
5d94 5d94 d 4c
5d94 5d94 u 01 01
5d94 5d94 s 	ld	c,h
5d95 5d95 d 0a
5d95 5d95 u 01 01
5d95 5d95 s 	ld	a,(bc)
5d96 5d96 d d3b9
5d96 5d96 u 02 01
5d96 5d96 s 	out	(dac_l),a
5d98 5d98 s 	equval	dacp,%dn,$-1
5d98 5d98 s dacp104	=	$-1
5d98 5d98 s 	endm
5d98 5d98 s 	dn++
5d98 5d98 s 	endm
5d98 5d98 s 	samp_r
5d98 5d98 d d9
5d98 5d98 u 01 01
5d98 5d98 s 	exx
5d99 5d99 d 19
5d99 5d99 u 01 01
5d99 5d99 s 	add	hl,de
5d9a 5d9a d 4c
5d9a 5d9a u 01 01
5d9a 5d9a s 	ld	c,h
5d9b 5d9b d 0a
5d9b 5d9b u 01 01
5d9b 5d9b s 	ld	a,(bc)
5d9c 5d9c d d3b5
5d9c 5d9c u 02 01
5d9c 5d9c s 	out	(dac_r),a
5d9e 5d9e s 	equval	dacp,%dn,$-1
5d9e 5d9e s dacp105	=	$-1
5d9e 5d9e s 	endm
5d9e 5d9e s 	dn++
5d9e 5d9e d d9
5d9e 5d9e u 01 01
5d9e 5d9e s 	exx
5d9f 5d9f s 	endm
5d9f 5d9f s 	endm
5d9f 5d9f d fd36fec6
5d9f 5d9f u 04 01
5d9f 5d9f s 	ld	(iy-2),low(up_r)
5da3 5da3 d fd36ff5d
5da3 5da3 u 04 01
5da3 5da3 s 	ld	(iy-1),high(up_r)	; previous will not stop audio
5da7 5da7 s 	; waste 20
5da7 5da7 d c3aa5d
5da7 5da7 u 03 01
5da7 5da7 s 	jp	$+3
5daa 5daa d c3ad5d
5daa 5daa u 03 01
5daa 5daa s 	jp	$+3
5dad 5dad s 
5dad 5dad s 	cycle
5dad 5dad s 	start_cycle
5dad 5dad s diff	defl	sampcyc-t($)
5dad 5dad s 	assert	t($) == sampcyc
5dad 5dad s 	sett	0
5dad 5dad s 	endm
5dad 5dad s 	samp_l
5dad 5dad d 19
5dad 5dad u 01 01
5dad 5dad s 	add	hl,de
5dae 5dae d 4c
5dae 5dae u 01 01
5dae 5dae s 	ld	c,h
5daf 5daf d 0a
5daf 5daf u 01 01
5daf 5daf s 	ld	a,(bc)
5db0 5db0 d d3b9
5db0 5db0 u 02 01
5db0 5db0 s 	out	(dac_l),a
5db2 5db2 s 	equval	dacp,%dn,$-1
5db2 5db2 s dacp106	=	$-1
5db2 5db2 s 	endm
5db2 5db2 s 	dn++
5db2 5db2 s 	endm
5db2 5db2 s 	samp_r
5db2 5db2 d d9
5db2 5db2 u 01 01
5db2 5db2 s 	exx
5db3 5db3 d 19
5db3 5db3 u 01 01
5db3 5db3 s 	add	hl,de
5db4 5db4 d 4c
5db4 5db4 u 01 01
5db4 5db4 s 	ld	c,h
5db5 5db5 d 0a
5db5 5db5 u 01 01
5db5 5db5 s 	ld	a,(bc)
5db6 5db6 d d3b5
5db6 5db6 u 02 01
5db6 5db6 s 	out	(dac_r),a
5db8 5db8 s 	equval	dacp,%dn,$-1
5db8 5db8 s dacp107	=	$-1
5db8 5db8 s 	endm
5db8 5db8 s 	dn++
5db8 5db8 d d9
5db8 5db8 u 01 01
5db8 5db8 s 	exx
5db9 5db9 s 	endm
5db9 5db9 s 	endm
5db9 5db9 d dde1
5db9 5db9 u 02 01
5db9 5db9 s 	pop	ix
5dbb 5dbb d dd36002a
5dbb 5dbb u 04 01
5dbb 5dbb s 	ld	(ix),'*'
5dbf 5dbf s 	; waste 17
5dbf 5dbf d 3e00
5dbf 5dbf u 02 01
5dbf 5dbf s 	ld	a,0
5dc1 5dc1 d c3c45d
5dc1 5dc1 u 03 01
5dc1 5dc1 s 	jp	$+3
5dc4 5dc4 s 
5dc4 5dc4 d fde9
5dc4 5dc4 u 02 01
5dc4 5dc4 s 	jp	(iy)		; return to main key scan loop
5dc6 5dc6 s 
5dc6 5dc6 s up_r:
5dc6 5dc6 s 	start_cycle
5dc6 5dc6 s diff	defl	sampcyc-t($)
5dc6 5dc6 s 	assert	t($) == sampcyc
5dc6 5dc6 s 	sett	0
5dc6 5dc6 s 	endm
5dc6 5dc6 s 	samp_l
5dc6 5dc6 d 19
5dc6 5dc6 u 01 01
5dc6 5dc6 s 	add	hl,de
5dc7 5dc7 d 4c
5dc7 5dc7 u 01 01
5dc7 5dc7 s 	ld	c,h
5dc8 5dc8 d 0a
5dc8 5dc8 u 01 01
5dc8 5dc8 s 	ld	a,(bc)
5dc9 5dc9 d d3b9
5dc9 5dc9 u 02 01
5dc9 5dc9 s 	out	(dac_l),a
5dcb 5dcb s 	equval	dacp,%dn,$-1
5dcb 5dcb s dacp108	=	$-1
5dcb 5dcb s 	endm
5dcb 5dcb s 	dn++
5dcb 5dcb s 	endm
5dcb 5dcb d d9
5dcb 5dcb u 01 01
5dcb 5dcb s 	exx
5dcc 5dcc d 06c0
5dcc 5dcc u 02 01
5dcc 5dcc s 	ld	b,high(silence)	; back to quiet
5dce 5dce d d9
5dce 5dce u 01 01
5dce 5dce s 	exx
5dcf 5dcf d f1
5dcf 5dcf u 01 01
5dcf 5dcf s 	pop	af
5dd0 5dd0 d fde1
5dd0 5dd0 u 02 01
5dd0 5dd0 s 	pop	iy
5dd2 5dd2 s 
5dd2 5dd2 d fd36fdc2
5dd2 5dd2 u 04 01
5dd2 5dd2 s 	ld	(iy-3),jp_nz
5dd6 5dd6 d fd36fe61
5dd6 5dd6 u 04 01
5dd6 5dd6 s 	ld	(iy-2),low(down_r)
5dda 5dda s 	; waste 22
5dda 5dda d 1800
5dda 5dda u 02 01
5dda 5dda s 	jr	$+2
5ddc 5ddc d c3df5d
5ddc 5ddc u 03 01
5ddc 5ddc s 	jp	$+3
5ddf 5ddf s 
5ddf 5ddf s 	start_cycle
5ddf 5ddf s diff	defl	sampcyc-t($)
5ddf 5ddf s 	assert	t($) == sampcyc
5ddf 5ddf s 	sett	0
5ddf 5ddf s 	endm
5ddf 5ddf s 	samp_l
5ddf 5ddf d 19
5ddf 5ddf u 01 01
5ddf 5ddf s 	add	hl,de
5de0 5de0 d 4c
5de0 5de0 u 01 01
5de0 5de0 s 	ld	c,h
5de1 5de1 d 0a
5de1 5de1 u 01 01
5de1 5de1 s 	ld	a,(bc)
5de2 5de2 d d3b9
5de2 5de2 u 02 01
5de2 5de2 s 	out	(dac_l),a
5de4 5de4 s 	equval	dacp,%dn,$-1
5de4 5de4 s dacp109	=	$-1
5de4 5de4 s 	endm
5de4 5de4 s 	dn++
5de4 5de4 s 	endm
5de4 5de4 d fd36ff5d
5de4 5de4 u 04 01
5de4 5de4 s 	ld	(iy-1),high(down_r)
5de8 5de8 s 	; waste 22
5de8 5de8 d 00
5de8 5de8 u 01 01
5de8 5de8 s 	nop
5de9 5de9 d 00
5de9 5de9 u 01 01
5de9 5de9 s 	nop
5dea 5dea d 00
5dea 5dea u 01 01
5dea 5dea s 	nop
5deb 5deb d c3ee5d
5deb 5deb u 03 01
5deb 5deb s 	jp	$+3
5dee 5dee s 
5dee 5dee s 	; audio is off so active no longer matters
5dee 5dee d dd210300
5dee 5dee u 04 01
5dee 5dee s 	ld	ix,3
5df2 5df2 d dd22735d
5df2 5df2 u 04 01
5df2 5df2 s 	ld	(active_r),ix
5df6 5df6 s 
5df6 5df6 s 	; waste 24
5df6 5df6 d c3f95d
5df6 5df6 u 03 01
5df6 5df6 s 	jp	$+3
5df9 5df9 d c3fc5d
5df9 5df9 u 03 01
5df9 5df9 s 	jp	$+3
5dfc 5dfc d 00
5dfc 5dfc u 01 01
5dfc 5dfc s 	nop
5dfd 5dfd s 
5dfd 5dfd s 	cycle
5dfd 5dfd s 	start_cycle
5dfd 5dfd s diff	defl	sampcyc-t($)
5dfd 5dfd s 	assert	t($) == sampcyc
5dfd 5dfd s 	sett	0
5dfd 5dfd s 	endm
5dfd 5dfd s 	samp_l
5dfd 5dfd d 19
5dfd 5dfd u 01 01
5dfd 5dfd s 	add	hl,de
5dfe 5dfe d 4c
5dfe 5dfe u 01 01
5dfe 5dfe s 	ld	c,h
5dff 5dff d 0a
5dff 5dff u 01 01
5dff 5dff s 	ld	a,(bc)
5e00 5e00 d d3b9
5e00 5e00 u 02 01
5e00 5e00 s 	out	(dac_l),a
5e02 5e02 s 	equval	dacp,%dn,$-1
5e02 5e02 s dacp110	=	$-1
5e02 5e02 s 	endm
5e02 5e02 s 	dn++
5e02 5e02 s 	endm
5e02 5e02 s 	samp_r
5e02 5e02 d d9
5e02 5e02 u 01 01
5e02 5e02 s 	exx
5e03 5e03 d 19
5e03 5e03 u 01 01
5e03 5e03 s 	add	hl,de
5e04 5e04 d 4c
5e04 5e04 u 01 01
5e04 5e04 s 	ld	c,h
5e05 5e05 d 0a
5e05 5e05 u 01 01
5e05 5e05 s 	ld	a,(bc)
5e06 5e06 d d3b5
5e06 5e06 u 02 01
5e06 5e06 s 	out	(dac_r),a
5e08 5e08 s 	equval	dacp,%dn,$-1
5e08 5e08 s dacp111	=	$-1
5e08 5e08 s 	endm
5e08 5e08 s 	dn++
5e08 5e08 d d9
5e08 5e08 u 01 01
5e08 5e08 s 	exx
5e09 5e09 s 	endm
5e09 5e09 s 	endm
5e09 5e09 d dde1
5e09 5e09 u 02 01
5e09 5e09 s 	pop	ix
5e0b 5e0b d dd360020
5e0b 5e0b u 04 01
5e0b 5e0b s 	ld	(ix),' '
5e0f 5e0f s 	; waste 17
5e0f 5e0f d 3e00
5e0f 5e0f u 02 01
5e0f 5e0f s 	ld	a,0
5e11 5e11 d c3145e
5e11 5e11 u 03 01
5e11 5e11 s 	jp	$+3
5e14 5e14 s 
5e14 5e14 d fde9
5e14 5e14 u 02 01
5e14 5e14 s 	jp	(iy)		; return
5e16 5e16 s 
5e16 5e16 s ; A key has gone up but it is no longer in charge of the note.
5e16 5e16 s old_up_r:
5e16 5e16 s 	cycle
5e16 5e16 s 	start_cycle
5e16 5e16 s diff	defl	sampcyc-t($)
5e16 5e16 s 	assert	t($) == sampcyc
5e16 5e16 s 	sett	0
5e16 5e16 s 	endm
5e16 5e16 s 	samp_l
5e16 5e16 d 19
5e16 5e16 u 01 01
5e16 5e16 s 	add	hl,de
5e17 5e17 d 4c
5e17 5e17 u 01 01
5e17 5e17 s 	ld	c,h
5e18 5e18 d 0a
5e18 5e18 u 01 01
5e18 5e18 s 	ld	a,(bc)
5e19 5e19 d d3b9
5e19 5e19 u 02 01
5e19 5e19 s 	out	(dac_l),a
5e1b 5e1b s 	equval	dacp,%dn,$-1
5e1b 5e1b s dacp112	=	$-1
5e1b 5e1b s 	endm
5e1b 5e1b s 	dn++
5e1b 5e1b s 	endm
5e1b 5e1b s 	samp_r
5e1b 5e1b d d9
5e1b 5e1b u 01 01
5e1b 5e1b s 	exx
5e1c 5e1c d 19
5e1c 5e1c u 01 01
5e1c 5e1c s 	add	hl,de
5e1d 5e1d d 4c
5e1d 5e1d u 01 01
5e1d 5e1d s 	ld	c,h
5e1e 5e1e d 0a
5e1e 5e1e u 01 01
5e1e 5e1e s 	ld	a,(bc)
5e1f 5e1f d d3b5
5e1f 5e1f u 02 01
5e1f 5e1f s 	out	(dac_r),a
5e21 5e21 s 	equval	dacp,%dn,$-1
5e21 5e21 s dacp113	=	$-1
5e21 5e21 s 	endm
5e21 5e21 s 	dn++
5e21 5e21 d d9
5e21 5e21 u 01 01
5e21 5e21 s 	exx
5e22 5e22 s 	endm
5e22 5e22 s 	endm
5e22 5e22 d f1
5e22 5e22 u 01 01
5e22 5e22 s 	pop	af
5e23 5e23 d fde1
5e23 5e23 u 02 01
5e23 5e23 s 	pop	iy
5e25 5e25 d fd36fdc2
5e25 5e25 u 04 01
5e25 5e25 s 	ld	(iy-3),jp_nz
5e29 5e29 s 	; waste 15
5e29 5e29 d 00
5e29 5e29 u 01 01
5e29 5e29 s 	nop
5e2a 5e2a d 00
5e2a 5e2a u 01 01
5e2a 5e2a s 	nop
5e2b 5e2b d 3e00
5e2b 5e2b u 02 01
5e2b 5e2b s 	ld	a,0
5e2d 5e2d s 
5e2d 5e2d s 	cycle
5e2d 5e2d s 	start_cycle
5e2d 5e2d s diff	defl	sampcyc-t($)
5e2d 5e2d s 	assert	t($) == sampcyc
5e2d 5e2d s 	sett	0
5e2d 5e2d s 	endm
5e2d 5e2d s 	samp_l
5e2d 5e2d d 19
5e2d 5e2d u 01 01
5e2d 5e2d s 	add	hl,de
5e2e 5e2e d 4c
5e2e 5e2e u 01 01
5e2e 5e2e s 	ld	c,h
5e2f 5e2f d 0a
5e2f 5e2f u 01 01
5e2f 5e2f s 	ld	a,(bc)
5e30 5e30 d d3b9
5e30 5e30 u 02 01
5e30 5e30 s 	out	(dac_l),a
5e32 5e32 s 	equval	dacp,%dn,$-1
5e32 5e32 s dacp114	=	$-1
5e32 5e32 s 	endm
5e32 5e32 s 	dn++
5e32 5e32 s 	endm
5e32 5e32 s 	samp_r
5e32 5e32 d d9
5e32 5e32 u 01 01
5e32 5e32 s 	exx
5e33 5e33 d 19
5e33 5e33 u 01 01
5e33 5e33 s 	add	hl,de
5e34 5e34 d 4c
5e34 5e34 u 01 01
5e34 5e34 s 	ld	c,h
5e35 5e35 d 0a
5e35 5e35 u 01 01
5e35 5e35 s 	ld	a,(bc)
5e36 5e36 d d3b5
5e36 5e36 u 02 01
5e36 5e36 s 	out	(dac_r),a
5e38 5e38 s 	equval	dacp,%dn,$-1
5e38 5e38 s dacp115	=	$-1
5e38 5e38 s 	endm
5e38 5e38 s 	dn++
5e38 5e38 d d9
5e38 5e38 u 01 01
5e38 5e38 s 	exx
5e39 5e39 s 	endm
5e39 5e39 s 	endm
5e39 5e39 d fd36ff5d
5e39 5e39 u 04 01
5e39 5e39 s 	ld	(iy-1),high(down_r)
5e3d 5e3d d fd36fe61
5e3d 5e3d u 04 01
5e3d 5e3d s 	ld	(iy-2),low(down_r)
5e41 5e41 s 	; waste 20
5e41 5e41 d c3445e
5e41 5e41 u 03 01
5e41 5e41 s 	jp	$+3
5e44 5e44 d c3475e
5e44 5e44 u 03 01
5e44 5e44 s 	jp	$+3
5e47 5e47 s 
5e47 5e47 s 	cycle
5e47 5e47 s 	start_cycle
5e47 5e47 s diff	defl	sampcyc-t($)
5e47 5e47 s 	assert	t($) == sampcyc
5e47 5e47 s 	sett	0
5e47 5e47 s 	endm
5e47 5e47 s 	samp_l
5e47 5e47 d 19
5e47 5e47 u 01 01
5e47 5e47 s 	add	hl,de
5e48 5e48 d 4c
5e48 5e48 u 01 01
5e48 5e48 s 	ld	c,h
5e49 5e49 d 0a
5e49 5e49 u 01 01
5e49 5e49 s 	ld	a,(bc)
5e4a 5e4a d d3b9
5e4a 5e4a u 02 01
5e4a 5e4a s 	out	(dac_l),a
5e4c 5e4c s 	equval	dacp,%dn,$-1
5e4c 5e4c s dacp116	=	$-1
5e4c 5e4c s 	endm
5e4c 5e4c s 	dn++
5e4c 5e4c s 	endm
5e4c 5e4c s 	samp_r
5e4c 5e4c d d9
5e4c 5e4c u 01 01
5e4c 5e4c s 	exx
5e4d 5e4d d 19
5e4d 5e4d u 01 01
5e4d 5e4d s 	add	hl,de
5e4e 5e4e d 4c
5e4e 5e4e u 01 01
5e4e 5e4e s 	ld	c,h
5e4f 5e4f d 0a
5e4f 5e4f u 01 01
5e4f 5e4f s 	ld	a,(bc)
5e50 5e50 d d3b5
5e50 5e50 u 02 01
5e50 5e50 s 	out	(dac_r),a
5e52 5e52 s 	equval	dacp,%dn,$-1
5e52 5e52 s dacp117	=	$-1
5e52 5e52 s 	endm
5e52 5e52 s 	dn++
5e52 5e52 d d9
5e52 5e52 u 01 01
5e52 5e52 s 	exx
5e53 5e53 s 	endm
5e53 5e53 s 	endm
5e53 5e53 d dde1
5e53 5e53 u 02 01
5e53 5e53 s 	pop	ix
5e55 5e55 d dd360020
5e55 5e55 u 04 01
5e55 5e55 s 	ld	(ix),' '
5e59 5e59 s 	; waste 17
5e59 5e59 d 3e00
5e59 5e59 u 02 01
5e59 5e59 s 	ld	a,0
5e5b 5e5b d c35e5e
5e5b 5e5b u 03 01
5e5b 5e5b s 	jp	$+3
5e5e 5e5e s 
5e5e 5e5e d fde9
5e5e 5e5e u 02 01
5e5e 5e5e s 	jp	(iy)		; return
5e60 5e60 s 
5e60 5e60 s 	pn = 0
5e60 5e60 s set_ind	macro	ind,tab,char
5e60 5e60 s 	local	ipos
5e60 5e60 s 	cycle
5e60 5e60 s 	ld	a,(ind)
5e60 5e60 s 	and	3
5e60 5e60 s 	add	a,a
5e60 5e60 s 	or	low(tab)
5e60 5e60 s 	ld	(ipos),a
5e60 5e60 s 	; waste 14
5e60 5e60 s 	ld	a,0
5e60 5e60 s 	ld	a,0
5e60 5e60 s 
5e60 5e60 s 	cycle
5e60 5e60 s 	ld	iy,(tab)
5e60 5e60 s 	org	$-2
5e60 5e60 s ipos	defw	tab
5e60 5e60 s 	ld	(iy),char
5e60 5e60 s 	equval	ptr,%pn,$-1
5e60 5e60 s 	pn++
5e60 5e60 s 	; waste 19
5e60 5e60 s 	jr	$+2
5e60 5e60 s 	ld	a,0
5e60 5e60 s 
5e60 5e60 s 	endm
5e60 5e60 s 
5e60 5e60 s wave_down_l:
5e60 5e60 s 	set_ind	wf_l,wave_ind_l,' '
5e60 5e60 s 	cycle
5e60 5e60 s 	start_cycle
5e60 5e60 s diff	defl	sampcyc-t($)
5e60 5e60 s 	assert	t($) == sampcyc
5e60 5e60 s 	sett	0
5e60 5e60 s 	endm
5e60 5e60 s 	samp_l
5e60 5e60 d 19
5e60 5e60 u 01 01
5e60 5e60 s 	add	hl,de
5e61 5e61 d 4c
5e61 5e61 u 01 01
5e61 5e61 s 	ld	c,h
5e62 5e62 d 0a
5e62 5e62 u 01 01
5e62 5e62 s 	ld	a,(bc)
5e63 5e63 d d3b9
5e63 5e63 u 02 01
5e63 5e63 s 	out	(dac_l),a
5e65 5e65 s 	equval	dacp,%dn,$-1
5e65 5e65 s dacp118	=	$-1
5e65 5e65 s 	endm
5e65 5e65 s 	dn++
5e65 5e65 s 	endm
5e65 5e65 s 	samp_r
5e65 5e65 d d9
5e65 5e65 u 01 01
5e65 5e65 s 	exx
5e66 5e66 d 19
5e66 5e66 u 01 01
5e66 5e66 s 	add	hl,de
5e67 5e67 d 4c
5e67 5e67 u 01 01
5e67 5e67 s 	ld	c,h
5e68 5e68 d 0a
5e68 5e68 u 01 01
5e68 5e68 s 	ld	a,(bc)
5e69 5e69 d d3b5
5e69 5e69 u 02 01
5e69 5e69 s 	out	(dac_r),a
5e6b 5e6b s 	equval	dacp,%dn,$-1
5e6b 5e6b s dacp119	=	$-1
5e6b 5e6b s 	endm
5e6b 5e6b s 	dn++
5e6b 5e6b d d9
5e6b 5e6b u 01 01
5e6b 5e6b s 	exx
5e6c 5e6c s 	endm
5e6c 5e6c s 	endm
5e6c 5e6c d 3a6c5c
5e6c 5e6c u 03 01
5e6c 5e6c s 	ld	a,(wf_l)
5e6f 5e6f d e603
5e6f 5e6f u 02 01
5e6f 5e6f s 	and	3
5e71 5e71 d 87
5e71 5e71 u 01 01
5e71 5e71 s 	add	a,a
5e72 5e72 d f638
5e72 5e72 u 02 01
5e72 5e72 s 	or	low(wave_ind_l)
5e74 5e74 d 32895e
5e74 5e74 u 03 01
5e74 5e74 s 	ld	(?d0499),a
5e77 5e77 s 	; waste 14
5e77 5e77 d 3e00
5e77 5e77 u 02 01
5e77 5e77 s 	ld	a,0
5e79 5e79 d 3e00
5e79 5e79 u 02 01
5e79 5e79 s 	ld	a,0
5e7b 5e7b s 
5e7b 5e7b s 	cycle
5e7b 5e7b s 	start_cycle
5e7b 5e7b s diff	defl	sampcyc-t($)
5e7b 5e7b s 	assert	t($) == sampcyc
5e7b 5e7b s 	sett	0
5e7b 5e7b s 	endm
5e7b 5e7b s 	samp_l
5e7b 5e7b d 19
5e7b 5e7b u 01 01
5e7b 5e7b s 	add	hl,de
5e7c 5e7c d 4c
5e7c 5e7c u 01 01
5e7c 5e7c s 	ld	c,h
5e7d 5e7d d 0a
5e7d 5e7d u 01 01
5e7d 5e7d s 	ld	a,(bc)
5e7e 5e7e d d3b9
5e7e 5e7e u 02 01
5e7e 5e7e s 	out	(dac_l),a
5e80 5e80 s 	equval	dacp,%dn,$-1
5e80 5e80 s dacp120	=	$-1
5e80 5e80 s 	endm
5e80 5e80 s 	dn++
5e80 5e80 s 	endm
5e80 5e80 s 	samp_r
5e80 5e80 d d9
5e80 5e80 u 01 01
5e80 5e80 s 	exx
5e81 5e81 d 19
5e81 5e81 u 01 01
5e81 5e81 s 	add	hl,de
5e82 5e82 d 4c
5e82 5e82 u 01 01
5e82 5e82 s 	ld	c,h
5e83 5e83 d 0a
5e83 5e83 u 01 01
5e83 5e83 s 	ld	a,(bc)
5e84 5e84 d d3b5
5e84 5e84 u 02 01
5e84 5e84 s 	out	(dac_r),a
5e86 5e86 s 	equval	dacp,%dn,$-1
5e86 5e86 s dacp121	=	$-1
5e86 5e86 s 	endm
5e86 5e86 s 	dn++
5e86 5e86 d d9
5e86 5e86 u 01 01
5e86 5e86 s 	exx
5e87 5e87 s 	endm
5e87 5e87 s 	endm
5e87 5e87 d fd2a3867
5e87 5e87 u 04 01
5e87 5e87 s 	ld	iy,(wave_ind_l)
5e89 5e89 s 	org	$-2
5e89 5e89 d 3867
5e89 5e89 u 02 03
5e89 5e89 s ?d0499	defw	wave_ind_l
5e8b 5e8b d fd360020
5e8b 5e8b u 04 01
5e8b 5e8b s 	ld	(iy),' '
5e8f 5e8f s 	equval	ptr,%pn,$-1
5e8f 5e8f s ptr0	=	$-1
5e8f 5e8f s 	endm
5e8f 5e8f s 	pn++
5e8f 5e8f s 	; waste 19
5e8f 5e8f d 1800
5e8f 5e8f u 02 01
5e8f 5e8f s 	jr	$+2
5e91 5e91 d 3e00
5e91 5e91 u 02 01
5e91 5e91 s 	ld	a,0
5e93 5e93 s 
5e93 5e93 s 	endm
5e93 5e93 s 
5e93 5e93 s 	cycle
5e93 5e93 s 	start_cycle
5e93 5e93 s diff	defl	sampcyc-t($)
5e93 5e93 s 	assert	t($) == sampcyc
5e93 5e93 s 	sett	0
5e93 5e93 s 	endm
5e93 5e93 s 	samp_l
5e93 5e93 d 19
5e93 5e93 u 01 01
5e93 5e93 s 	add	hl,de
5e94 5e94 d 4c
5e94 5e94 u 01 01
5e94 5e94 s 	ld	c,h
5e95 5e95 d 0a
5e95 5e95 u 01 01
5e95 5e95 s 	ld	a,(bc)
5e96 5e96 d d3b9
5e96 5e96 u 02 01
5e96 5e96 s 	out	(dac_l),a
5e98 5e98 s 	equval	dacp,%dn,$-1
5e98 5e98 s dacp122	=	$-1
5e98 5e98 s 	endm
5e98 5e98 s 	dn++
5e98 5e98 s 	endm
5e98 5e98 s 	samp_r
5e98 5e98 d d9
5e98 5e98 u 01 01
5e98 5e98 s 	exx
5e99 5e99 d 19
5e99 5e99 u 01 01
5e99 5e99 s 	add	hl,de
5e9a 5e9a d 4c
5e9a 5e9a u 01 01
5e9a 5e9a s 	ld	c,h
5e9b 5e9b d 0a
5e9b 5e9b u 01 01
5e9b 5e9b s 	ld	a,(bc)
5e9c 5e9c d d3b5
5e9c 5e9c u 02 01
5e9c 5e9c s 	out	(dac_r),a
5e9e 5e9e s 	equval	dacp,%dn,$-1
5e9e 5e9e s dacp123	=	$-1
5e9e 5e9e s 	endm
5e9e 5e9e s 	dn++
5e9e 5e9e d d9
5e9e 5e9e u 01 01
5e9e 5e9e s 	exx
5e9f 5e9f s 	endm
5e9f 5e9f s 	endm
5e9f 5e9f d 3a6c5c
5e9f 5e9f u 03 01
5e9f 5e9f s 	ld	a,(wf_l)
5ea2 5ea2 d 3c
5ea2 5ea2 u 01 01
5ea2 5ea2 s 	inc	a
5ea3 5ea3 d e603
5ea3 5ea3 u 02 01
5ea3 5ea3 s 	and	3
5ea5 5ea5 d f680
5ea5 5ea5 u 02 01
5ea5 5ea5 s 	or	high(wavebnk)
5ea6 5ea6 s 	org	$-1
5ea6 5ea6 d 80
5ea6 5ea6 u 01 03
5ea6 5ea6 s wb_l:	defb	high(wavebnk)
5ea7 5ea7 d 326c5c
5ea7 5ea7 u 03 01
5ea7 5ea7 s 	ld	(wf_l),a
5eaa 5eaa d f1
5eaa 5eaa u 01 01
5eaa 5eaa s 	pop	af
5eab 5eab s 	; waste 4
5eab 5eab d 00
5eab 5eab u 01 01
5eab 5eab s 	nop
5eac 5eac s 
5eac 5eac s 	set_ind	wf_l,wave_ind_l,up_ptr
5eac 5eac s 	cycle
5eac 5eac s 	start_cycle
5eac 5eac s diff	defl	sampcyc-t($)
5eac 5eac s 	assert	t($) == sampcyc
5eac 5eac s 	sett	0
5eac 5eac s 	endm
5eac 5eac s 	samp_l
5eac 5eac d 19
5eac 5eac u 01 01
5eac 5eac s 	add	hl,de
5ead 5ead d 4c
5ead 5ead u 01 01
5ead 5ead s 	ld	c,h
5eae 5eae d 0a
5eae 5eae u 01 01
5eae 5eae s 	ld	a,(bc)
5eaf 5eaf d d3b9
5eaf 5eaf u 02 01
5eaf 5eaf s 	out	(dac_l),a
5eb1 5eb1 s 	equval	dacp,%dn,$-1
5eb1 5eb1 s dacp124	=	$-1
5eb1 5eb1 s 	endm
5eb1 5eb1 s 	dn++
5eb1 5eb1 s 	endm
5eb1 5eb1 s 	samp_r
5eb1 5eb1 d d9
5eb1 5eb1 u 01 01
5eb1 5eb1 s 	exx
5eb2 5eb2 d 19
5eb2 5eb2 u 01 01
5eb2 5eb2 s 	add	hl,de
5eb3 5eb3 d 4c
5eb3 5eb3 u 01 01
5eb3 5eb3 s 	ld	c,h
5eb4 5eb4 d 0a
5eb4 5eb4 u 01 01
5eb4 5eb4 s 	ld	a,(bc)
5eb5 5eb5 d d3b5
5eb5 5eb5 u 02 01
5eb5 5eb5 s 	out	(dac_r),a
5eb7 5eb7 s 	equval	dacp,%dn,$-1
5eb7 5eb7 s dacp125	=	$-1
5eb7 5eb7 s 	endm
5eb7 5eb7 s 	dn++
5eb7 5eb7 d d9
5eb7 5eb7 u 01 01
5eb7 5eb7 s 	exx
5eb8 5eb8 s 	endm
5eb8 5eb8 s 	endm
5eb8 5eb8 d 3a6c5c
5eb8 5eb8 u 03 01
5eb8 5eb8 s 	ld	a,(wf_l)
5ebb 5ebb d e603
5ebb 5ebb u 02 01
5ebb 5ebb s 	and	3
5ebd 5ebd d 87
5ebd 5ebd u 01 01
5ebd 5ebd s 	add	a,a
5ebe 5ebe d f638
5ebe 5ebe u 02 01
5ebe 5ebe s 	or	low(wave_ind_l)
5ec0 5ec0 d 32d55e
5ec0 5ec0 u 03 01
5ec0 5ec0 s 	ld	(?d0519),a
5ec3 5ec3 s 	; waste 14
5ec3 5ec3 d 3e00
5ec3 5ec3 u 02 01
5ec3 5ec3 s 	ld	a,0
5ec5 5ec5 d 3e00
5ec5 5ec5 u 02 01
5ec5 5ec5 s 	ld	a,0
5ec7 5ec7 s 
5ec7 5ec7 s 	cycle
5ec7 5ec7 s 	start_cycle
5ec7 5ec7 s diff	defl	sampcyc-t($)
5ec7 5ec7 s 	assert	t($) == sampcyc
5ec7 5ec7 s 	sett	0
5ec7 5ec7 s 	endm
5ec7 5ec7 s 	samp_l
5ec7 5ec7 d 19
5ec7 5ec7 u 01 01
5ec7 5ec7 s 	add	hl,de
5ec8 5ec8 d 4c
5ec8 5ec8 u 01 01
5ec8 5ec8 s 	ld	c,h
5ec9 5ec9 d 0a
5ec9 5ec9 u 01 01
5ec9 5ec9 s 	ld	a,(bc)
5eca 5eca d d3b9
5eca 5eca u 02 01
5eca 5eca s 	out	(dac_l),a
5ecc 5ecc s 	equval	dacp,%dn,$-1
5ecc 5ecc s dacp126	=	$-1
5ecc 5ecc s 	endm
5ecc 5ecc s 	dn++
5ecc 5ecc s 	endm
5ecc 5ecc s 	samp_r
5ecc 5ecc d d9
5ecc 5ecc u 01 01
5ecc 5ecc s 	exx
5ecd 5ecd d 19
5ecd 5ecd u 01 01
5ecd 5ecd s 	add	hl,de
5ece 5ece d 4c
5ece 5ece u 01 01
5ece 5ece s 	ld	c,h
5ecf 5ecf d 0a
5ecf 5ecf u 01 01
5ecf 5ecf s 	ld	a,(bc)
5ed0 5ed0 d d3b5
5ed0 5ed0 u 02 01
5ed0 5ed0 s 	out	(dac_r),a
5ed2 5ed2 s 	equval	dacp,%dn,$-1
5ed2 5ed2 s dacp127	=	$-1
5ed2 5ed2 s 	endm
5ed2 5ed2 s 	dn++
5ed2 5ed2 d d9
5ed2 5ed2 u 01 01
5ed2 5ed2 s 	exx
5ed3 5ed3 s 	endm
5ed3 5ed3 s 	endm
5ed3 5ed3 d fd2a3867
5ed3 5ed3 u 04 01
5ed3 5ed3 s 	ld	iy,(wave_ind_l)
5ed5 5ed5 s 	org	$-2
5ed5 5ed5 d 3867
5ed5 5ed5 u 02 03
5ed5 5ed5 s ?d0519	defw	wave_ind_l
5ed7 5ed7 d fd36005b
5ed7 5ed7 u 04 01
5ed7 5ed7 s 	ld	(iy),up_ptr
5edb 5edb s 	equval	ptr,%pn,$-1
5edb 5edb s ptr1	=	$-1
5edb 5edb s 	endm
5edb 5edb s 	pn++
5edb 5edb s 	; waste 19
5edb 5edb d 1800
5edb 5edb u 02 01
5edb 5edb s 	jr	$+2
5edd 5edd d 3e00
5edd 5edd u 02 01
5edd 5edd s 	ld	a,0
5edf 5edf s 
5edf 5edf s 	endm
5edf 5edf s 
5edf 5edf s 	cycle
5edf 5edf s 	start_cycle
5edf 5edf s diff	defl	sampcyc-t($)
5edf 5edf s 	assert	t($) == sampcyc
5edf 5edf s 	sett	0
5edf 5edf s 	endm
5edf 5edf s 	samp_l
5edf 5edf d 19
5edf 5edf u 01 01
5edf 5edf s 	add	hl,de
5ee0 5ee0 d 4c
5ee0 5ee0 u 01 01
5ee0 5ee0 s 	ld	c,h
5ee1 5ee1 d 0a
5ee1 5ee1 u 01 01
5ee1 5ee1 s 	ld	a,(bc)
5ee2 5ee2 d d3b9
5ee2 5ee2 u 02 01
5ee2 5ee2 s 	out	(dac_l),a
5ee4 5ee4 s 	equval	dacp,%dn,$-1
5ee4 5ee4 s dacp128	=	$-1
5ee4 5ee4 s 	endm
5ee4 5ee4 s 	dn++
5ee4 5ee4 s 	endm
5ee4 5ee4 s 	samp_r
5ee4 5ee4 d d9
5ee4 5ee4 u 01 01
5ee4 5ee4 s 	exx
5ee5 5ee5 d 19
5ee5 5ee5 u 01 01
5ee5 5ee5 s 	add	hl,de
5ee6 5ee6 d 4c
5ee6 5ee6 u 01 01
5ee6 5ee6 s 	ld	c,h
5ee7 5ee7 d 0a
5ee7 5ee7 u 01 01
5ee7 5ee7 s 	ld	a,(bc)
5ee8 5ee8 d d3b5
5ee8 5ee8 u 02 01
5ee8 5ee8 s 	out	(dac_r),a
5eea 5eea s 	equval	dacp,%dn,$-1
5eea 5eea s dacp129	=	$-1
5eea 5eea s 	endm
5eea 5eea s 	dn++
5eea 5eea d d9
5eea 5eea u 01 01
5eea 5eea s 	exx
5eeb 5eeb s 	endm
5eeb 5eeb s 	endm
5eeb 5eeb d fde1
5eeb 5eeb u 02 01
5eeb 5eeb s 	pop	iy
5eed 5eed d fd36ff5f
5eed 5eed u 04 01
5eed 5eed s 	ld	(iy-1),high(wave_up_l)
5ef1 5ef1 d fd36fe2c
5ef1 5ef1 u 04 01
5ef1 5ef1 s 	ld	(iy-2),low(wave_up_l)
5ef5 5ef5 s 	; waste 6
5ef5 5ef5 d 33
5ef5 5ef5 u 01 01
5ef5 5ef5 s 	inc	sp		; yeah, it's OK
5ef6 5ef6 s 
5ef6 5ef6 s 	cycle
5ef6 5ef6 s 	start_cycle
5ef6 5ef6 s diff	defl	sampcyc-t($)
5ef6 5ef6 s 	assert	t($) == sampcyc
5ef6 5ef6 s 	sett	0
5ef6 5ef6 s 	endm
5ef6 5ef6 s 	samp_l
5ef6 5ef6 d 19
5ef6 5ef6 u 01 01
5ef6 5ef6 s 	add	hl,de
5ef7 5ef7 d 4c
5ef7 5ef7 u 01 01
5ef7 5ef7 s 	ld	c,h
5ef8 5ef8 d 0a
5ef8 5ef8 u 01 01
5ef8 5ef8 s 	ld	a,(bc)
5ef9 5ef9 d d3b9
5ef9 5ef9 u 02 01
5ef9 5ef9 s 	out	(dac_l),a
5efb 5efb s 	equval	dacp,%dn,$-1
5efb 5efb s dacp130	=	$-1
5efb 5efb s 	endm
5efb 5efb s 	dn++
5efb 5efb s 	endm
5efb 5efb s 	samp_r
5efb 5efb d d9
5efb 5efb u 01 01
5efb 5efb s 	exx
5efc 5efc d 19
5efc 5efc u 01 01
5efc 5efc s 	add	hl,de
5efd 5efd d 4c
5efd 5efd u 01 01
5efd 5efd s 	ld	c,h
5efe 5efe d 0a
5efe 5efe u 01 01
5efe 5efe s 	ld	a,(bc)
5eff 5eff d d3b5
5eff 5eff u 02 01
5eff 5eff s 	out	(dac_r),a
5f01 5f01 s 	equval	dacp,%dn,$-1
5f01 5f01 s dacp131	=	$-1
5f01 5f01 s 	endm
5f01 5f01 s 	dn++
5f01 5f01 d d9
5f01 5f01 u 01 01
5f01 5f01 s 	exx
5f02 5f02 s 	endm
5f02 5f02 s 	endm
5f02 5f02 d fd36fdca
5f02 5f02 u 04 01
5f02 5f02 s 	ld	(iy-3),jp_z
5f06 5f06 s 	; waste 10
5f06 5f06 d c3095f
5f06 5f06 u 03 01
5f06 5f06 s 	jp	$+3
5f09 5f09 d 78
5f09 5f09 u 01 01
5f09 5f09 s 	ld	a,b
5f0a 5f0a d fec0
5f0a 5f0a u 02 01
5f0a 5f0a s 	cp	high(silence)
5f0c 5f0c d ca2a5f
5f0c 5f0c u 03 01
5f0c 5f0c s 	jp	z,jp_iy		; return if currently silent
5f0f 5f0f d 00
5f0f 5f0f u 01 01
5f0f 5f0f s 	nop			; balance out
5f10 5f10 d 00
5f10 5f10 u 01 01
5f10 5f10 s 	nop			; jp (iy)
5f11 5f11 s 
5f11 5f11 s 	cycle
5f11 5f11 s 	start_cycle
5f11 5f11 s diff	defl	sampcyc-t($)
5f11 5f11 s 	assert	t($) == sampcyc
5f11 5f11 s 	sett	0
5f11 5f11 s 	endm
5f11 5f11 s 	samp_l
5f11 5f11 d 19
5f11 5f11 u 01 01
5f11 5f11 s 	add	hl,de
5f12 5f12 d 4c
5f12 5f12 u 01 01
5f12 5f12 s 	ld	c,h
5f13 5f13 d 0a
5f13 5f13 u 01 01
5f13 5f13 s 	ld	a,(bc)
5f14 5f14 d d3b9
5f14 5f14 u 02 01
5f14 5f14 s 	out	(dac_l),a
5f16 5f16 s 	equval	dacp,%dn,$-1
5f16 5f16 s dacp132	=	$-1
5f16 5f16 s 	endm
5f16 5f16 s 	dn++
5f16 5f16 s 	endm
5f16 5f16 s 	samp_r
5f16 5f16 d d9
5f16 5f16 u 01 01
5f16 5f16 s 	exx
5f17 5f17 d 19
5f17 5f17 u 01 01
5f17 5f17 s 	add	hl,de
5f18 5f18 d 4c
5f18 5f18 u 01 01
5f18 5f18 s 	ld	c,h
5f19 5f19 d 0a
5f19 5f19 u 01 01
5f19 5f19 s 	ld	a,(bc)
5f1a 5f1a d d3b5
5f1a 5f1a u 02 01
5f1a 5f1a s 	out	(dac_r),a
5f1c 5f1c s 	equval	dacp,%dn,$-1
5f1c 5f1c s dacp133	=	$-1
5f1c 5f1c s 	endm
5f1c 5f1c s 	dn++
5f1c 5f1c d d9
5f1c 5f1c u 01 01
5f1c 5f1c s 	exx
5f1d 5f1d s 	endm
5f1d 5f1d s 	endm
5f1d 5f1d d 3a6c5c
5f1d 5f1d u 03 01
5f1d 5f1d s 	ld	a,(wf_l)
5f20 5f20 d 47
5f20 5f20 u 01 01
5f20 5f20 s 	ld	b,a
5f21 5f21 s 	; waste 33
5f21 5f21 d 3a0000
5f21 5f21 u 03 01
5f21 5f21 s 	ld	a,(0)
5f24 5f24 d c3275f
5f24 5f24 u 03 01
5f24 5f24 s 	jp	$+3
5f27 5f27 d c32a5f
5f27 5f27 u 03 01
5f27 5f27 s 	jp	$+3
5f2a 5f2a d fde9
5f2a 5f2a u 02 01
5f2a 5f2a s jp_iy:	jp	(iy)
5f2c 5f2c s 
5f2c 5f2c s kreset	macro	handler
5f2c 5f2c s 	cycle
5f2c 5f2c s 
5f2c 5f2c s 	pop	af
5f2c 5f2c s 	pop	iy
5f2c 5f2c s 	ld	(iy-3),jp_nz
5f2c 5f2c s 	; waste 15
5f2c 5f2c s 	nop
5f2c 5f2c s 	nop
5f2c 5f2c s 	ld	a,0
5f2c 5f2c s 
5f2c 5f2c s 	cycle
5f2c 5f2c s 
5f2c 5f2c s 	ld	(iy-2),low(handler)
5f2c 5f2c s 	ld	(iy-1),high(handler)
5f2c 5f2c s 	; waste 12
5f2c 5f2c s 	jr	$+2
5f2c 5f2c s 	jp	(iy)
5f2c 5f2c s 
5f2c 5f2c s 	endm
5f2c 5f2c s 
5f2c 5f2c s wave_up_l:
5f2c 5f2c s 	kreset	wave_down_l
5f2c 5f2c s 	cycle
5f2c 5f2c s 	start_cycle
5f2c 5f2c s diff	defl	sampcyc-t($)
5f2c 5f2c s 	assert	t($) == sampcyc
5f2c 5f2c s 	sett	0
5f2c 5f2c s 	endm
5f2c 5f2c s 	samp_l
5f2c 5f2c d 19
5f2c 5f2c u 01 01
5f2c 5f2c s 	add	hl,de
5f2d 5f2d d 4c
5f2d 5f2d u 01 01
5f2d 5f2d s 	ld	c,h
5f2e 5f2e d 0a
5f2e 5f2e u 01 01
5f2e 5f2e s 	ld	a,(bc)
5f2f 5f2f d d3b9
5f2f 5f2f u 02 01
5f2f 5f2f s 	out	(dac_l),a
5f31 5f31 s 	equval	dacp,%dn,$-1
5f31 5f31 s dacp134	=	$-1
5f31 5f31 s 	endm
5f31 5f31 s 	dn++
5f31 5f31 s 	endm
5f31 5f31 s 	samp_r
5f31 5f31 d d9
5f31 5f31 u 01 01
5f31 5f31 s 	exx
5f32 5f32 d 19
5f32 5f32 u 01 01
5f32 5f32 s 	add	hl,de
5f33 5f33 d 4c
5f33 5f33 u 01 01
5f33 5f33 s 	ld	c,h
5f34 5f34 d 0a
5f34 5f34 u 01 01
5f34 5f34 s 	ld	a,(bc)
5f35 5f35 d d3b5
5f35 5f35 u 02 01
5f35 5f35 s 	out	(dac_r),a
5f37 5f37 s 	equval	dacp,%dn,$-1
5f37 5f37 s dacp135	=	$-1
5f37 5f37 s 	endm
5f37 5f37 s 	dn++
5f37 5f37 d d9
5f37 5f37 u 01 01
5f37 5f37 s 	exx
5f38 5f38 s 	endm
5f38 5f38 s 	endm
5f38 5f38 s 
5f38 5f38 d f1
5f38 5f38 u 01 01
5f38 5f38 s 	pop	af
5f39 5f39 d fde1
5f39 5f39 u 02 01
5f39 5f39 s 	pop	iy
5f3b 5f3b d fd36fdc2
5f3b 5f3b u 04 01
5f3b 5f3b s 	ld	(iy-3),jp_nz
5f3f 5f3f s 	; waste 15
5f3f 5f3f d 00
5f3f 5f3f u 01 01
5f3f 5f3f s 	nop
5f40 5f40 d 00
5f40 5f40 u 01 01
5f40 5f40 s 	nop
5f41 5f41 d 3e00
5f41 5f41 u 02 01
5f41 5f41 s 	ld	a,0
5f43 5f43 s 
5f43 5f43 s 	cycle
5f43 5f43 s 	start_cycle
5f43 5f43 s diff	defl	sampcyc-t($)
5f43 5f43 s 	assert	t($) == sampcyc
5f43 5f43 s 	sett	0
5f43 5f43 s 	endm
5f43 5f43 s 	samp_l
5f43 5f43 d 19
5f43 5f43 u 01 01
5f43 5f43 s 	add	hl,de
5f44 5f44 d 4c
5f44 5f44 u 01 01
5f44 5f44 s 	ld	c,h
5f45 5f45 d 0a
5f45 5f45 u 01 01
5f45 5f45 s 	ld	a,(bc)
5f46 5f46 d d3b9
5f46 5f46 u 02 01
5f46 5f46 s 	out	(dac_l),a
5f48 5f48 s 	equval	dacp,%dn,$-1
5f48 5f48 s dacp136	=	$-1
5f48 5f48 s 	endm
5f48 5f48 s 	dn++
5f48 5f48 s 	endm
5f48 5f48 s 	samp_r
5f48 5f48 d d9
5f48 5f48 u 01 01
5f48 5f48 s 	exx
5f49 5f49 d 19
5f49 5f49 u 01 01
5f49 5f49 s 	add	hl,de
5f4a 5f4a d 4c
5f4a 5f4a u 01 01
5f4a 5f4a s 	ld	c,h
5f4b 5f4b d 0a
5f4b 5f4b u 01 01
5f4b 5f4b s 	ld	a,(bc)
5f4c 5f4c d d3b5
5f4c 5f4c u 02 01
5f4c 5f4c s 	out	(dac_r),a
5f4e 5f4e s 	equval	dacp,%dn,$-1
5f4e 5f4e s dacp137	=	$-1
5f4e 5f4e s 	endm
5f4e 5f4e s 	dn++
5f4e 5f4e d d9
5f4e 5f4e u 01 01
5f4e 5f4e s 	exx
5f4f 5f4f s 	endm
5f4f 5f4f s 	endm
5f4f 5f4f s 
5f4f 5f4f d fd36fe60
5f4f 5f4f u 04 01
5f4f 5f4f s 	ld	(iy-2),low(wave_down_l)
5f53 5f53 d fd36ff5e
5f53 5f53 u 04 01
5f53 5f53 s 	ld	(iy-1),high(wave_down_l)
5f57 5f57 s 	; waste 12
5f57 5f57 d 1800
5f57 5f57 u 02 01
5f57 5f57 s 	jr	$+2
5f59 5f59 d fde9
5f59 5f59 u 02 01
5f59 5f59 s 	jp	(iy)
5f5b 5f5b s 
5f5b 5f5b s 	endm
5f5b 5f5b s 
5f5b 5f5b s wave_down_r:
5f5b 5f5b s 	set_ind	wf_r,wave_ind_r,' '
5f5b 5f5b s 	cycle
5f5b 5f5b s 	start_cycle
5f5b 5f5b s diff	defl	sampcyc-t($)
5f5b 5f5b s 	assert	t($) == sampcyc
5f5b 5f5b s 	sett	0
5f5b 5f5b s 	endm
5f5b 5f5b s 	samp_l
5f5b 5f5b d 19
5f5b 5f5b u 01 01
5f5b 5f5b s 	add	hl,de
5f5c 5f5c d 4c
5f5c 5f5c u 01 01
5f5c 5f5c s 	ld	c,h
5f5d 5f5d d 0a
5f5d 5f5d u 01 01
5f5d 5f5d s 	ld	a,(bc)
5f5e 5f5e d d3b9
5f5e 5f5e u 02 01
5f5e 5f5e s 	out	(dac_l),a
5f60 5f60 s 	equval	dacp,%dn,$-1
5f60 5f60 s dacp138	=	$-1
5f60 5f60 s 	endm
5f60 5f60 s 	dn++
5f60 5f60 s 	endm
5f60 5f60 s 	samp_r
5f60 5f60 d d9
5f60 5f60 u 01 01
5f60 5f60 s 	exx
5f61 5f61 d 19
5f61 5f61 u 01 01
5f61 5f61 s 	add	hl,de
5f62 5f62 d 4c
5f62 5f62 u 01 01
5f62 5f62 s 	ld	c,h
5f63 5f63 d 0a
5f63 5f63 u 01 01
5f63 5f63 s 	ld	a,(bc)
5f64 5f64 d d3b5
5f64 5f64 u 02 01
5f64 5f64 s 	out	(dac_r),a
5f66 5f66 s 	equval	dacp,%dn,$-1
5f66 5f66 s dacp139	=	$-1
5f66 5f66 s 	endm
5f66 5f66 s 	dn++
5f66 5f66 d d9
5f66 5f66 u 01 01
5f66 5f66 s 	exx
5f67 5f67 s 	endm
5f67 5f67 s 	endm
5f67 5f67 d 3a695d
5f67 5f67 u 03 01
5f67 5f67 s 	ld	a,(wf_r)
5f6a 5f6a d e603
5f6a 5f6a u 02 01
5f6a 5f6a s 	and	3
5f6c 5f6c d 87
5f6c 5f6c u 01 01
5f6c 5f6c s 	add	a,a
5f6d 5f6d d f630
5f6d 5f6d u 02 01
5f6d 5f6d s 	or	low(wave_ind_r)
5f6f 5f6f d 32845f
5f6f 5f6f u 03 01
5f6f 5f6f s 	ld	(?d0564),a
5f72 5f72 s 	; waste 14
5f72 5f72 d 3e00
5f72 5f72 u 02 01
5f72 5f72 s 	ld	a,0
5f74 5f74 d 3e00
5f74 5f74 u 02 01
5f74 5f74 s 	ld	a,0
5f76 5f76 s 
5f76 5f76 s 	cycle
5f76 5f76 s 	start_cycle
5f76 5f76 s diff	defl	sampcyc-t($)
5f76 5f76 s 	assert	t($) == sampcyc
5f76 5f76 s 	sett	0
5f76 5f76 s 	endm
5f76 5f76 s 	samp_l
5f76 5f76 d 19
5f76 5f76 u 01 01
5f76 5f76 s 	add	hl,de
5f77 5f77 d 4c
5f77 5f77 u 01 01
5f77 5f77 s 	ld	c,h
5f78 5f78 d 0a
5f78 5f78 u 01 01
5f78 5f78 s 	ld	a,(bc)
5f79 5f79 d d3b9
5f79 5f79 u 02 01
5f79 5f79 s 	out	(dac_l),a
5f7b 5f7b s 	equval	dacp,%dn,$-1
5f7b 5f7b s dacp140	=	$-1
5f7b 5f7b s 	endm
5f7b 5f7b s 	dn++
5f7b 5f7b s 	endm
5f7b 5f7b s 	samp_r
5f7b 5f7b d d9
5f7b 5f7b u 01 01
5f7b 5f7b s 	exx
5f7c 5f7c d 19
5f7c 5f7c u 01 01
5f7c 5f7c s 	add	hl,de
5f7d 5f7d d 4c
5f7d 5f7d u 01 01
5f7d 5f7d s 	ld	c,h
5f7e 5f7e d 0a
5f7e 5f7e u 01 01
5f7e 5f7e s 	ld	a,(bc)
5f7f 5f7f d d3b5
5f7f 5f7f u 02 01
5f7f 5f7f s 	out	(dac_r),a
5f81 5f81 s 	equval	dacp,%dn,$-1
5f81 5f81 s dacp141	=	$-1
5f81 5f81 s 	endm
5f81 5f81 s 	dn++
5f81 5f81 d d9
5f81 5f81 u 01 01
5f81 5f81 s 	exx
5f82 5f82 s 	endm
5f82 5f82 s 	endm
5f82 5f82 d fd2a3067
5f82 5f82 u 04 01
5f82 5f82 s 	ld	iy,(wave_ind_r)
5f84 5f84 s 	org	$-2
5f84 5f84 d 3067
5f84 5f84 u 02 03
5f84 5f84 s ?d0564	defw	wave_ind_r
5f86 5f86 d fd360020
5f86 5f86 u 04 01
5f86 5f86 s 	ld	(iy),' '
5f8a 5f8a s 	equval	ptr,%pn,$-1
5f8a 5f8a s ptr2	=	$-1
5f8a 5f8a s 	endm
5f8a 5f8a s 	pn++
5f8a 5f8a s 	; waste 19
5f8a 5f8a d 1800
5f8a 5f8a u 02 01
5f8a 5f8a s 	jr	$+2
5f8c 5f8c d 3e00
5f8c 5f8c u 02 01
5f8c 5f8c s 	ld	a,0
5f8e 5f8e s 
5f8e 5f8e s 	endm
5f8e 5f8e s 
5f8e 5f8e s 	cycle
5f8e 5f8e s 	start_cycle
5f8e 5f8e s diff	defl	sampcyc-t($)
5f8e 5f8e s 	assert	t($) == sampcyc
5f8e 5f8e s 	sett	0
5f8e 5f8e s 	endm
5f8e 5f8e s 	samp_l
5f8e 5f8e d 19
5f8e 5f8e u 01 01
5f8e 5f8e s 	add	hl,de
5f8f 5f8f d 4c
5f8f 5f8f u 01 01
5f8f 5f8f s 	ld	c,h
5f90 5f90 d 0a
5f90 5f90 u 01 01
5f90 5f90 s 	ld	a,(bc)
5f91 5f91 d d3b9
5f91 5f91 u 02 01
5f91 5f91 s 	out	(dac_l),a
5f93 5f93 s 	equval	dacp,%dn,$-1
5f93 5f93 s dacp142	=	$-1
5f93 5f93 s 	endm
5f93 5f93 s 	dn++
5f93 5f93 s 	endm
5f93 5f93 s 	samp_r
5f93 5f93 d d9
5f93 5f93 u 01 01
5f93 5f93 s 	exx
5f94 5f94 d 19
5f94 5f94 u 01 01
5f94 5f94 s 	add	hl,de
5f95 5f95 d 4c
5f95 5f95 u 01 01
5f95 5f95 s 	ld	c,h
5f96 5f96 d 0a
5f96 5f96 u 01 01
5f96 5f96 s 	ld	a,(bc)
5f97 5f97 d d3b5
5f97 5f97 u 02 01
5f97 5f97 s 	out	(dac_r),a
5f99 5f99 s 	equval	dacp,%dn,$-1
5f99 5f99 s dacp143	=	$-1
5f99 5f99 s 	endm
5f99 5f99 s 	dn++
5f99 5f99 d d9
5f99 5f99 u 01 01
5f99 5f99 s 	exx
5f9a 5f9a s 	endm
5f9a 5f9a s 	endm
5f9a 5f9a d 3a695d
5f9a 5f9a u 03 01
5f9a 5f9a s 	ld	a,(wf_r)
5f9d 5f9d d 3c
5f9d 5f9d u 01 01
5f9d 5f9d s 	inc	a
5f9e 5f9e d e603
5f9e 5f9e u 02 01
5f9e 5f9e s 	and	3
5fa0 5fa0 d f680
5fa0 5fa0 u 02 01
5fa0 5fa0 s 	or	high(wavebnk)	; self-mod for volume control
5fa1 5fa1 s 	org	$-1
5fa1 5fa1 d 80
5fa1 5fa1 u 01 03
5fa1 5fa1 s wb_r:	defb	high(wavebnk)
5fa2 5fa2 d 32695d
5fa2 5fa2 u 03 01
5fa2 5fa2 s 	ld	(wf_r),a
5fa5 5fa5 d f1
5fa5 5fa5 u 01 01
5fa5 5fa5 s 	pop	af
5fa6 5fa6 s 	; waste 4
5fa6 5fa6 d 00
5fa6 5fa6 u 01 01
5fa6 5fa6 s 	nop
5fa7 5fa7 s 
5fa7 5fa7 s 	set_ind	wf_r,wave_ind_r,down_ptr
5fa7 5fa7 s 	cycle
5fa7 5fa7 s 	start_cycle
5fa7 5fa7 s diff	defl	sampcyc-t($)
5fa7 5fa7 s 	assert	t($) == sampcyc
5fa7 5fa7 s 	sett	0
5fa7 5fa7 s 	endm
5fa7 5fa7 s 	samp_l
5fa7 5fa7 d 19
5fa7 5fa7 u 01 01
5fa7 5fa7 s 	add	hl,de
5fa8 5fa8 d 4c
5fa8 5fa8 u 01 01
5fa8 5fa8 s 	ld	c,h
5fa9 5fa9 d 0a
5fa9 5fa9 u 01 01
5fa9 5fa9 s 	ld	a,(bc)
5faa 5faa d d3b9
5faa 5faa u 02 01
5faa 5faa s 	out	(dac_l),a
5fac 5fac s 	equval	dacp,%dn,$-1
5fac 5fac s dacp144	=	$-1
5fac 5fac s 	endm
5fac 5fac s 	dn++
5fac 5fac s 	endm
5fac 5fac s 	samp_r
5fac 5fac d d9
5fac 5fac u 01 01
5fac 5fac s 	exx
5fad 5fad d 19
5fad 5fad u 01 01
5fad 5fad s 	add	hl,de
5fae 5fae d 4c
5fae 5fae u 01 01
5fae 5fae s 	ld	c,h
5faf 5faf d 0a
5faf 5faf u 01 01
5faf 5faf s 	ld	a,(bc)
5fb0 5fb0 d d3b5
5fb0 5fb0 u 02 01
5fb0 5fb0 s 	out	(dac_r),a
5fb2 5fb2 s 	equval	dacp,%dn,$-1
5fb2 5fb2 s dacp145	=	$-1
5fb2 5fb2 s 	endm
5fb2 5fb2 s 	dn++
5fb2 5fb2 d d9
5fb2 5fb2 u 01 01
5fb2 5fb2 s 	exx
5fb3 5fb3 s 	endm
5fb3 5fb3 s 	endm
5fb3 5fb3 d 3a695d
5fb3 5fb3 u 03 01
5fb3 5fb3 s 	ld	a,(wf_r)
5fb6 5fb6 d e603
5fb6 5fb6 u 02 01
5fb6 5fb6 s 	and	3
5fb8 5fb8 d 87
5fb8 5fb8 u 01 01
5fb8 5fb8 s 	add	a,a
5fb9 5fb9 d f630
5fb9 5fb9 u 02 01
5fb9 5fb9 s 	or	low(wave_ind_r)
5fbb 5fbb d 32d05f
5fbb 5fbb u 03 01
5fbb 5fbb s 	ld	(?d0584),a
5fbe 5fbe s 	; waste 14
5fbe 5fbe d 3e00
5fbe 5fbe u 02 01
5fbe 5fbe s 	ld	a,0
5fc0 5fc0 d 3e00
5fc0 5fc0 u 02 01
5fc0 5fc0 s 	ld	a,0
5fc2 5fc2 s 
5fc2 5fc2 s 	cycle
5fc2 5fc2 s 	start_cycle
5fc2 5fc2 s diff	defl	sampcyc-t($)
5fc2 5fc2 s 	assert	t($) == sampcyc
5fc2 5fc2 s 	sett	0
5fc2 5fc2 s 	endm
5fc2 5fc2 s 	samp_l
5fc2 5fc2 d 19
5fc2 5fc2 u 01 01
5fc2 5fc2 s 	add	hl,de
5fc3 5fc3 d 4c
5fc3 5fc3 u 01 01
5fc3 5fc3 s 	ld	c,h
5fc4 5fc4 d 0a
5fc4 5fc4 u 01 01
5fc4 5fc4 s 	ld	a,(bc)
5fc5 5fc5 d d3b9
5fc5 5fc5 u 02 01
5fc5 5fc5 s 	out	(dac_l),a
5fc7 5fc7 s 	equval	dacp,%dn,$-1
5fc7 5fc7 s dacp146	=	$-1
5fc7 5fc7 s 	endm
5fc7 5fc7 s 	dn++
5fc7 5fc7 s 	endm
5fc7 5fc7 s 	samp_r
5fc7 5fc7 d d9
5fc7 5fc7 u 01 01
5fc7 5fc7 s 	exx
5fc8 5fc8 d 19
5fc8 5fc8 u 01 01
5fc8 5fc8 s 	add	hl,de
5fc9 5fc9 d 4c
5fc9 5fc9 u 01 01
5fc9 5fc9 s 	ld	c,h
5fca 5fca d 0a
5fca 5fca u 01 01
5fca 5fca s 	ld	a,(bc)
5fcb 5fcb d d3b5
5fcb 5fcb u 02 01
5fcb 5fcb s 	out	(dac_r),a
5fcd 5fcd s 	equval	dacp,%dn,$-1
5fcd 5fcd s dacp147	=	$-1
5fcd 5fcd s 	endm
5fcd 5fcd s 	dn++
5fcd 5fcd d d9
5fcd 5fcd u 01 01
5fcd 5fcd s 	exx
5fce 5fce s 	endm
5fce 5fce s 	endm
5fce 5fce d fd2a3067
5fce 5fce u 04 01
5fce 5fce s 	ld	iy,(wave_ind_r)
5fd0 5fd0 s 	org	$-2
5fd0 5fd0 d 3067
5fd0 5fd0 u 02 03
5fd0 5fd0 s ?d0584	defw	wave_ind_r
5fd2 5fd2 d fd36005c
5fd2 5fd2 u 04 01
5fd2 5fd2 s 	ld	(iy),down_ptr
5fd6 5fd6 s 	equval	ptr,%pn,$-1
5fd6 5fd6 s ptr3	=	$-1
5fd6 5fd6 s 	endm
5fd6 5fd6 s 	pn++
5fd6 5fd6 s 	; waste 19
5fd6 5fd6 d 1800
5fd6 5fd6 u 02 01
5fd6 5fd6 s 	jr	$+2
5fd8 5fd8 d 3e00
5fd8 5fd8 u 02 01
5fd8 5fd8 s 	ld	a,0
5fda 5fda s 
5fda 5fda s 	endm
5fda 5fda s 
5fda 5fda s 	cycle
5fda 5fda s 	start_cycle
5fda 5fda s diff	defl	sampcyc-t($)
5fda 5fda s 	assert	t($) == sampcyc
5fda 5fda s 	sett	0
5fda 5fda s 	endm
5fda 5fda s 	samp_l
5fda 5fda d 19
5fda 5fda u 01 01
5fda 5fda s 	add	hl,de
5fdb 5fdb d 4c
5fdb 5fdb u 01 01
5fdb 5fdb s 	ld	c,h
5fdc 5fdc d 0a
5fdc 5fdc u 01 01
5fdc 5fdc s 	ld	a,(bc)
5fdd 5fdd d d3b9
5fdd 5fdd u 02 01
5fdd 5fdd s 	out	(dac_l),a
5fdf 5fdf s 	equval	dacp,%dn,$-1
5fdf 5fdf s dacp148	=	$-1
5fdf 5fdf s 	endm
5fdf 5fdf s 	dn++
5fdf 5fdf s 	endm
5fdf 5fdf s 	samp_r
5fdf 5fdf d d9
5fdf 5fdf u 01 01
5fdf 5fdf s 	exx
5fe0 5fe0 d 19
5fe0 5fe0 u 01 01
5fe0 5fe0 s 	add	hl,de
5fe1 5fe1 d 4c
5fe1 5fe1 u 01 01
5fe1 5fe1 s 	ld	c,h
5fe2 5fe2 d 0a
5fe2 5fe2 u 01 01
5fe2 5fe2 s 	ld	a,(bc)
5fe3 5fe3 d d3b5
5fe3 5fe3 u 02 01
5fe3 5fe3 s 	out	(dac_r),a
5fe5 5fe5 s 	equval	dacp,%dn,$-1
5fe5 5fe5 s dacp149	=	$-1
5fe5 5fe5 s 	endm
5fe5 5fe5 s 	dn++
5fe5 5fe5 d d9
5fe5 5fe5 u 01 01
5fe5 5fe5 s 	exx
5fe6 5fe6 s 	endm
5fe6 5fe6 s 	endm
5fe6 5fe6 d fde1
5fe6 5fe6 u 02 01
5fe6 5fe6 s 	pop	iy
5fe8 5fe8 d fd36ff60
5fe8 5fe8 u 04 01
5fe8 5fe8 s 	ld	(iy-1),high(wave_up_r)
5fec 5fec d fd36fe27
5fec 5fec u 04 01
5fec 5fec s 	ld	(iy-2),low(wave_up_r)
5ff0 5ff0 s 	; waste 6
5ff0 5ff0 d 33
5ff0 5ff0 u 01 01
5ff0 5ff0 s 	inc	sp		; yeah, it's OK
5ff1 5ff1 s 
5ff1 5ff1 s 	start_cycle
5ff1 5ff1 s diff	defl	sampcyc-t($)
5ff1 5ff1 s 	assert	t($) == sampcyc
5ff1 5ff1 s 	sett	0
5ff1 5ff1 s 	endm
5ff1 5ff1 s 	samp_l
5ff1 5ff1 d 19
5ff1 5ff1 u 01 01
5ff1 5ff1 s 	add	hl,de
5ff2 5ff2 d 4c
5ff2 5ff2 u 01 01
5ff2 5ff2 s 	ld	c,h
5ff3 5ff3 d 0a
5ff3 5ff3 u 01 01
5ff3 5ff3 s 	ld	a,(bc)
5ff4 5ff4 d d3b9
5ff4 5ff4 u 02 01
5ff4 5ff4 s 	out	(dac_l),a
5ff6 5ff6 s 	equval	dacp,%dn,$-1
5ff6 5ff6 s dacp150	=	$-1
5ff6 5ff6 s 	endm
5ff6 5ff6 s 	dn++
5ff6 5ff6 s 	endm
5ff6 5ff6 s 	samp_r_prime
5ff6 5ff6 d d9
5ff6 5ff6 u 01 01
5ff6 5ff6 s 	exx
5ff7 5ff7 d 19
5ff7 5ff7 u 01 01
5ff7 5ff7 s 	add	hl,de
5ff8 5ff8 d 4c
5ff8 5ff8 u 01 01
5ff8 5ff8 s 	ld	c,h
5ff9 5ff9 d 0a
5ff9 5ff9 u 01 01
5ff9 5ff9 s 	ld	a,(bc)
5ffa 5ffa d d3b5
5ffa 5ffa u 02 01
5ffa 5ffa s 	out	(dac_r),a
5ffc 5ffc s 	equval	dacp,%dn,$-1
5ffc 5ffc s dacp151	=	$-1
5ffc 5ffc s 	endm
5ffc 5ffc s 	dn++
5ffc 5ffc s 	endm
5ffc 5ffc d fd36fdca
5ffc 5ffc u 04 01
5ffc 5ffc s 	ld	(iy-3),jp_z
6000 6000 s 	; waste 10
6000 6000 d c30360
6000 6000 u 03 01
6000 6000 s 	jp	$+3
6003 6003 d 78
6003 6003 u 01 01
6003 6003 s 	ld	a,b
6004 6004 d d9
6004 6004 u 01 01
6004 6004 s 	exx
6005 6005 d fec0
6005 6005 u 02 01
6005 6005 s 	cp	high(silence)
6007 6007 d ca2a5f
6007 6007 u 03 01
6007 6007 s 	jp	z,jp_iy		; return if currently silent
600a 600a d 00
600a 600a u 01 01
600a 600a s 	nop			; balance out
600b 600b d 00
600b 600b u 01 01
600b 600b s 	nop			; jp (iy)
600c 600c s 
600c 600c s 	cycle
600c 600c s 	start_cycle
600c 600c s diff	defl	sampcyc-t($)
600c 600c s 	assert	t($) == sampcyc
600c 600c s 	sett	0
600c 600c s 	endm
600c 600c s 	samp_l
600c 600c d 19
600c 600c u 01 01
600c 600c s 	add	hl,de
600d 600d d 4c
600d 600d u 01 01
600d 600d s 	ld	c,h
600e 600e d 0a
600e 600e u 01 01
600e 600e s 	ld	a,(bc)
600f 600f d d3b9
600f 600f u 02 01
600f 600f s 	out	(dac_l),a
6011 6011 s 	equval	dacp,%dn,$-1
6011 6011 s dacp152	=	$-1
6011 6011 s 	endm
6011 6011 s 	dn++
6011 6011 s 	endm
6011 6011 s 	samp_r
6011 6011 d d9
6011 6011 u 01 01
6011 6011 s 	exx
6012 6012 d 19
6012 6012 u 01 01
6012 6012 s 	add	hl,de
6013 6013 d 4c
6013 6013 u 01 01
6013 6013 s 	ld	c,h
6014 6014 d 0a
6014 6014 u 01 01
6014 6014 s 	ld	a,(bc)
6015 6015 d d3b5
6015 6015 u 02 01
6015 6015 s 	out	(dac_r),a
6017 6017 s 	equval	dacp,%dn,$-1
6017 6017 s dacp153	=	$-1
6017 6017 s 	endm
6017 6017 s 	dn++
6017 6017 d d9
6017 6017 u 01 01
6017 6017 s 	exx
6018 6018 s 	endm
6018 6018 s 	endm
6018 6018 d 3a695d
6018 6018 u 03 01
6018 6018 s 	ld	a,(wf_r)
601b 601b d d9
601b 601b u 01 01
601b 601b s 	exx
601c 601c d 47
601c 601c u 01 01
601c 601c s 	ld	b,a
601d 601d d d9
601d 601d u 01 01
601d 601d s 	exx
601e 601e s 	; waste 25
601e 601e d c32160
601e 601e u 03 01
601e 601e s 	jp	$+3
6021 6021 d 3e00
6021 6021 u 02 01
6021 6021 s 	ld	a,0
6023 6023 d 00
6023 6023 u 01 01
6023 6023 s 	nop
6024 6024 d 00
6024 6024 u 01 01
6024 6024 s 	nop
6025 6025 d fde9
6025 6025 u 02 01
6025 6025 s 	jp	(iy)
6027 6027 s 
6027 6027 s wave_up_r:
6027 6027 s 	kreset	wave_down_r
6027 6027 s 	cycle
6027 6027 s 	start_cycle
6027 6027 s diff	defl	sampcyc-t($)
6027 6027 s 	assert	t($) == sampcyc
6027 6027 s 	sett	0
6027 6027 s 	endm
6027 6027 s 	samp_l
6027 6027 d 19
6027 6027 u 01 01
6027 6027 s 	add	hl,de
6028 6028 d 4c
6028 6028 u 01 01
6028 6028 s 	ld	c,h
6029 6029 d 0a
6029 6029 u 01 01
6029 6029 s 	ld	a,(bc)
602a 602a d d3b9
602a 602a u 02 01
602a 602a s 	out	(dac_l),a
602c 602c s 	equval	dacp,%dn,$-1
602c 602c s dacp154	=	$-1
602c 602c s 	endm
602c 602c s 	dn++
602c 602c s 	endm
602c 602c s 	samp_r
602c 602c d d9
602c 602c u 01 01
602c 602c s 	exx
602d 602d d 19
602d 602d u 01 01
602d 602d s 	add	hl,de
602e 602e d 4c
602e 602e u 01 01
602e 602e s 	ld	c,h
602f 602f d 0a
602f 602f u 01 01
602f 602f s 	ld	a,(bc)
6030 6030 d d3b5
6030 6030 u 02 01
6030 6030 s 	out	(dac_r),a
6032 6032 s 	equval	dacp,%dn,$-1
6032 6032 s dacp155	=	$-1
6032 6032 s 	endm
6032 6032 s 	dn++
6032 6032 d d9
6032 6032 u 01 01
6032 6032 s 	exx
6033 6033 s 	endm
6033 6033 s 	endm
6033 6033 s 
6033 6033 d f1
6033 6033 u 01 01
6033 6033 s 	pop	af
6034 6034 d fde1
6034 6034 u 02 01
6034 6034 s 	pop	iy
6036 6036 d fd36fdc2
6036 6036 u 04 01
6036 6036 s 	ld	(iy-3),jp_nz
603a 603a s 	; waste 15
603a 603a d 00
603a 603a u 01 01
603a 603a s 	nop
603b 603b d 00
603b 603b u 01 01
603b 603b s 	nop
603c 603c d 3e00
603c 603c u 02 01
603c 603c s 	ld	a,0
603e 603e s 
603e 603e s 	cycle
603e 603e s 	start_cycle
603e 603e s diff	defl	sampcyc-t($)
603e 603e s 	assert	t($) == sampcyc
603e 603e s 	sett	0
603e 603e s 	endm
603e 603e s 	samp_l
603e 603e d 19
603e 603e u 01 01
603e 603e s 	add	hl,de
603f 603f d 4c
603f 603f u 01 01
603f 603f s 	ld	c,h
6040 6040 d 0a
6040 6040 u 01 01
6040 6040 s 	ld	a,(bc)
6041 6041 d d3b9
6041 6041 u 02 01
6041 6041 s 	out	(dac_l),a
6043 6043 s 	equval	dacp,%dn,$-1
6043 6043 s dacp156	=	$-1
6043 6043 s 	endm
6043 6043 s 	dn++
6043 6043 s 	endm
6043 6043 s 	samp_r
6043 6043 d d9
6043 6043 u 01 01
6043 6043 s 	exx
6044 6044 d 19
6044 6044 u 01 01
6044 6044 s 	add	hl,de
6045 6045 d 4c
6045 6045 u 01 01
6045 6045 s 	ld	c,h
6046 6046 d 0a
6046 6046 u 01 01
6046 6046 s 	ld	a,(bc)
6047 6047 d d3b5
6047 6047 u 02 01
6047 6047 s 	out	(dac_r),a
6049 6049 s 	equval	dacp,%dn,$-1
6049 6049 s dacp157	=	$-1
6049 6049 s 	endm
6049 6049 s 	dn++
6049 6049 d d9
6049 6049 u 01 01
6049 6049 s 	exx
604a 604a s 	endm
604a 604a s 	endm
604a 604a s 
604a 604a d fd36fe5b
604a 604a u 04 01
604a 604a s 	ld	(iy-2),low(wave_down_r)
604e 604e d fd36ff5f
604e 604e u 04 01
604e 604e s 	ld	(iy-1),high(wave_down_r)
6052 6052 s 	; waste 12
6052 6052 d 1800
6052 6052 u 02 01
6052 6052 s 	jr	$+2
6054 6054 d fde9
6054 6054 u 02 01
6054 6054 s 	jp	(iy)
6056 6056 s 
6056 6056 s 	endm
6056 6056 s 
6056 6056 s dovol	macro	chan,direction,uphandler,prime
6056 6056 s 	local	wfv,svde,is_quiet,wfact
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	; Clean up all parameters and get return location into IY
6056 6056 s 	pop	af		
6056 6056 s 	pop	iy
6056 6056 s 	pop	af		; Oh, not necessary; oh well.
6056 6056 s 	ld	ix,(vl_m&chan)
6056 6056 s 	; waste 4
6056 6056 s 	nop
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	add	ix,ix
6056 6056 s 	add	ix,ix		; get "volume" bits in IX high byte
6056 6056 s 	ld	(voltmp),ix	; make accessible
6056 6056 s 	; waste 8
6056 6056 s 	nop
6056 6056 s 	nop
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	ld	ix,(vl_m&chan)
6056 6056 s 	ld	a,(voltmp+1)	; volume bits
6056 6056 s    if direction > 0
6056 6056 s 	cp	$3f*4+3		; volume bits 15?
6056 6056 s    else
6056 6056 s 	cp	$3c*4+0		; volume bits 0?
6056 6056 s    endif
6056 6056 s 	jp	z,jp_iy		; return if volume at up/down limit
6056 6056 s 	nop			; balance
6056 6056 s 	nop			;   jp (iy)
6056 6056 s 	; lucky balance
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s    if direction > 0
6056 6056 s 	ld	(ix),' '	; erase top of volume
6056 6056 s    else
6056 6056 s 	jr	$+2
6056 6056 s 	or	a,0
6056 6056 s    endif
6056 6056 s 	ld	(svde),de
6056 6056 s 	; waste 19
6056 6056 s 	jr	$+2
6056 6056 s 	or	a,0
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	ld	ix,(vl_m&chan);
6056 6056 s 
6056 6056 s 	prime
6056 6056 s 	ld	a,b
6056 6056 s 	sub	high(silence)
6056 6056 s 	ld	(wfact),a
6056 6056 s 	prime
6056 6056 s 	; waste 6
6056 6056 s 	inc	sp
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	ld	de,64*direction
6056 6056 s 	add	ix,de		; move meter
6056 6056 s 	ld	de,0
6056 6056 s 	org	$-2
6056 6056 s svde:	defw	0
6056 6056 s    if direction > 0
6056 6056 s 	; waste 23
6056 6056 s 	jp	$+3
6056 6056 s 	nop
6056 6056 s 	scf
6056 6056 s 	ret	nc
6056 6056 s    else
6056 6056 s    	ld	(ix),meter&chan	; add to top of meter
6056 6056 s 	; waste 4
6056 6056 s 	nop
6056 6056 s    endif
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	ld	(vl_m&chan),ix	; save volume position
6056 6056 s 	ld	a,(wf&chan)
6056 6056 s 	and	3		; clear volume from waveform
6056 6056 s 	ld	(wfv),a
6056 6056 s 	; waste 5
6056 6056 s 	ret	c
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	ld	a,(voltmp+1)	; previous volume bits
6056 6056 s    if direction > 0
6056 6056 s    	inc	a		; caught up to moved meter
6056 6056 s    else
6056 6056 s    	dec	a		; caught up to moved meter
6056 6056 s    endif
6056 6056 s 	add	a,a
6056 6056 s 	add	a,a		; make way for waveform
6056 6056 s 	xor	(high(wavebnk)&$c0)^$c0	; magically fix up high bits
6056 6056 s 	or	0		; add waveform back in
6056 6056 s 	org	$-1
6056 6056 s wfv:	defb	0
6056 6056 s 	ld	(wf&chan),a
6056 6056 s 	; waste 6
6056 6056 s 	inc	sp
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	; waste 4
6056 6056 s 	nop
6056 6056 s 
6056 6056 s 	ld	a,(wf&chan)
6056 6056 s 	and	~3		; drop waveform
6056 6056 s 	ld	(wb&chan),a
6056 6056 s 
6056 6056 s 	ld	a,0
6056 6056 s 	org	$-1
6056 6056 s wfact:	defb	0
6056 6056 s 	or	a
6056 6056 s 	jp	z,is_quiet
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 	ld	a,(wf&chan)
6056 6056 s 	prime
6056 6056 s 	ld	b,a
6056 6056 s 	prime
6056 6056 s 	; waste 33
6056 6056 s 	ld	a,(0)
6056 6056 s 	jp	$+3
6056 6056 s 	jp	$+3
6056 6056 s 
6056 6056 s is_quiet:
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	ld	(iy-1),high(uphandler)
6056 6056 s 	ld	(iy-2),low(uphandler)
6056 6056 s 	; waste 20
6056 6056 s 	jp	$+3
6056 6056 s 	jp	$+3
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 
6056 6056 s 	; waste 31
6056 6056 s 	jr	$+2
6056 6056 s 	jr	$+2
6056 6056 s 	or	a,0
6056 6056 s 
6056 6056 s 	ld	(iy-3),jp_z
6056 6056 s 	jp	(iy)
6056 6056 s 
6056 6056 s 	endm
6056 6056 s 
6056 6056 s    if havevol
6056 6056 s 
6056 6056 s vol_down_down_l:
6056 6056 s 	dovol	_l,1,vol_down_up_l,nop
6056 6056 s 
6056 6056 s 	cycle
6056 6056 s 	start_cycle
6056 6056 s diff	defl	sampcyc-t($)
6056 6056 s 	assert	t($) == sampcyc
6056 6056 s 	sett	0
6056 6056 s 	endm
6056 6056 s 	samp_l
6056 6056 d 19
6056 6056 u 01 01
6056 6056 s 	add	hl,de
6057 6057 d 4c
6057 6057 u 01 01
6057 6057 s 	ld	c,h
6058 6058 d 0a
6058 6058 u 01 01
6058 6058 s 	ld	a,(bc)
6059 6059 d d3b9
6059 6059 u 02 01
6059 6059 s 	out	(dac_l),a
605b 605b s 	equval	dacp,%dn,$-1
605b 605b s dacp158	=	$-1
605b 605b s 	endm
605b 605b s 	dn++
605b 605b s 	endm
605b 605b s 	samp_r
605b 605b d d9
605b 605b u 01 01
605b 605b s 	exx
605c 605c d 19
605c 605c u 01 01
605c 605c s 	add	hl,de
605d 605d d 4c
605d 605d u 01 01
605d 605d s 	ld	c,h
605e 605e d 0a
605e 605e u 01 01
605e 605e s 	ld	a,(bc)
605f 605f d d3b5
605f 605f u 02 01
605f 605f s 	out	(dac_r),a
6061 6061 s 	equval	dacp,%dn,$-1
6061 6061 s dacp159	=	$-1
6061 6061 s 	endm
6061 6061 s 	dn++
6061 6061 d d9
6061 6061 u 01 01
6061 6061 s 	exx
6062 6062 s 	endm
6062 6062 s 	endm
6062 6062 s 
6062 6062 s 	; Clean up all parameters and get return location into IY
6062 6062 d f1
6062 6062 u 01 01
6062 6062 s 	pop	af		
6063 6063 d fde1
6063 6063 u 02 01
6063 6063 s 	pop	iy
6065 6065 d f1
6065 6065 u 01 01
6065 6065 s 	pop	af		; Oh, not necessary; oh well.
6066 6066 d dd2abc65
6066 6066 u 04 01
6066 6066 s 	ld	ix,(vl_m_l)
606a 606a s 	; waste 4
606a 606a d 00
606a 606a u 01 01
606a 606a s 	nop
606b 606b s 
606b 606b s 	cycle
606b 606b s 	start_cycle
606b 606b s diff	defl	sampcyc-t($)
606b 606b s 	assert	t($) == sampcyc
606b 606b s 	sett	0
606b 606b s 	endm
606b 606b s 	samp_l
606b 606b d 19
606b 606b u 01 01
606b 606b s 	add	hl,de
606c 606c d 4c
606c 606c u 01 01
606c 606c s 	ld	c,h
606d 606d d 0a
606d 606d u 01 01
606d 606d s 	ld	a,(bc)
606e 606e d d3b9
606e 606e u 02 01
606e 606e s 	out	(dac_l),a
6070 6070 s 	equval	dacp,%dn,$-1
6070 6070 s dacp160	=	$-1
6070 6070 s 	endm
6070 6070 s 	dn++
6070 6070 s 	endm
6070 6070 s 	samp_r
6070 6070 d d9
6070 6070 u 01 01
6070 6070 s 	exx
6071 6071 d 19
6071 6071 u 01 01
6071 6071 s 	add	hl,de
6072 6072 d 4c
6072 6072 u 01 01
6072 6072 s 	ld	c,h
6073 6073 d 0a
6073 6073 u 01 01
6073 6073 s 	ld	a,(bc)
6074 6074 d d3b5
6074 6074 u 02 01
6074 6074 s 	out	(dac_r),a
6076 6076 s 	equval	dacp,%dn,$-1
6076 6076 s dacp161	=	$-1
6076 6076 s 	endm
6076 6076 s 	dn++
6076 6076 d d9
6076 6076 u 01 01
6076 6076 s 	exx
6077 6077 s 	endm
6077 6077 s 	endm
6077 6077 s 
6077 6077 d dd29
6077 6077 u 02 01
6077 6077 s 	add	ix,ix
6079 6079 d dd29
6079 6079 u 02 01
6079 6079 s 	add	ix,ix		; get "volume" bits in IX high byte
607b 607b d dd22c065
607b 607b u 04 01
607b 607b s 	ld	(voltmp),ix	; make accessible
607f 607f s 	; waste 8
607f 607f d 00
607f 607f u 01 01
607f 607f s 	nop
6080 6080 d 00
6080 6080 u 01 01
6080 6080 s 	nop
6081 6081 s 
6081 6081 s 	cycle
6081 6081 s 	start_cycle
6081 6081 s diff	defl	sampcyc-t($)
6081 6081 s 	assert	t($) == sampcyc
6081 6081 s 	sett	0
6081 6081 s 	endm
6081 6081 s 	samp_l
6081 6081 d 19
6081 6081 u 01 01
6081 6081 s 	add	hl,de
6082 6082 d 4c
6082 6082 u 01 01
6082 6082 s 	ld	c,h
6083 6083 d 0a
6083 6083 u 01 01
6083 6083 s 	ld	a,(bc)
6084 6084 d d3b9
6084 6084 u 02 01
6084 6084 s 	out	(dac_l),a
6086 6086 s 	equval	dacp,%dn,$-1
6086 6086 s dacp162	=	$-1
6086 6086 s 	endm
6086 6086 s 	dn++
6086 6086 s 	endm
6086 6086 s 	samp_r
6086 6086 d d9
6086 6086 u 01 01
6086 6086 s 	exx
6087 6087 d 19
6087 6087 u 01 01
6087 6087 s 	add	hl,de
6088 6088 d 4c
6088 6088 u 01 01
6088 6088 s 	ld	c,h
6089 6089 d 0a
6089 6089 u 01 01
6089 6089 s 	ld	a,(bc)
608a 608a d d3b5
608a 608a u 02 01
608a 608a s 	out	(dac_r),a
608c 608c s 	equval	dacp,%dn,$-1
608c 608c s dacp163	=	$-1
608c 608c s 	endm
608c 608c s 	dn++
608c 608c d d9
608c 608c u 01 01
608c 608c s 	exx
608d 608d s 	endm
608d 608d s 	endm
608d 608d s 
608d 608d d dd2abc65
608d 608d u 04 01
608d 608d s 	ld	ix,(vl_m_l)
6091 6091 d 3ac165
6091 6091 u 03 01
6091 6091 s 	ld	a,(voltmp+1)	; volume bits
6094 6094 s    if 1 > 0
6094 6094 d feff
6094 6094 u 02 01
6094 6094 s 	cp	$3f*4+3		; volume bits 15?
6096 6096 s    else
6096 6096 s 	cp	$3c*4+0		; volume bits 0?
6096 6096 s    endif
6096 6096 d ca2a5f
6096 6096 u 03 01
6096 6096 s 	jp	z,jp_iy		; return if volume at up/down limit
6099 6099 d 00
6099 6099 u 01 01
6099 6099 s 	nop			; balance
609a 609a d 00
609a 609a u 01 01
609a 609a s 	nop			;   jp (iy)
609b 609b s 	; lucky balance
609b 609b s 
609b 609b s 	cycle
609b 609b s 	start_cycle
609b 609b s diff	defl	sampcyc-t($)
609b 609b s 	assert	t($) == sampcyc
609b 609b s 	sett	0
609b 609b s 	endm
609b 609b s 	samp_l
609b 609b d 19
609b 609b u 01 01
609b 609b s 	add	hl,de
609c 609c d 4c
609c 609c u 01 01
609c 609c s 	ld	c,h
609d 609d d 0a
609d 609d u 01 01
609d 609d s 	ld	a,(bc)
609e 609e d d3b9
609e 609e u 02 01
609e 609e s 	out	(dac_l),a
60a0 60a0 s 	equval	dacp,%dn,$-1
60a0 60a0 s dacp164	=	$-1
60a0 60a0 s 	endm
60a0 60a0 s 	dn++
60a0 60a0 s 	endm
60a0 60a0 s 	samp_r
60a0 60a0 d d9
60a0 60a0 u 01 01
60a0 60a0 s 	exx
60a1 60a1 d 19
60a1 60a1 u 01 01
60a1 60a1 s 	add	hl,de
60a2 60a2 d 4c
60a2 60a2 u 01 01
60a2 60a2 s 	ld	c,h
60a3 60a3 d 0a
60a3 60a3 u 01 01
60a3 60a3 s 	ld	a,(bc)
60a4 60a4 d d3b5
60a4 60a4 u 02 01
60a4 60a4 s 	out	(dac_r),a
60a6 60a6 s 	equval	dacp,%dn,$-1
60a6 60a6 s dacp165	=	$-1
60a6 60a6 s 	endm
60a6 60a6 s 	dn++
60a6 60a6 d d9
60a6 60a6 u 01 01
60a6 60a6 s 	exx
60a7 60a7 s 	endm
60a7 60a7 s 	endm
60a7 60a7 s 
60a7 60a7 s    if 1 > 0
60a7 60a7 d dd360020
60a7 60a7 u 04 01
60a7 60a7 s 	ld	(ix),' '	; erase top of volume
60ab 60ab s    else
60ab 60ab s 	jr	$+2
60ab 60ab s 	or	a,0
60ab 60ab s    endif
60ab 60ab d ed53de60
60ab 60ab u 04 01
60ab 60ab s 	ld	(?f0628),de
60af 60af s 	; waste 19
60af 60af d 1800
60af 60af u 02 01
60af 60af s 	jr	$+2
60b1 60b1 d f600
60b1 60b1 u 02 01
60b1 60b1 s 	or	a,0
60b3 60b3 s 
60b3 60b3 s 	cycle
60b3 60b3 s 	start_cycle
60b3 60b3 s diff	defl	sampcyc-t($)
60b3 60b3 s 	assert	t($) == sampcyc
60b3 60b3 s 	sett	0
60b3 60b3 s 	endm
60b3 60b3 s 	samp_l
60b3 60b3 d 19
60b3 60b3 u 01 01
60b3 60b3 s 	add	hl,de
60b4 60b4 d 4c
60b4 60b4 u 01 01
60b4 60b4 s 	ld	c,h
60b5 60b5 d 0a
60b5 60b5 u 01 01
60b5 60b5 s 	ld	a,(bc)
60b6 60b6 d d3b9
60b6 60b6 u 02 01
60b6 60b6 s 	out	(dac_l),a
60b8 60b8 s 	equval	dacp,%dn,$-1
60b8 60b8 s dacp166	=	$-1
60b8 60b8 s 	endm
60b8 60b8 s 	dn++
60b8 60b8 s 	endm
60b8 60b8 s 	samp_r
60b8 60b8 d d9
60b8 60b8 u 01 01
60b8 60b8 s 	exx
60b9 60b9 d 19
60b9 60b9 u 01 01
60b9 60b9 s 	add	hl,de
60ba 60ba d 4c
60ba 60ba u 01 01
60ba 60ba s 	ld	c,h
60bb 60bb d 0a
60bb 60bb u 01 01
60bb 60bb s 	ld	a,(bc)
60bc 60bc d d3b5
60bc 60bc u 02 01
60bc 60bc s 	out	(dac_r),a
60be 60be s 	equval	dacp,%dn,$-1
60be 60be s dacp167	=	$-1
60be 60be s 	endm
60be 60be s 	dn++
60be 60be d d9
60be 60be u 01 01
60be 60be s 	exx
60bf 60bf s 	endm
60bf 60bf s 	endm
60bf 60bf s 
60bf 60bf d dd2abc65
60bf 60bf u 04 01
60bf 60bf s 	ld	ix,(vl_m_l);
60c3 60c3 s 
60c3 60c3 d 00
60c3 60c3 u 01 01
60c3 60c3 s 	nop
60c4 60c4 d 78
60c4 60c4 u 01 01
60c4 60c4 s 	ld	a,b
60c5 60c5 d d6c0
60c5 60c5 u 02 01
60c5 60c5 s 	sub	high(silence)
60c7 60c7 d 322f61
60c7 60c7 u 03 01
60c7 60c7 s 	ld	(?h0628),a
60ca 60ca d 00
60ca 60ca u 01 01
60ca 60ca s 	nop
60cb 60cb s 	; waste 6
60cb 60cb d 33
60cb 60cb u 01 01
60cb 60cb s 	inc	sp
60cc 60cc s 
60cc 60cc s 	cycle
60cc 60cc s 	start_cycle
60cc 60cc s diff	defl	sampcyc-t($)
60cc 60cc s 	assert	t($) == sampcyc
60cc 60cc s 	sett	0
60cc 60cc s 	endm
60cc 60cc s 	samp_l
60cc 60cc d 19
60cc 60cc u 01 01
60cc 60cc s 	add	hl,de
60cd 60cd d 4c
60cd 60cd u 01 01
60cd 60cd s 	ld	c,h
60ce 60ce d 0a
60ce 60ce u 01 01
60ce 60ce s 	ld	a,(bc)
60cf 60cf d d3b9
60cf 60cf u 02 01
60cf 60cf s 	out	(dac_l),a
60d1 60d1 s 	equval	dacp,%dn,$-1
60d1 60d1 s dacp168	=	$-1
60d1 60d1 s 	endm
60d1 60d1 s 	dn++
60d1 60d1 s 	endm
60d1 60d1 s 	samp_r
60d1 60d1 d d9
60d1 60d1 u 01 01
60d1 60d1 s 	exx
60d2 60d2 d 19
60d2 60d2 u 01 01
60d2 60d2 s 	add	hl,de
60d3 60d3 d 4c
60d3 60d3 u 01 01
60d3 60d3 s 	ld	c,h
60d4 60d4 d 0a
60d4 60d4 u 01 01
60d4 60d4 s 	ld	a,(bc)
60d5 60d5 d d3b5
60d5 60d5 u 02 01
60d5 60d5 s 	out	(dac_r),a
60d7 60d7 s 	equval	dacp,%dn,$-1
60d7 60d7 s dacp169	=	$-1
60d7 60d7 s 	endm
60d7 60d7 s 	dn++
60d7 60d7 d d9
60d7 60d7 u 01 01
60d7 60d7 s 	exx
60d8 60d8 s 	endm
60d8 60d8 s 	endm
60d8 60d8 s 
60d8 60d8 d 114000
60d8 60d8 u 03 01
60d8 60d8 s 	ld	de,64*1
60db 60db d dd19
60db 60db u 02 01
60db 60db s 	add	ix,de		; move meter
60dd 60dd d 110000
60dd 60dd u 03 01
60dd 60dd s 	ld	de,0
60de 60de s 	org	$-2
60de 60de d 0000
60de 60de u 02 03
60de 60de s ?f0628:	defw	0
60e0 60e0 s    if 1 > 0
60e0 60e0 s 	; waste 23
60e0 60e0 d c3e360
60e0 60e0 u 03 01
60e0 60e0 s 	jp	$+3
60e3 60e3 d 00
60e3 60e3 u 01 01
60e3 60e3 s 	nop
60e4 60e4 d 37
60e4 60e4 u 01 01
60e4 60e4 s 	scf
60e5 60e5 d d0
60e5 60e5 u 01 01
60e5 60e5 s 	ret	nc
60e6 60e6 s    else
60e6 60e6 s    	ld	(ix),meter_l	; add to top of meter
60e6 60e6 s 	; waste 4
60e6 60e6 s 	nop
60e6 60e6 s    endif
60e6 60e6 s 
60e6 60e6 s 	cycle
60e6 60e6 s 	start_cycle
60e6 60e6 s diff	defl	sampcyc-t($)
60e6 60e6 s 	assert	t($) == sampcyc
60e6 60e6 s 	sett	0
60e6 60e6 s 	endm
60e6 60e6 s 	samp_l
60e6 60e6 d 19
60e6 60e6 u 01 01
60e6 60e6 s 	add	hl,de
60e7 60e7 d 4c
60e7 60e7 u 01 01
60e7 60e7 s 	ld	c,h
60e8 60e8 d 0a
60e8 60e8 u 01 01
60e8 60e8 s 	ld	a,(bc)
60e9 60e9 d d3b9
60e9 60e9 u 02 01
60e9 60e9 s 	out	(dac_l),a
60eb 60eb s 	equval	dacp,%dn,$-1
60eb 60eb s dacp170	=	$-1
60eb 60eb s 	endm
60eb 60eb s 	dn++
60eb 60eb s 	endm
60eb 60eb s 	samp_r
60eb 60eb d d9
60eb 60eb u 01 01
60eb 60eb s 	exx
60ec 60ec d 19
60ec 60ec u 01 01
60ec 60ec s 	add	hl,de
60ed 60ed d 4c
60ed 60ed u 01 01
60ed 60ed s 	ld	c,h
60ee 60ee d 0a
60ee 60ee u 01 01
60ee 60ee s 	ld	a,(bc)
60ef 60ef d d3b5
60ef 60ef u 02 01
60ef 60ef s 	out	(dac_r),a
60f1 60f1 s 	equval	dacp,%dn,$-1
60f1 60f1 s dacp171	=	$-1
60f1 60f1 s 	endm
60f1 60f1 s 	dn++
60f1 60f1 d d9
60f1 60f1 u 01 01
60f1 60f1 s 	exx
60f2 60f2 s 	endm
60f2 60f2 s 	endm
60f2 60f2 s 
60f2 60f2 d dd22bc65
60f2 60f2 u 04 01
60f2 60f2 s 	ld	(vl_m_l),ix	; save volume position
60f6 60f6 d 3a6c5c
60f6 60f6 u 03 01
60f6 60f6 s 	ld	a,(wf_l)
60f9 60f9 d e603
60f9 60f9 u 02 01
60f9 60f9 s 	and	3		; clear volume from waveform
60fb 60fb d 321461
60fb 60fb u 03 01
60fb 60fb s 	ld	(?e0628),a
60fe 60fe s 	; waste 5
60fe 60fe d d8
60fe 60fe u 01 01
60fe 60fe s 	ret	c
60ff 60ff s 
60ff 60ff s 	cycle
60ff 60ff s 	start_cycle
60ff 60ff s diff	defl	sampcyc-t($)
60ff 60ff s 	assert	t($) == sampcyc
60ff 60ff s 	sett	0
60ff 60ff s 	endm
60ff 60ff s 	samp_l
60ff 60ff d 19
60ff 60ff u 01 01
60ff 60ff s 	add	hl,de
6100 6100 d 4c
6100 6100 u 01 01
6100 6100 s 	ld	c,h
6101 6101 d 0a
6101 6101 u 01 01
6101 6101 s 	ld	a,(bc)
6102 6102 d d3b9
6102 6102 u 02 01
6102 6102 s 	out	(dac_l),a
6104 6104 s 	equval	dacp,%dn,$-1
6104 6104 s dacp172	=	$-1
6104 6104 s 	endm
6104 6104 s 	dn++
6104 6104 s 	endm
6104 6104 s 	samp_r
6104 6104 d d9
6104 6104 u 01 01
6104 6104 s 	exx
6105 6105 d 19
6105 6105 u 01 01
6105 6105 s 	add	hl,de
6106 6106 d 4c
6106 6106 u 01 01
6106 6106 s 	ld	c,h
6107 6107 d 0a
6107 6107 u 01 01
6107 6107 s 	ld	a,(bc)
6108 6108 d d3b5
6108 6108 u 02 01
6108 6108 s 	out	(dac_r),a
610a 610a s 	equval	dacp,%dn,$-1
610a 610a s dacp173	=	$-1
610a 610a s 	endm
610a 610a s 	dn++
610a 610a d d9
610a 610a u 01 01
610a 610a s 	exx
610b 610b s 	endm
610b 610b s 	endm
610b 610b s 
610b 610b d 3ac165
610b 610b u 03 01
610b 610b s 	ld	a,(voltmp+1)	; previous volume bits
610e 610e s    if 1 > 0
610e 610e d 3c
610e 610e u 01 01
610e 610e s    	inc	a		; caught up to moved meter
610f 610f s    else
610f 610f s    	dec	a		; caught up to moved meter
610f 610f s    endif
610f 610f d 87
610f 610f u 01 01
610f 610f s 	add	a,a
6110 6110 d 87
6110 6110 u 01 01
6110 6110 s 	add	a,a		; make way for waveform
6111 6111 d ee40
6111 6111 u 02 01
6111 6111 s 	xor	(high(wavebnk)&$c0)^$c0	; magically fix up high bits
6113 6113 d f600
6113 6113 u 02 01
6113 6113 s 	or	0		; add waveform back in
6114 6114 s 	org	$-1
6114 6114 d 00
6114 6114 u 01 03
6114 6114 s ?e0628:	defb	0
6115 6115 d 326c5c
6115 6115 u 03 01
6115 6115 s 	ld	(wf_l),a
6118 6118 s 	; waste 6
6118 6118 d 33
6118 6118 u 01 01
6118 6118 s 	inc	sp
6119 6119 s 
6119 6119 s 	cycle
6119 6119 s 	start_cycle
6119 6119 s diff	defl	sampcyc-t($)
6119 6119 s 	assert	t($) == sampcyc
6119 6119 s 	sett	0
6119 6119 s 	endm
6119 6119 s 	samp_l
6119 6119 d 19
6119 6119 u 01 01
6119 6119 s 	add	hl,de
611a 611a d 4c
611a 611a u 01 01
611a 611a s 	ld	c,h
611b 611b d 0a
611b 611b u 01 01
611b 611b s 	ld	a,(bc)
611c 611c d d3b9
611c 611c u 02 01
611c 611c s 	out	(dac_l),a
611e 611e s 	equval	dacp,%dn,$-1
611e 611e s dacp174	=	$-1
611e 611e s 	endm
611e 611e s 	dn++
611e 611e s 	endm
611e 611e s 	samp_r
611e 611e d d9
611e 611e u 01 01
611e 611e s 	exx
611f 611f d 19
611f 611f u 01 01
611f 611f s 	add	hl,de
6120 6120 d 4c
6120 6120 u 01 01
6120 6120 s 	ld	c,h
6121 6121 d 0a
6121 6121 u 01 01
6121 6121 s 	ld	a,(bc)
6122 6122 d d3b5
6122 6122 u 02 01
6122 6122 s 	out	(dac_r),a
6124 6124 s 	equval	dacp,%dn,$-1
6124 6124 s dacp175	=	$-1
6124 6124 s 	endm
6124 6124 s 	dn++
6124 6124 d d9
6124 6124 u 01 01
6124 6124 s 	exx
6125 6125 s 	endm
6125 6125 s 	endm
6125 6125 s 
6125 6125 s 	; waste 4
6125 6125 d 00
6125 6125 u 01 01
6125 6125 s 	nop
6126 6126 s 
6126 6126 d 3a6c5c
6126 6126 u 03 01
6126 6126 s 	ld	a,(wf_l)
6129 6129 d e6fc
6129 6129 u 02 01
6129 6129 s 	and	~3		; drop waveform
612b 612b d 32a65e
612b 612b u 03 01
612b 612b s 	ld	(wb_l),a
612e 612e s 
612e 612e d 3e00
612e 612e u 02 01
612e 612e s 	ld	a,0
612f 612f s 	org	$-1
612f 612f d 00
612f 612f u 01 03
612f 612f s ?h0628:	defb	0
6130 6130 d b7
6130 6130 u 01 01
6130 6130 s 	or	a
6131 6131 d ca4f61
6131 6131 u 03 01
6131 6131 s 	jp	z,?g0628
6134 6134 s 
6134 6134 s 	cycle
6134 6134 s 	start_cycle
6134 6134 s diff	defl	sampcyc-t($)
6134 6134 s 	assert	t($) == sampcyc
6134 6134 s 	sett	0
6134 6134 s 	endm
6134 6134 s 	samp_l
6134 6134 d 19
6134 6134 u 01 01
6134 6134 s 	add	hl,de
6135 6135 d 4c
6135 6135 u 01 01
6135 6135 s 	ld	c,h
6136 6136 d 0a
6136 6136 u 01 01
6136 6136 s 	ld	a,(bc)
6137 6137 d d3b9
6137 6137 u 02 01
6137 6137 s 	out	(dac_l),a
6139 6139 s 	equval	dacp,%dn,$-1
6139 6139 s dacp176	=	$-1
6139 6139 s 	endm
6139 6139 s 	dn++
6139 6139 s 	endm
6139 6139 s 	samp_r
6139 6139 d d9
6139 6139 u 01 01
6139 6139 s 	exx
613a 613a d 19
613a 613a u 01 01
613a 613a s 	add	hl,de
613b 613b d 4c
613b 613b u 01 01
613b 613b s 	ld	c,h
613c 613c d 0a
613c 613c u 01 01
613c 613c s 	ld	a,(bc)
613d 613d d d3b5
613d 613d u 02 01
613d 613d s 	out	(dac_r),a
613f 613f s 	equval	dacp,%dn,$-1
613f 613f s dacp177	=	$-1
613f 613f s 	endm
613f 613f s 	dn++
613f 613f d d9
613f 613f u 01 01
613f 613f s 	exx
6140 6140 s 	endm
6140 6140 s 	endm
6140 6140 d 3a6c5c
6140 6140 u 03 01
6140 6140 s 	ld	a,(wf_l)
6143 6143 d 00
6143 6143 u 01 01
6143 6143 s 	nop
6144 6144 d 47
6144 6144 u 01 01
6144 6144 s 	ld	b,a
6145 6145 d 00
6145 6145 u 01 01
6145 6145 s 	nop
6146 6146 s 	; waste 33
6146 6146 d 3a0000
6146 6146 u 03 01
6146 6146 s 	ld	a,(0)
6149 6149 d c34c61
6149 6149 u 03 01
6149 6149 s 	jp	$+3
614c 614c d c34f61
614c 614c u 03 01
614c 614c s 	jp	$+3
614f 614f s 
614f 614f s ?g0628:
614f 614f s 	cycle
614f 614f s 	start_cycle
614f 614f s diff	defl	sampcyc-t($)
614f 614f s 	assert	t($) == sampcyc
614f 614f s 	sett	0
614f 614f s 	endm
614f 614f s 	samp_l
614f 614f d 19
614f 614f u 01 01
614f 614f s 	add	hl,de
6150 6150 d 4c
6150 6150 u 01 01
6150 6150 s 	ld	c,h
6151 6151 d 0a
6151 6151 u 01 01
6151 6151 s 	ld	a,(bc)
6152 6152 d d3b9
6152 6152 u 02 01
6152 6152 s 	out	(dac_l),a
6154 6154 s 	equval	dacp,%dn,$-1
6154 6154 s dacp178	=	$-1
6154 6154 s 	endm
6154 6154 s 	dn++
6154 6154 s 	endm
6154 6154 s 	samp_r
6154 6154 d d9
6154 6154 u 01 01
6154 6154 s 	exx
6155 6155 d 19
6155 6155 u 01 01
6155 6155 s 	add	hl,de
6156 6156 d 4c
6156 6156 u 01 01
6156 6156 s 	ld	c,h
6157 6157 d 0a
6157 6157 u 01 01
6157 6157 s 	ld	a,(bc)
6158 6158 d d3b5
6158 6158 u 02 01
6158 6158 s 	out	(dac_r),a
615a 615a s 	equval	dacp,%dn,$-1
615a 615a s dacp179	=	$-1
615a 615a s 	endm
615a 615a s 	dn++
615a 615a d d9
615a 615a u 01 01
615a 615a s 	exx
615b 615b s 	endm
615b 615b s 	endm
615b 615b s 
615b 615b d fd36ff61
615b 615b u 04 01
615b 615b s 	ld	(iy-1),high(vol_down_up_l)
615f 615f d fd36fe81
615f 615f u 04 01
615f 615f s 	ld	(iy-2),low(vol_down_up_l)
6163 6163 s 	; waste 20
6163 6163 d c36661
6163 6163 u 03 01
6163 6163 s 	jp	$+3
6166 6166 d c36961
6166 6166 u 03 01
6166 6166 s 	jp	$+3
6169 6169 s 
6169 6169 s 	cycle
6169 6169 s 	start_cycle
6169 6169 s diff	defl	sampcyc-t($)
6169 6169 s 	assert	t($) == sampcyc
6169 6169 s 	sett	0
6169 6169 s 	endm
6169 6169 s 	samp_l
6169 6169 d 19
6169 6169 u 01 01
6169 6169 s 	add	hl,de
616a 616a d 4c
616a 616a u 01 01
616a 616a s 	ld	c,h
616b 616b d 0a
616b 616b u 01 01
616b 616b s 	ld	a,(bc)
616c 616c d d3b9
616c 616c u 02 01
616c 616c s 	out	(dac_l),a
616e 616e s 	equval	dacp,%dn,$-1
616e 616e s dacp180	=	$-1
616e 616e s 	endm
616e 616e s 	dn++
616e 616e s 	endm
616e 616e s 	samp_r
616e 616e d d9
616e 616e u 01 01
616e 616e s 	exx
616f 616f d 19
616f 616f u 01 01
616f 616f s 	add	hl,de
6170 6170 d 4c
6170 6170 u 01 01
6170 6170 s 	ld	c,h
6171 6171 d 0a
6171 6171 u 01 01
6171 6171 s 	ld	a,(bc)
6172 6172 d d3b5
6172 6172 u 02 01
6172 6172 s 	out	(dac_r),a
6174 6174 s 	equval	dacp,%dn,$-1
6174 6174 s dacp181	=	$-1
6174 6174 s 	endm
6174 6174 s 	dn++
6174 6174 d d9
6174 6174 u 01 01
6174 6174 s 	exx
6175 6175 s 	endm
6175 6175 s 	endm
6175 6175 s 
6175 6175 s 	; waste 31
6175 6175 d 1800
6175 6175 u 02 01
6175 6175 s 	jr	$+2
6177 6177 d 1800
6177 6177 u 02 01
6177 6177 s 	jr	$+2
6179 6179 d f600
6179 6179 u 02 01
6179 6179 s 	or	a,0
617b 617b s 
617b 617b d fd36fdca
617b 617b u 04 01
617b 617b s 	ld	(iy-3),jp_z
617f 617f d fde9
617f 617f u 02 01
617f 617f s 	jp	(iy)
6181 6181 s 
6181 6181 s 	endm
6181 6181 s 
6181 6181 s vol_down_up_l:
6181 6181 s 	kreset	vol_down_down_l,nop
6181 6181 s 	cycle
6181 6181 s 	start_cycle
6181 6181 s diff	defl	sampcyc-t($)
6181 6181 s 	assert	t($) == sampcyc
6181 6181 s 	sett	0
6181 6181 s 	endm
6181 6181 s 	samp_l
6181 6181 d 19
6181 6181 u 01 01
6181 6181 s 	add	hl,de
6182 6182 d 4c
6182 6182 u 01 01
6182 6182 s 	ld	c,h
6183 6183 d 0a
6183 6183 u 01 01
6183 6183 s 	ld	a,(bc)
6184 6184 d d3b9
6184 6184 u 02 01
6184 6184 s 	out	(dac_l),a
6186 6186 s 	equval	dacp,%dn,$-1
6186 6186 s dacp182	=	$-1
6186 6186 s 	endm
6186 6186 s 	dn++
6186 6186 s 	endm
6186 6186 s 	samp_r
6186 6186 d d9
6186 6186 u 01 01
6186 6186 s 	exx
6187 6187 d 19
6187 6187 u 01 01
6187 6187 s 	add	hl,de
6188 6188 d 4c
6188 6188 u 01 01
6188 6188 s 	ld	c,h
6189 6189 d 0a
6189 6189 u 01 01
6189 6189 s 	ld	a,(bc)
618a 618a d d3b5
618a 618a u 02 01
618a 618a s 	out	(dac_r),a
618c 618c s 	equval	dacp,%dn,$-1
618c 618c s dacp183	=	$-1
618c 618c s 	endm
618c 618c s 	dn++
618c 618c d d9
618c 618c u 01 01
618c 618c s 	exx
618d 618d s 	endm
618d 618d s 	endm
618d 618d s 
618d 618d d f1
618d 618d u 01 01
618d 618d s 	pop	af
618e 618e d fde1
618e 618e u 02 01
618e 618e s 	pop	iy
6190 6190 d fd36fdc2
6190 6190 u 04 01
6190 6190 s 	ld	(iy-3),jp_nz
6194 6194 s 	; waste 15
6194 6194 d 00
6194 6194 u 01 01
6194 6194 s 	nop
6195 6195 d 00
6195 6195 u 01 01
6195 6195 s 	nop
6196 6196 d 3e00
6196 6196 u 02 01
6196 6196 s 	ld	a,0
6198 6198 s 
6198 6198 s 	cycle
6198 6198 s 	start_cycle
6198 6198 s diff	defl	sampcyc-t($)
6198 6198 s 	assert	t($) == sampcyc
6198 6198 s 	sett	0
6198 6198 s 	endm
6198 6198 s 	samp_l
6198 6198 d 19
6198 6198 u 01 01
6198 6198 s 	add	hl,de
6199 6199 d 4c
6199 6199 u 01 01
6199 6199 s 	ld	c,h
619a 619a d 0a
619a 619a u 01 01
619a 619a s 	ld	a,(bc)
619b 619b d d3b9
619b 619b u 02 01
619b 619b s 	out	(dac_l),a
619d 619d s 	equval	dacp,%dn,$-1
619d 619d s dacp184	=	$-1
619d 619d s 	endm
619d 619d s 	dn++
619d 619d s 	endm
619d 619d s 	samp_r
619d 619d d d9
619d 619d u 01 01
619d 619d s 	exx
619e 619e d 19
619e 619e u 01 01
619e 619e s 	add	hl,de
619f 619f d 4c
619f 619f u 01 01
619f 619f s 	ld	c,h
61a0 61a0 d 0a
61a0 61a0 u 01 01
61a0 61a0 s 	ld	a,(bc)
61a1 61a1 d d3b5
61a1 61a1 u 02 01
61a1 61a1 s 	out	(dac_r),a
61a3 61a3 s 	equval	dacp,%dn,$-1
61a3 61a3 s dacp185	=	$-1
61a3 61a3 s 	endm
61a3 61a3 s 	dn++
61a3 61a3 d d9
61a3 61a3 u 01 01
61a3 61a3 s 	exx
61a4 61a4 s 	endm
61a4 61a4 s 	endm
61a4 61a4 s 
61a4 61a4 d fd36fe56
61a4 61a4 u 04 01
61a4 61a4 s 	ld	(iy-2),low(vol_down_down_l)
61a8 61a8 d fd36ff60
61a8 61a8 u 04 01
61a8 61a8 s 	ld	(iy-1),high(vol_down_down_l)
61ac 61ac s 	; waste 12
61ac 61ac d 1800
61ac 61ac u 02 01
61ac 61ac s 	jr	$+2
61ae 61ae d fde9
61ae 61ae u 02 01
61ae 61ae s 	jp	(iy)
61b0 61b0 s 
61b0 61b0 s 	endm
61b0 61b0 s 
61b0 61b0 s vol_up_down_l:
61b0 61b0 s 	dovol	_l,-1,vol_up_up_l,nop
61b0 61b0 s 
61b0 61b0 s 	cycle
61b0 61b0 s 	start_cycle
61b0 61b0 s diff	defl	sampcyc-t($)
61b0 61b0 s 	assert	t($) == sampcyc
61b0 61b0 s 	sett	0
61b0 61b0 s 	endm
61b0 61b0 s 	samp_l
61b0 61b0 d 19
61b0 61b0 u 01 01
61b0 61b0 s 	add	hl,de
61b1 61b1 d 4c
61b1 61b1 u 01 01
61b1 61b1 s 	ld	c,h
61b2 61b2 d 0a
61b2 61b2 u 01 01
61b2 61b2 s 	ld	a,(bc)
61b3 61b3 d d3b9
61b3 61b3 u 02 01
61b3 61b3 s 	out	(dac_l),a
61b5 61b5 s 	equval	dacp,%dn,$-1
61b5 61b5 s dacp186	=	$-1
61b5 61b5 s 	endm
61b5 61b5 s 	dn++
61b5 61b5 s 	endm
61b5 61b5 s 	samp_r
61b5 61b5 d d9
61b5 61b5 u 01 01
61b5 61b5 s 	exx
61b6 61b6 d 19
61b6 61b6 u 01 01
61b6 61b6 s 	add	hl,de
61b7 61b7 d 4c
61b7 61b7 u 01 01
61b7 61b7 s 	ld	c,h
61b8 61b8 d 0a
61b8 61b8 u 01 01
61b8 61b8 s 	ld	a,(bc)
61b9 61b9 d d3b5
61b9 61b9 u 02 01
61b9 61b9 s 	out	(dac_r),a
61bb 61bb s 	equval	dacp,%dn,$-1
61bb 61bb s dacp187	=	$-1
61bb 61bb s 	endm
61bb 61bb s 	dn++
61bb 61bb d d9
61bb 61bb u 01 01
61bb 61bb s 	exx
61bc 61bc s 	endm
61bc 61bc s 	endm
61bc 61bc s 
61bc 61bc s 	; Clean up all parameters and get return location into IY
61bc 61bc d f1
61bc 61bc u 01 01
61bc 61bc s 	pop	af		
61bd 61bd d fde1
61bd 61bd u 02 01
61bd 61bd s 	pop	iy
61bf 61bf d f1
61bf 61bf u 01 01
61bf 61bf s 	pop	af		; Oh, not necessary; oh well.
61c0 61c0 d dd2abc65
61c0 61c0 u 04 01
61c0 61c0 s 	ld	ix,(vl_m_l)
61c4 61c4 s 	; waste 4
61c4 61c4 d 00
61c4 61c4 u 01 01
61c4 61c4 s 	nop
61c5 61c5 s 
61c5 61c5 s 	cycle
61c5 61c5 s 	start_cycle
61c5 61c5 s diff	defl	sampcyc-t($)
61c5 61c5 s 	assert	t($) == sampcyc
61c5 61c5 s 	sett	0
61c5 61c5 s 	endm
61c5 61c5 s 	samp_l
61c5 61c5 d 19
61c5 61c5 u 01 01
61c5 61c5 s 	add	hl,de
61c6 61c6 d 4c
61c6 61c6 u 01 01
61c6 61c6 s 	ld	c,h
61c7 61c7 d 0a
61c7 61c7 u 01 01
61c7 61c7 s 	ld	a,(bc)
61c8 61c8 d d3b9
61c8 61c8 u 02 01
61c8 61c8 s 	out	(dac_l),a
61ca 61ca s 	equval	dacp,%dn,$-1
61ca 61ca s dacp188	=	$-1
61ca 61ca s 	endm
61ca 61ca s 	dn++
61ca 61ca s 	endm
61ca 61ca s 	samp_r
61ca 61ca d d9
61ca 61ca u 01 01
61ca 61ca s 	exx
61cb 61cb d 19
61cb 61cb u 01 01
61cb 61cb s 	add	hl,de
61cc 61cc d 4c
61cc 61cc u 01 01
61cc 61cc s 	ld	c,h
61cd 61cd d 0a
61cd 61cd u 01 01
61cd 61cd s 	ld	a,(bc)
61ce 61ce d d3b5
61ce 61ce u 02 01
61ce 61ce s 	out	(dac_r),a
61d0 61d0 s 	equval	dacp,%dn,$-1
61d0 61d0 s dacp189	=	$-1
61d0 61d0 s 	endm
61d0 61d0 s 	dn++
61d0 61d0 d d9
61d0 61d0 u 01 01
61d0 61d0 s 	exx
61d1 61d1 s 	endm
61d1 61d1 s 	endm
61d1 61d1 s 
61d1 61d1 d dd29
61d1 61d1 u 02 01
61d1 61d1 s 	add	ix,ix
61d3 61d3 d dd29
61d3 61d3 u 02 01
61d3 61d3 s 	add	ix,ix		; get "volume" bits in IX high byte
61d5 61d5 d dd22c065
61d5 61d5 u 04 01
61d5 61d5 s 	ld	(voltmp),ix	; make accessible
61d9 61d9 s 	; waste 8
61d9 61d9 d 00
61d9 61d9 u 01 01
61d9 61d9 s 	nop
61da 61da d 00
61da 61da u 01 01
61da 61da s 	nop
61db 61db s 
61db 61db s 	cycle
61db 61db s 	start_cycle
61db 61db s diff	defl	sampcyc-t($)
61db 61db s 	assert	t($) == sampcyc
61db 61db s 	sett	0
61db 61db s 	endm
61db 61db s 	samp_l
61db 61db d 19
61db 61db u 01 01
61db 61db s 	add	hl,de
61dc 61dc d 4c
61dc 61dc u 01 01
61dc 61dc s 	ld	c,h
61dd 61dd d 0a
61dd 61dd u 01 01
61dd 61dd s 	ld	a,(bc)
61de 61de d d3b9
61de 61de u 02 01
61de 61de s 	out	(dac_l),a
61e0 61e0 s 	equval	dacp,%dn,$-1
61e0 61e0 s dacp190	=	$-1
61e0 61e0 s 	endm
61e0 61e0 s 	dn++
61e0 61e0 s 	endm
61e0 61e0 s 	samp_r
61e0 61e0 d d9
61e0 61e0 u 01 01
61e0 61e0 s 	exx
61e1 61e1 d 19
61e1 61e1 u 01 01
61e1 61e1 s 	add	hl,de
61e2 61e2 d 4c
61e2 61e2 u 01 01
61e2 61e2 s 	ld	c,h
61e3 61e3 d 0a
61e3 61e3 u 01 01
61e3 61e3 s 	ld	a,(bc)
61e4 61e4 d d3b5
61e4 61e4 u 02 01
61e4 61e4 s 	out	(dac_r),a
61e6 61e6 s 	equval	dacp,%dn,$-1
61e6 61e6 s dacp191	=	$-1
61e6 61e6 s 	endm
61e6 61e6 s 	dn++
61e6 61e6 d d9
61e6 61e6 u 01 01
61e6 61e6 s 	exx
61e7 61e7 s 	endm
61e7 61e7 s 	endm
61e7 61e7 s 
61e7 61e7 d dd2abc65
61e7 61e7 u 04 01
61e7 61e7 s 	ld	ix,(vl_m_l)
61eb 61eb d 3ac165
61eb 61eb u 03 01
61eb 61eb s 	ld	a,(voltmp+1)	; volume bits
61ee 61ee s    if -1 > 0
61ee 61ee s 	cp	$3f*4+3		; volume bits 15?
61ee 61ee s    else
61ee 61ee d fef0
61ee 61ee u 02 01
61ee 61ee s 	cp	$3c*4+0		; volume bits 0?
61f0 61f0 s    endif
61f0 61f0 d ca2a5f
61f0 61f0 u 03 01
61f0 61f0 s 	jp	z,jp_iy		; return if volume at up/down limit
61f3 61f3 d 00
61f3 61f3 u 01 01
61f3 61f3 s 	nop			; balance
61f4 61f4 d 00
61f4 61f4 u 01 01
61f4 61f4 s 	nop			;   jp (iy)
61f5 61f5 s 	; lucky balance
61f5 61f5 s 
61f5 61f5 s 	cycle
61f5 61f5 s 	start_cycle
61f5 61f5 s diff	defl	sampcyc-t($)
61f5 61f5 s 	assert	t($) == sampcyc
61f5 61f5 s 	sett	0
61f5 61f5 s 	endm
61f5 61f5 s 	samp_l
61f5 61f5 d 19
61f5 61f5 u 01 01
61f5 61f5 s 	add	hl,de
61f6 61f6 d 4c
61f6 61f6 u 01 01
61f6 61f6 s 	ld	c,h
61f7 61f7 d 0a
61f7 61f7 u 01 01
61f7 61f7 s 	ld	a,(bc)
61f8 61f8 d d3b9
61f8 61f8 u 02 01
61f8 61f8 s 	out	(dac_l),a
61fa 61fa s 	equval	dacp,%dn,$-1
61fa 61fa s dacp192	=	$-1
61fa 61fa s 	endm
61fa 61fa s 	dn++
61fa 61fa s 	endm
61fa 61fa s 	samp_r
61fa 61fa d d9
61fa 61fa u 01 01
61fa 61fa s 	exx
61fb 61fb d 19
61fb 61fb u 01 01
61fb 61fb s 	add	hl,de
61fc 61fc d 4c
61fc 61fc u 01 01
61fc 61fc s 	ld	c,h
61fd 61fd d 0a
61fd 61fd u 01 01
61fd 61fd s 	ld	a,(bc)
61fe 61fe d d3b5
61fe 61fe u 02 01
61fe 61fe s 	out	(dac_r),a
6200 6200 s 	equval	dacp,%dn,$-1
6200 6200 s dacp193	=	$-1
6200 6200 s 	endm
6200 6200 s 	dn++
6200 6200 d d9
6200 6200 u 01 01
6200 6200 s 	exx
6201 6201 s 	endm
6201 6201 s 	endm
6201 6201 s 
6201 6201 s    if -1 > 0
6201 6201 s 	ld	(ix),' '	; erase top of volume
6201 6201 s    else
6201 6201 d 1800
6201 6201 u 02 01
6201 6201 s 	jr	$+2
6203 6203 d f600
6203 6203 u 02 01
6203 6203 s 	or	a,0
6205 6205 s    endif
6205 6205 d ed533862
6205 6205 u 04 01
6205 6205 s 	ld	(?f0714),de
6209 6209 s 	; waste 19
6209 6209 d 1800
6209 6209 u 02 01
6209 6209 s 	jr	$+2
620b 620b d f600
620b 620b u 02 01
620b 620b s 	or	a,0
620d 620d s 
620d 620d s 	cycle
620d 620d s 	start_cycle
620d 620d s diff	defl	sampcyc-t($)
620d 620d s 	assert	t($) == sampcyc
620d 620d s 	sett	0
620d 620d s 	endm
620d 620d s 	samp_l
620d 620d d 19
620d 620d u 01 01
620d 620d s 	add	hl,de
620e 620e d 4c
620e 620e u 01 01
620e 620e s 	ld	c,h
620f 620f d 0a
620f 620f u 01 01
620f 620f s 	ld	a,(bc)
6210 6210 d d3b9
6210 6210 u 02 01
6210 6210 s 	out	(dac_l),a
6212 6212 s 	equval	dacp,%dn,$-1
6212 6212 s dacp194	=	$-1
6212 6212 s 	endm
6212 6212 s 	dn++
6212 6212 s 	endm
6212 6212 s 	samp_r
6212 6212 d d9
6212 6212 u 01 01
6212 6212 s 	exx
6213 6213 d 19
6213 6213 u 01 01
6213 6213 s 	add	hl,de
6214 6214 d 4c
6214 6214 u 01 01
6214 6214 s 	ld	c,h
6215 6215 d 0a
6215 6215 u 01 01
6215 6215 s 	ld	a,(bc)
6216 6216 d d3b5
6216 6216 u 02 01
6216 6216 s 	out	(dac_r),a
6218 6218 s 	equval	dacp,%dn,$-1
6218 6218 s dacp195	=	$-1
6218 6218 s 	endm
6218 6218 s 	dn++
6218 6218 d d9
6218 6218 u 01 01
6218 6218 s 	exx
6219 6219 s 	endm
6219 6219 s 	endm
6219 6219 s 
6219 6219 d dd2abc65
6219 6219 u 04 01
6219 6219 s 	ld	ix,(vl_m_l);
621d 621d s 
621d 621d d 00
621d 621d u 01 01
621d 621d s 	nop
621e 621e d 78
621e 621e u 01 01
621e 621e s 	ld	a,b
621f 621f d d6c0
621f 621f u 02 01
621f 621f s 	sub	high(silence)
6221 6221 d 328862
6221 6221 u 03 01
6221 6221 s 	ld	(?h0714),a
6224 6224 d 00
6224 6224 u 01 01
6224 6224 s 	nop
6225 6225 s 	; waste 6
6225 6225 d 33
6225 6225 u 01 01
6225 6225 s 	inc	sp
6226 6226 s 
6226 6226 s 	cycle
6226 6226 s 	start_cycle
6226 6226 s diff	defl	sampcyc-t($)
6226 6226 s 	assert	t($) == sampcyc
6226 6226 s 	sett	0
6226 6226 s 	endm
6226 6226 s 	samp_l
6226 6226 d 19
6226 6226 u 01 01
6226 6226 s 	add	hl,de
6227 6227 d 4c
6227 6227 u 01 01
6227 6227 s 	ld	c,h
6228 6228 d 0a
6228 6228 u 01 01
6228 6228 s 	ld	a,(bc)
6229 6229 d d3b9
6229 6229 u 02 01
6229 6229 s 	out	(dac_l),a
622b 622b s 	equval	dacp,%dn,$-1
622b 622b s dacp196	=	$-1
622b 622b s 	endm
622b 622b s 	dn++
622b 622b s 	endm
622b 622b s 	samp_r
622b 622b d d9
622b 622b u 01 01
622b 622b s 	exx
622c 622c d 19
622c 622c u 01 01
622c 622c s 	add	hl,de
622d 622d d 4c
622d 622d u 01 01
622d 622d s 	ld	c,h
622e 622e d 0a
622e 622e u 01 01
622e 622e s 	ld	a,(bc)
622f 622f d d3b5
622f 622f u 02 01
622f 622f s 	out	(dac_r),a
6231 6231 s 	equval	dacp,%dn,$-1
6231 6231 s dacp197	=	$-1
6231 6231 s 	endm
6231 6231 s 	dn++
6231 6231 d d9
6231 6231 u 01 01
6231 6231 s 	exx
6232 6232 s 	endm
6232 6232 s 	endm
6232 6232 s 
6232 6232 d 11c0ff
6232 6232 u 03 01
6232 6232 s 	ld	de,64*-1
6235 6235 d dd19
6235 6235 u 02 01
6235 6235 s 	add	ix,de		; move meter
6237 6237 d 110000
6237 6237 u 03 01
6237 6237 s 	ld	de,0
6238 6238 s 	org	$-2
6238 6238 d 0000
6238 6238 u 02 03
6238 6238 s ?f0714:	defw	0
623a 623a s    if -1 > 0
623a 623a s 	; waste 23
623a 623a s 	jp	$+3
623a 623a s 	nop
623a 623a s 	scf
623a 623a s 	ret	nc
623a 623a s    else
623a 623a d dd360095
623a 623a u 04 01
623a 623a s    	ld	(ix),meter_l	; add to top of meter
623e 623e s 	; waste 4
623e 623e d 00
623e 623e u 01 01
623e 623e s 	nop
623f 623f s    endif
623f 623f s 
623f 623f s 	cycle
623f 623f s 	start_cycle
623f 623f s diff	defl	sampcyc-t($)
623f 623f s 	assert	t($) == sampcyc
623f 623f s 	sett	0
623f 623f s 	endm
623f 623f s 	samp_l
623f 623f d 19
623f 623f u 01 01
623f 623f s 	add	hl,de
6240 6240 d 4c
6240 6240 u 01 01
6240 6240 s 	ld	c,h
6241 6241 d 0a
6241 6241 u 01 01
6241 6241 s 	ld	a,(bc)
6242 6242 d d3b9
6242 6242 u 02 01
6242 6242 s 	out	(dac_l),a
6244 6244 s 	equval	dacp,%dn,$-1
6244 6244 s dacp198	=	$-1
6244 6244 s 	endm
6244 6244 s 	dn++
6244 6244 s 	endm
6244 6244 s 	samp_r
6244 6244 d d9
6244 6244 u 01 01
6244 6244 s 	exx
6245 6245 d 19
6245 6245 u 01 01
6245 6245 s 	add	hl,de
6246 6246 d 4c
6246 6246 u 01 01
6246 6246 s 	ld	c,h
6247 6247 d 0a
6247 6247 u 01 01
6247 6247 s 	ld	a,(bc)
6248 6248 d d3b5
6248 6248 u 02 01
6248 6248 s 	out	(dac_r),a
624a 624a s 	equval	dacp,%dn,$-1
624a 624a s dacp199	=	$-1
624a 624a s 	endm
624a 624a s 	dn++
624a 624a d d9
624a 624a u 01 01
624a 624a s 	exx
624b 624b s 	endm
624b 624b s 	endm
624b 624b s 
624b 624b d dd22bc65
624b 624b u 04 01
624b 624b s 	ld	(vl_m_l),ix	; save volume position
624f 624f d 3a6c5c
624f 624f u 03 01
624f 624f s 	ld	a,(wf_l)
6252 6252 d e603
6252 6252 u 02 01
6252 6252 s 	and	3		; clear volume from waveform
6254 6254 d 326d62
6254 6254 u 03 01
6254 6254 s 	ld	(?e0714),a
6257 6257 s 	; waste 5
6257 6257 d d8
6257 6257 u 01 01
6257 6257 s 	ret	c
6258 6258 s 
6258 6258 s 	cycle
6258 6258 s 	start_cycle
6258 6258 s diff	defl	sampcyc-t($)
6258 6258 s 	assert	t($) == sampcyc
6258 6258 s 	sett	0
6258 6258 s 	endm
6258 6258 s 	samp_l
6258 6258 d 19
6258 6258 u 01 01
6258 6258 s 	add	hl,de
6259 6259 d 4c
6259 6259 u 01 01
6259 6259 s 	ld	c,h
625a 625a d 0a
625a 625a u 01 01
625a 625a s 	ld	a,(bc)
625b 625b d d3b9
625b 625b u 02 01
625b 625b s 	out	(dac_l),a
625d 625d s 	equval	dacp,%dn,$-1
625d 625d s dacp200	=	$-1
625d 625d s 	endm
625d 625d s 	dn++
625d 625d s 	endm
625d 625d s 	samp_r
625d 625d d d9
625d 625d u 01 01
625d 625d s 	exx
625e 625e d 19
625e 625e u 01 01
625e 625e s 	add	hl,de
625f 625f d 4c
625f 625f u 01 01
625f 625f s 	ld	c,h
6260 6260 d 0a
6260 6260 u 01 01
6260 6260 s 	ld	a,(bc)
6261 6261 d d3b5
6261 6261 u 02 01
6261 6261 s 	out	(dac_r),a
6263 6263 s 	equval	dacp,%dn,$-1
6263 6263 s dacp201	=	$-1
6263 6263 s 	endm
6263 6263 s 	dn++
6263 6263 d d9
6263 6263 u 01 01
6263 6263 s 	exx
6264 6264 s 	endm
6264 6264 s 	endm
6264 6264 s 
6264 6264 d 3ac165
6264 6264 u 03 01
6264 6264 s 	ld	a,(voltmp+1)	; previous volume bits
6267 6267 s    if -1 > 0
6267 6267 s    	inc	a		; caught up to moved meter
6267 6267 s    else
6267 6267 d 3d
6267 6267 u 01 01
6267 6267 s    	dec	a		; caught up to moved meter
6268 6268 s    endif
6268 6268 d 87
6268 6268 u 01 01
6268 6268 s 	add	a,a
6269 6269 d 87
6269 6269 u 01 01
6269 6269 s 	add	a,a		; make way for waveform
626a 626a d ee40
626a 626a u 02 01
626a 626a s 	xor	(high(wavebnk)&$c0)^$c0	; magically fix up high bits
626c 626c d f600
626c 626c u 02 01
626c 626c s 	or	0		; add waveform back in
626d 626d s 	org	$-1
626d 626d d 00
626d 626d u 01 03
626d 626d s ?e0714:	defb	0
626e 626e d 326c5c
626e 626e u 03 01
626e 626e s 	ld	(wf_l),a
6271 6271 s 	; waste 6
6271 6271 d 33
6271 6271 u 01 01
6271 6271 s 	inc	sp
6272 6272 s 
6272 6272 s 	cycle
6272 6272 s 	start_cycle
6272 6272 s diff	defl	sampcyc-t($)
6272 6272 s 	assert	t($) == sampcyc
6272 6272 s 	sett	0
6272 6272 s 	endm
6272 6272 s 	samp_l
6272 6272 d 19
6272 6272 u 01 01
6272 6272 s 	add	hl,de
6273 6273 d 4c
6273 6273 u 01 01
6273 6273 s 	ld	c,h
6274 6274 d 0a
6274 6274 u 01 01
6274 6274 s 	ld	a,(bc)
6275 6275 d d3b9
6275 6275 u 02 01
6275 6275 s 	out	(dac_l),a
6277 6277 s 	equval	dacp,%dn,$-1
6277 6277 s dacp202	=	$-1
6277 6277 s 	endm
6277 6277 s 	dn++
6277 6277 s 	endm
6277 6277 s 	samp_r
6277 6277 d d9
6277 6277 u 01 01
6277 6277 s 	exx
6278 6278 d 19
6278 6278 u 01 01
6278 6278 s 	add	hl,de
6279 6279 d 4c
6279 6279 u 01 01
6279 6279 s 	ld	c,h
627a 627a d 0a
627a 627a u 01 01
627a 627a s 	ld	a,(bc)
627b 627b d d3b5
627b 627b u 02 01
627b 627b s 	out	(dac_r),a
627d 627d s 	equval	dacp,%dn,$-1
627d 627d s dacp203	=	$-1
627d 627d s 	endm
627d 627d s 	dn++
627d 627d d d9
627d 627d u 01 01
627d 627d s 	exx
627e 627e s 	endm
627e 627e s 	endm
627e 627e s 
627e 627e s 	; waste 4
627e 627e d 00
627e 627e u 01 01
627e 627e s 	nop
627f 627f s 
627f 627f d 3a6c5c
627f 627f u 03 01
627f 627f s 	ld	a,(wf_l)
6282 6282 d e6fc
6282 6282 u 02 01
6282 6282 s 	and	~3		; drop waveform
6284 6284 d 32a65e
6284 6284 u 03 01
6284 6284 s 	ld	(wb_l),a
6287 6287 s 
6287 6287 d 3e00
6287 6287 u 02 01
6287 6287 s 	ld	a,0
6288 6288 s 	org	$-1
6288 6288 d 00
6288 6288 u 01 03
6288 6288 s ?h0714:	defb	0
6289 6289 d b7
6289 6289 u 01 01
6289 6289 s 	or	a
628a 628a d caa862
628a 628a u 03 01
628a 628a s 	jp	z,?g0714
628d 628d s 
628d 628d s 	cycle
628d 628d s 	start_cycle
628d 628d s diff	defl	sampcyc-t($)
628d 628d s 	assert	t($) == sampcyc
628d 628d s 	sett	0
628d 628d s 	endm
628d 628d s 	samp_l
628d 628d d 19
628d 628d u 01 01
628d 628d s 	add	hl,de
628e 628e d 4c
628e 628e u 01 01
628e 628e s 	ld	c,h
628f 628f d 0a
628f 628f u 01 01
628f 628f s 	ld	a,(bc)
6290 6290 d d3b9
6290 6290 u 02 01
6290 6290 s 	out	(dac_l),a
6292 6292 s 	equval	dacp,%dn,$-1
6292 6292 s dacp204	=	$-1
6292 6292 s 	endm
6292 6292 s 	dn++
6292 6292 s 	endm
6292 6292 s 	samp_r
6292 6292 d d9
6292 6292 u 01 01
6292 6292 s 	exx
6293 6293 d 19
6293 6293 u 01 01
6293 6293 s 	add	hl,de
6294 6294 d 4c
6294 6294 u 01 01
6294 6294 s 	ld	c,h
6295 6295 d 0a
6295 6295 u 01 01
6295 6295 s 	ld	a,(bc)
6296 6296 d d3b5
6296 6296 u 02 01
6296 6296 s 	out	(dac_r),a
6298 6298 s 	equval	dacp,%dn,$-1
6298 6298 s dacp205	=	$-1
6298 6298 s 	endm
6298 6298 s 	dn++
6298 6298 d d9
6298 6298 u 01 01
6298 6298 s 	exx
6299 6299 s 	endm
6299 6299 s 	endm
6299 6299 d 3a6c5c
6299 6299 u 03 01
6299 6299 s 	ld	a,(wf_l)
629c 629c d 00
629c 629c u 01 01
629c 629c s 	nop
629d 629d d 47
629d 629d u 01 01
629d 629d s 	ld	b,a
629e 629e d 00
629e 629e u 01 01
629e 629e s 	nop
629f 629f s 	; waste 33
629f 629f d 3a0000
629f 629f u 03 01
629f 629f s 	ld	a,(0)
62a2 62a2 d c3a562
62a2 62a2 u 03 01
62a2 62a2 s 	jp	$+3
62a5 62a5 d c3a862
62a5 62a5 u 03 01
62a5 62a5 s 	jp	$+3
62a8 62a8 s 
62a8 62a8 s ?g0714:
62a8 62a8 s 	cycle
62a8 62a8 s 	start_cycle
62a8 62a8 s diff	defl	sampcyc-t($)
62a8 62a8 s 	assert	t($) == sampcyc
62a8 62a8 s 	sett	0
62a8 62a8 s 	endm
62a8 62a8 s 	samp_l
62a8 62a8 d 19
62a8 62a8 u 01 01
62a8 62a8 s 	add	hl,de
62a9 62a9 d 4c
62a9 62a9 u 01 01
62a9 62a9 s 	ld	c,h
62aa 62aa d 0a
62aa 62aa u 01 01
62aa 62aa s 	ld	a,(bc)
62ab 62ab d d3b9
62ab 62ab u 02 01
62ab 62ab s 	out	(dac_l),a
62ad 62ad s 	equval	dacp,%dn,$-1
62ad 62ad s dacp206	=	$-1
62ad 62ad s 	endm
62ad 62ad s 	dn++
62ad 62ad s 	endm
62ad 62ad s 	samp_r
62ad 62ad d d9
62ad 62ad u 01 01
62ad 62ad s 	exx
62ae 62ae d 19
62ae 62ae u 01 01
62ae 62ae s 	add	hl,de
62af 62af d 4c
62af 62af u 01 01
62af 62af s 	ld	c,h
62b0 62b0 d 0a
62b0 62b0 u 01 01
62b0 62b0 s 	ld	a,(bc)
62b1 62b1 d d3b5
62b1 62b1 u 02 01
62b1 62b1 s 	out	(dac_r),a
62b3 62b3 s 	equval	dacp,%dn,$-1
62b3 62b3 s dacp207	=	$-1
62b3 62b3 s 	endm
62b3 62b3 s 	dn++
62b3 62b3 d d9
62b3 62b3 u 01 01
62b3 62b3 s 	exx
62b4 62b4 s 	endm
62b4 62b4 s 	endm
62b4 62b4 s 
62b4 62b4 d fd36ff62
62b4 62b4 u 04 01
62b4 62b4 s 	ld	(iy-1),high(vol_up_up_l)
62b8 62b8 d fd36feda
62b8 62b8 u 04 01
62b8 62b8 s 	ld	(iy-2),low(vol_up_up_l)
62bc 62bc s 	; waste 20
62bc 62bc d c3bf62
62bc 62bc u 03 01
62bc 62bc s 	jp	$+3
62bf 62bf d c3c262
62bf 62bf u 03 01
62bf 62bf s 	jp	$+3
62c2 62c2 s 
62c2 62c2 s 	cycle
62c2 62c2 s 	start_cycle
62c2 62c2 s diff	defl	sampcyc-t($)
62c2 62c2 s 	assert	t($) == sampcyc
62c2 62c2 s 	sett	0
62c2 62c2 s 	endm
62c2 62c2 s 	samp_l
62c2 62c2 d 19
62c2 62c2 u 01 01
62c2 62c2 s 	add	hl,de
62c3 62c3 d 4c
62c3 62c3 u 01 01
62c3 62c3 s 	ld	c,h
62c4 62c4 d 0a
62c4 62c4 u 01 01
62c4 62c4 s 	ld	a,(bc)
62c5 62c5 d d3b9
62c5 62c5 u 02 01
62c5 62c5 s 	out	(dac_l),a
62c7 62c7 s 	equval	dacp,%dn,$-1
62c7 62c7 s dacp208	=	$-1
62c7 62c7 s 	endm
62c7 62c7 s 	dn++
62c7 62c7 s 	endm
62c7 62c7 s 	samp_r
62c7 62c7 d d9
62c7 62c7 u 01 01
62c7 62c7 s 	exx
62c8 62c8 d 19
62c8 62c8 u 01 01
62c8 62c8 s 	add	hl,de
62c9 62c9 d 4c
62c9 62c9 u 01 01
62c9 62c9 s 	ld	c,h
62ca 62ca d 0a
62ca 62ca u 01 01
62ca 62ca s 	ld	a,(bc)
62cb 62cb d d3b5
62cb 62cb u 02 01
62cb 62cb s 	out	(dac_r),a
62cd 62cd s 	equval	dacp,%dn,$-1
62cd 62cd s dacp209	=	$-1
62cd 62cd s 	endm
62cd 62cd s 	dn++
62cd 62cd d d9
62cd 62cd u 01 01
62cd 62cd s 	exx
62ce 62ce s 	endm
62ce 62ce s 	endm
62ce 62ce s 
62ce 62ce s 	; waste 31
62ce 62ce d 1800
62ce 62ce u 02 01
62ce 62ce s 	jr	$+2
62d0 62d0 d 1800
62d0 62d0 u 02 01
62d0 62d0 s 	jr	$+2
62d2 62d2 d f600
62d2 62d2 u 02 01
62d2 62d2 s 	or	a,0
62d4 62d4 s 
62d4 62d4 d fd36fdca
62d4 62d4 u 04 01
62d4 62d4 s 	ld	(iy-3),jp_z
62d8 62d8 d fde9
62d8 62d8 u 02 01
62d8 62d8 s 	jp	(iy)
62da 62da s 
62da 62da s 	endm
62da 62da s 
62da 62da s vol_up_up_l:
62da 62da s 	kreset	vol_up_down_l,nop
62da 62da s 	cycle
62da 62da s 	start_cycle
62da 62da s diff	defl	sampcyc-t($)
62da 62da s 	assert	t($) == sampcyc
62da 62da s 	sett	0
62da 62da s 	endm
62da 62da s 	samp_l
62da 62da d 19
62da 62da u 01 01
62da 62da s 	add	hl,de
62db 62db d 4c
62db 62db u 01 01
62db 62db s 	ld	c,h
62dc 62dc d 0a
62dc 62dc u 01 01
62dc 62dc s 	ld	a,(bc)
62dd 62dd d d3b9
62dd 62dd u 02 01
62dd 62dd s 	out	(dac_l),a
62df 62df s 	equval	dacp,%dn,$-1
62df 62df s dacp210	=	$-1
62df 62df s 	endm
62df 62df s 	dn++
62df 62df s 	endm
62df 62df s 	samp_r
62df 62df d d9
62df 62df u 01 01
62df 62df s 	exx
62e0 62e0 d 19
62e0 62e0 u 01 01
62e0 62e0 s 	add	hl,de
62e1 62e1 d 4c
62e1 62e1 u 01 01
62e1 62e1 s 	ld	c,h
62e2 62e2 d 0a
62e2 62e2 u 01 01
62e2 62e2 s 	ld	a,(bc)
62e3 62e3 d d3b5
62e3 62e3 u 02 01
62e3 62e3 s 	out	(dac_r),a
62e5 62e5 s 	equval	dacp,%dn,$-1
62e5 62e5 s dacp211	=	$-1
62e5 62e5 s 	endm
62e5 62e5 s 	dn++
62e5 62e5 d d9
62e5 62e5 u 01 01
62e5 62e5 s 	exx
62e6 62e6 s 	endm
62e6 62e6 s 	endm
62e6 62e6 s 
62e6 62e6 d f1
62e6 62e6 u 01 01
62e6 62e6 s 	pop	af
62e7 62e7 d fde1
62e7 62e7 u 02 01
62e7 62e7 s 	pop	iy
62e9 62e9 d fd36fdc2
62e9 62e9 u 04 01
62e9 62e9 s 	ld	(iy-3),jp_nz
62ed 62ed s 	; waste 15
62ed 62ed d 00
62ed 62ed u 01 01
62ed 62ed s 	nop
62ee 62ee d 00
62ee 62ee u 01 01
62ee 62ee s 	nop
62ef 62ef d 3e00
62ef 62ef u 02 01
62ef 62ef s 	ld	a,0
62f1 62f1 s 
62f1 62f1 s 	cycle
62f1 62f1 s 	start_cycle
62f1 62f1 s diff	defl	sampcyc-t($)
62f1 62f1 s 	assert	t($) == sampcyc
62f1 62f1 s 	sett	0
62f1 62f1 s 	endm
62f1 62f1 s 	samp_l
62f1 62f1 d 19
62f1 62f1 u 01 01
62f1 62f1 s 	add	hl,de
62f2 62f2 d 4c
62f2 62f2 u 01 01
62f2 62f2 s 	ld	c,h
62f3 62f3 d 0a
62f3 62f3 u 01 01
62f3 62f3 s 	ld	a,(bc)
62f4 62f4 d d3b9
62f4 62f4 u 02 01
62f4 62f4 s 	out	(dac_l),a
62f6 62f6 s 	equval	dacp,%dn,$-1
62f6 62f6 s dacp212	=	$-1
62f6 62f6 s 	endm
62f6 62f6 s 	dn++
62f6 62f6 s 	endm
62f6 62f6 s 	samp_r
62f6 62f6 d d9
62f6 62f6 u 01 01
62f6 62f6 s 	exx
62f7 62f7 d 19
62f7 62f7 u 01 01
62f7 62f7 s 	add	hl,de
62f8 62f8 d 4c
62f8 62f8 u 01 01
62f8 62f8 s 	ld	c,h
62f9 62f9 d 0a
62f9 62f9 u 01 01
62f9 62f9 s 	ld	a,(bc)
62fa 62fa d d3b5
62fa 62fa u 02 01
62fa 62fa s 	out	(dac_r),a
62fc 62fc s 	equval	dacp,%dn,$-1
62fc 62fc s dacp213	=	$-1
62fc 62fc s 	endm
62fc 62fc s 	dn++
62fc 62fc d d9
62fc 62fc u 01 01
62fc 62fc s 	exx
62fd 62fd s 	endm
62fd 62fd s 	endm
62fd 62fd s 
62fd 62fd d fd36feb0
62fd 62fd u 04 01
62fd 62fd s 	ld	(iy-2),low(vol_up_down_l)
6301 6301 d fd36ff61
6301 6301 u 04 01
6301 6301 s 	ld	(iy-1),high(vol_up_down_l)
6305 6305 s 	; waste 12
6305 6305 d 1800
6305 6305 u 02 01
6305 6305 s 	jr	$+2
6307 6307 d fde9
6307 6307 u 02 01
6307 6307 s 	jp	(iy)
6309 6309 s 
6309 6309 s 	endm
6309 6309 s 
6309 6309 s vol_down_down_r:
6309 6309 s 	dovol	_r,1,vol_down_up_r,exx
6309 6309 s 
6309 6309 s 	cycle
6309 6309 s 	start_cycle
6309 6309 s diff	defl	sampcyc-t($)
6309 6309 s 	assert	t($) == sampcyc
6309 6309 s 	sett	0
6309 6309 s 	endm
6309 6309 s 	samp_l
6309 6309 d 19
6309 6309 u 01 01
6309 6309 s 	add	hl,de
630a 630a d 4c
630a 630a u 01 01
630a 630a s 	ld	c,h
630b 630b d 0a
630b 630b u 01 01
630b 630b s 	ld	a,(bc)
630c 630c d d3b9
630c 630c u 02 01
630c 630c s 	out	(dac_l),a
630e 630e s 	equval	dacp,%dn,$-1
630e 630e s dacp214	=	$-1
630e 630e s 	endm
630e 630e s 	dn++
630e 630e s 	endm
630e 630e s 	samp_r
630e 630e d d9
630e 630e u 01 01
630e 630e s 	exx
630f 630f d 19
630f 630f u 01 01
630f 630f s 	add	hl,de
6310 6310 d 4c
6310 6310 u 01 01
6310 6310 s 	ld	c,h
6311 6311 d 0a
6311 6311 u 01 01
6311 6311 s 	ld	a,(bc)
6312 6312 d d3b5
6312 6312 u 02 01
6312 6312 s 	out	(dac_r),a
6314 6314 s 	equval	dacp,%dn,$-1
6314 6314 s dacp215	=	$-1
6314 6314 s 	endm
6314 6314 s 	dn++
6314 6314 d d9
6314 6314 u 01 01
6314 6314 s 	exx
6315 6315 s 	endm
6315 6315 s 	endm
6315 6315 s 
6315 6315 s 	; Clean up all parameters and get return location into IY
6315 6315 d f1
6315 6315 u 01 01
6315 6315 s 	pop	af		
6316 6316 d fde1
6316 6316 u 02 01
6316 6316 s 	pop	iy
6318 6318 d f1
6318 6318 u 01 01
6318 6318 s 	pop	af		; Oh, not necessary; oh well.
6319 6319 d dd2abe65
6319 6319 u 04 01
6319 6319 s 	ld	ix,(vl_m_r)
631d 631d s 	; waste 4
631d 631d d 00
631d 631d u 01 01
631d 631d s 	nop
631e 631e s 
631e 631e s 	cycle
631e 631e s 	start_cycle
631e 631e s diff	defl	sampcyc-t($)
631e 631e s 	assert	t($) == sampcyc
631e 631e s 	sett	0
631e 631e s 	endm
631e 631e s 	samp_l
631e 631e d 19
631e 631e u 01 01
631e 631e s 	add	hl,de
631f 631f d 4c
631f 631f u 01 01
631f 631f s 	ld	c,h
6320 6320 d 0a
6320 6320 u 01 01
6320 6320 s 	ld	a,(bc)
6321 6321 d d3b9
6321 6321 u 02 01
6321 6321 s 	out	(dac_l),a
6323 6323 s 	equval	dacp,%dn,$-1
6323 6323 s dacp216	=	$-1
6323 6323 s 	endm
6323 6323 s 	dn++
6323 6323 s 	endm
6323 6323 s 	samp_r
6323 6323 d d9
6323 6323 u 01 01
6323 6323 s 	exx
6324 6324 d 19
6324 6324 u 01 01
6324 6324 s 	add	hl,de
6325 6325 d 4c
6325 6325 u 01 01
6325 6325 s 	ld	c,h
6326 6326 d 0a
6326 6326 u 01 01
6326 6326 s 	ld	a,(bc)
6327 6327 d d3b5
6327 6327 u 02 01
6327 6327 s 	out	(dac_r),a
6329 6329 s 	equval	dacp,%dn,$-1
6329 6329 s dacp217	=	$-1
6329 6329 s 	endm
6329 6329 s 	dn++
6329 6329 d d9
6329 6329 u 01 01
6329 6329 s 	exx
632a 632a s 	endm
632a 632a s 	endm
632a 632a s 
632a 632a d dd29
632a 632a u 02 01
632a 632a s 	add	ix,ix
632c 632c d dd29
632c 632c u 02 01
632c 632c s 	add	ix,ix		; get "volume" bits in IX high byte
632e 632e d dd22c065
632e 632e u 04 01
632e 632e s 	ld	(voltmp),ix	; make accessible
6332 6332 s 	; waste 8
6332 6332 d 00
6332 6332 u 01 01
6332 6332 s 	nop
6333 6333 d 00
6333 6333 u 01 01
6333 6333 s 	nop
6334 6334 s 
6334 6334 s 	cycle
6334 6334 s 	start_cycle
6334 6334 s diff	defl	sampcyc-t($)
6334 6334 s 	assert	t($) == sampcyc
6334 6334 s 	sett	0
6334 6334 s 	endm
6334 6334 s 	samp_l
6334 6334 d 19
6334 6334 u 01 01
6334 6334 s 	add	hl,de
6335 6335 d 4c
6335 6335 u 01 01
6335 6335 s 	ld	c,h
6336 6336 d 0a
6336 6336 u 01 01
6336 6336 s 	ld	a,(bc)
6337 6337 d d3b9
6337 6337 u 02 01
6337 6337 s 	out	(dac_l),a
6339 6339 s 	equval	dacp,%dn,$-1
6339 6339 s dacp218	=	$-1
6339 6339 s 	endm
6339 6339 s 	dn++
6339 6339 s 	endm
6339 6339 s 	samp_r
6339 6339 d d9
6339 6339 u 01 01
6339 6339 s 	exx
633a 633a d 19
633a 633a u 01 01
633a 633a s 	add	hl,de
633b 633b d 4c
633b 633b u 01 01
633b 633b s 	ld	c,h
633c 633c d 0a
633c 633c u 01 01
633c 633c s 	ld	a,(bc)
633d 633d d d3b5
633d 633d u 02 01
633d 633d s 	out	(dac_r),a
633f 633f s 	equval	dacp,%dn,$-1
633f 633f s dacp219	=	$-1
633f 633f s 	endm
633f 633f s 	dn++
633f 633f d d9
633f 633f u 01 01
633f 633f s 	exx
6340 6340 s 	endm
6340 6340 s 	endm
6340 6340 s 
6340 6340 d dd2abe65
6340 6340 u 04 01
6340 6340 s 	ld	ix,(vl_m_r)
6344 6344 d 3ac165
6344 6344 u 03 01
6344 6344 s 	ld	a,(voltmp+1)	; volume bits
6347 6347 s    if 1 > 0
6347 6347 d feff
6347 6347 u 02 01
6347 6347 s 	cp	$3f*4+3		; volume bits 15?
6349 6349 s    else
6349 6349 s 	cp	$3c*4+0		; volume bits 0?
6349 6349 s    endif
6349 6349 d ca2a5f
6349 6349 u 03 01
6349 6349 s 	jp	z,jp_iy		; return if volume at up/down limit
634c 634c d 00
634c 634c u 01 01
634c 634c s 	nop			; balance
634d 634d d 00
634d 634d u 01 01
634d 634d s 	nop			;   jp (iy)
634e 634e s 	; lucky balance
634e 634e s 
634e 634e s 	cycle
634e 634e s 	start_cycle
634e 634e s diff	defl	sampcyc-t($)
634e 634e s 	assert	t($) == sampcyc
634e 634e s 	sett	0
634e 634e s 	endm
634e 634e s 	samp_l
634e 634e d 19
634e 634e u 01 01
634e 634e s 	add	hl,de
634f 634f d 4c
634f 634f u 01 01
634f 634f s 	ld	c,h
6350 6350 d 0a
6350 6350 u 01 01
6350 6350 s 	ld	a,(bc)
6351 6351 d d3b9
6351 6351 u 02 01
6351 6351 s 	out	(dac_l),a
6353 6353 s 	equval	dacp,%dn,$-1
6353 6353 s dacp220	=	$-1
6353 6353 s 	endm
6353 6353 s 	dn++
6353 6353 s 	endm
6353 6353 s 	samp_r
6353 6353 d d9
6353 6353 u 01 01
6353 6353 s 	exx
6354 6354 d 19
6354 6354 u 01 01
6354 6354 s 	add	hl,de
6355 6355 d 4c
6355 6355 u 01 01
6355 6355 s 	ld	c,h
6356 6356 d 0a
6356 6356 u 01 01
6356 6356 s 	ld	a,(bc)
6357 6357 d d3b5
6357 6357 u 02 01
6357 6357 s 	out	(dac_r),a
6359 6359 s 	equval	dacp,%dn,$-1
6359 6359 s dacp221	=	$-1
6359 6359 s 	endm
6359 6359 s 	dn++
6359 6359 d d9
6359 6359 u 01 01
6359 6359 s 	exx
635a 635a s 	endm
635a 635a s 	endm
635a 635a s 
635a 635a s    if 1 > 0
635a 635a d dd360020
635a 635a u 04 01
635a 635a s 	ld	(ix),' '	; erase top of volume
635e 635e s    else
635e 635e s 	jr	$+2
635e 635e s 	or	a,0
635e 635e s    endif
635e 635e d ed539163
635e 635e u 04 01
635e 635e s 	ld	(?f0800),de
6362 6362 s 	; waste 19
6362 6362 d 1800
6362 6362 u 02 01
6362 6362 s 	jr	$+2
6364 6364 d f600
6364 6364 u 02 01
6364 6364 s 	or	a,0
6366 6366 s 
6366 6366 s 	cycle
6366 6366 s 	start_cycle
6366 6366 s diff	defl	sampcyc-t($)
6366 6366 s 	assert	t($) == sampcyc
6366 6366 s 	sett	0
6366 6366 s 	endm
6366 6366 s 	samp_l
6366 6366 d 19
6366 6366 u 01 01
6366 6366 s 	add	hl,de
6367 6367 d 4c
6367 6367 u 01 01
6367 6367 s 	ld	c,h
6368 6368 d 0a
6368 6368 u 01 01
6368 6368 s 	ld	a,(bc)
6369 6369 d d3b9
6369 6369 u 02 01
6369 6369 s 	out	(dac_l),a
636b 636b s 	equval	dacp,%dn,$-1
636b 636b s dacp222	=	$-1
636b 636b s 	endm
636b 636b s 	dn++
636b 636b s 	endm
636b 636b s 	samp_r
636b 636b d d9
636b 636b u 01 01
636b 636b s 	exx
636c 636c d 19
636c 636c u 01 01
636c 636c s 	add	hl,de
636d 636d d 4c
636d 636d u 01 01
636d 636d s 	ld	c,h
636e 636e d 0a
636e 636e u 01 01
636e 636e s 	ld	a,(bc)
636f 636f d d3b5
636f 636f u 02 01
636f 636f s 	out	(dac_r),a
6371 6371 s 	equval	dacp,%dn,$-1
6371 6371 s dacp223	=	$-1
6371 6371 s 	endm
6371 6371 s 	dn++
6371 6371 d d9
6371 6371 u 01 01
6371 6371 s 	exx
6372 6372 s 	endm
6372 6372 s 	endm
6372 6372 s 
6372 6372 d dd2abe65
6372 6372 u 04 01
6372 6372 s 	ld	ix,(vl_m_r);
6376 6376 s 
6376 6376 d d9
6376 6376 u 01 01
6376 6376 s 	exx
6377 6377 d 78
6377 6377 u 01 01
6377 6377 s 	ld	a,b
6378 6378 d d6c0
6378 6378 u 02 01
6378 6378 s 	sub	high(silence)
637a 637a d 32e263
637a 637a u 03 01
637a 637a s 	ld	(?h0800),a
637d 637d d d9
637d 637d u 01 01
637d 637d s 	exx
637e 637e s 	; waste 6
637e 637e d 33
637e 637e u 01 01
637e 637e s 	inc	sp
637f 637f s 
637f 637f s 	cycle
637f 637f s 	start_cycle
637f 637f s diff	defl	sampcyc-t($)
637f 637f s 	assert	t($) == sampcyc
637f 637f s 	sett	0
637f 637f s 	endm
637f 637f s 	samp_l
637f 637f d 19
637f 637f u 01 01
637f 637f s 	add	hl,de
6380 6380 d 4c
6380 6380 u 01 01
6380 6380 s 	ld	c,h
6381 6381 d 0a
6381 6381 u 01 01
6381 6381 s 	ld	a,(bc)
6382 6382 d d3b9
6382 6382 u 02 01
6382 6382 s 	out	(dac_l),a
6384 6384 s 	equval	dacp,%dn,$-1
6384 6384 s dacp224	=	$-1
6384 6384 s 	endm
6384 6384 s 	dn++
6384 6384 s 	endm
6384 6384 s 	samp_r
6384 6384 d d9
6384 6384 u 01 01
6384 6384 s 	exx
6385 6385 d 19
6385 6385 u 01 01
6385 6385 s 	add	hl,de
6386 6386 d 4c
6386 6386 u 01 01
6386 6386 s 	ld	c,h
6387 6387 d 0a
6387 6387 u 01 01
6387 6387 s 	ld	a,(bc)
6388 6388 d d3b5
6388 6388 u 02 01
6388 6388 s 	out	(dac_r),a
638a 638a s 	equval	dacp,%dn,$-1
638a 638a s dacp225	=	$-1
638a 638a s 	endm
638a 638a s 	dn++
638a 638a d d9
638a 638a u 01 01
638a 638a s 	exx
638b 638b s 	endm
638b 638b s 	endm
638b 638b s 
638b 638b d 114000
638b 638b u 03 01
638b 638b s 	ld	de,64*1
638e 638e d dd19
638e 638e u 02 01
638e 638e s 	add	ix,de		; move meter
6390 6390 d 110000
6390 6390 u 03 01
6390 6390 s 	ld	de,0
6391 6391 s 	org	$-2
6391 6391 d 0000
6391 6391 u 02 03
6391 6391 s ?f0800:	defw	0
6393 6393 s    if 1 > 0
6393 6393 s 	; waste 23
6393 6393 d c39663
6393 6393 u 03 01
6393 6393 s 	jp	$+3
6396 6396 d 00
6396 6396 u 01 01
6396 6396 s 	nop
6397 6397 d 37
6397 6397 u 01 01
6397 6397 s 	scf
6398 6398 d d0
6398 6398 u 01 01
6398 6398 s 	ret	nc
6399 6399 s    else
6399 6399 s    	ld	(ix),meter_r	; add to top of meter
6399 6399 s 	; waste 4
6399 6399 s 	nop
6399 6399 s    endif
6399 6399 s 
6399 6399 s 	cycle
6399 6399 s 	start_cycle
6399 6399 s diff	defl	sampcyc-t($)
6399 6399 s 	assert	t($) == sampcyc
6399 6399 s 	sett	0
6399 6399 s 	endm
6399 6399 s 	samp_l
6399 6399 d 19
6399 6399 u 01 01
6399 6399 s 	add	hl,de
639a 639a d 4c
639a 639a u 01 01
639a 639a s 	ld	c,h
639b 639b d 0a
639b 639b u 01 01
639b 639b s 	ld	a,(bc)
639c 639c d d3b9
639c 639c u 02 01
639c 639c s 	out	(dac_l),a
639e 639e s 	equval	dacp,%dn,$-1
639e 639e s dacp226	=	$-1
639e 639e s 	endm
639e 639e s 	dn++
639e 639e s 	endm
639e 639e s 	samp_r
639e 639e d d9
639e 639e u 01 01
639e 639e s 	exx
639f 639f d 19
639f 639f u 01 01
639f 639f s 	add	hl,de
63a0 63a0 d 4c
63a0 63a0 u 01 01
63a0 63a0 s 	ld	c,h
63a1 63a1 d 0a
63a1 63a1 u 01 01
63a1 63a1 s 	ld	a,(bc)
63a2 63a2 d d3b5
63a2 63a2 u 02 01
63a2 63a2 s 	out	(dac_r),a
63a4 63a4 s 	equval	dacp,%dn,$-1
63a4 63a4 s dacp227	=	$-1
63a4 63a4 s 	endm
63a4 63a4 s 	dn++
63a4 63a4 d d9
63a4 63a4 u 01 01
63a4 63a4 s 	exx
63a5 63a5 s 	endm
63a5 63a5 s 	endm
63a5 63a5 s 
63a5 63a5 d dd22be65
63a5 63a5 u 04 01
63a5 63a5 s 	ld	(vl_m_r),ix	; save volume position
63a9 63a9 d 3a695d
63a9 63a9 u 03 01
63a9 63a9 s 	ld	a,(wf_r)
63ac 63ac d e603
63ac 63ac u 02 01
63ac 63ac s 	and	3		; clear volume from waveform
63ae 63ae d 32c763
63ae 63ae u 03 01
63ae 63ae s 	ld	(?e0800),a
63b1 63b1 s 	; waste 5
63b1 63b1 d d8
63b1 63b1 u 01 01
63b1 63b1 s 	ret	c
63b2 63b2 s 
63b2 63b2 s 	cycle
63b2 63b2 s 	start_cycle
63b2 63b2 s diff	defl	sampcyc-t($)
63b2 63b2 s 	assert	t($) == sampcyc
63b2 63b2 s 	sett	0
63b2 63b2 s 	endm
63b2 63b2 s 	samp_l
63b2 63b2 d 19
63b2 63b2 u 01 01
63b2 63b2 s 	add	hl,de
63b3 63b3 d 4c
63b3 63b3 u 01 01
63b3 63b3 s 	ld	c,h
63b4 63b4 d 0a
63b4 63b4 u 01 01
63b4 63b4 s 	ld	a,(bc)
63b5 63b5 d d3b9
63b5 63b5 u 02 01
63b5 63b5 s 	out	(dac_l),a
63b7 63b7 s 	equval	dacp,%dn,$-1
63b7 63b7 s dacp228	=	$-1
63b7 63b7 s 	endm
63b7 63b7 s 	dn++
63b7 63b7 s 	endm
63b7 63b7 s 	samp_r
63b7 63b7 d d9
63b7 63b7 u 01 01
63b7 63b7 s 	exx
63b8 63b8 d 19
63b8 63b8 u 01 01
63b8 63b8 s 	add	hl,de
63b9 63b9 d 4c
63b9 63b9 u 01 01
63b9 63b9 s 	ld	c,h
63ba 63ba d 0a
63ba 63ba u 01 01
63ba 63ba s 	ld	a,(bc)
63bb 63bb d d3b5
63bb 63bb u 02 01
63bb 63bb s 	out	(dac_r),a
63bd 63bd s 	equval	dacp,%dn,$-1
63bd 63bd s dacp229	=	$-1
63bd 63bd s 	endm
63bd 63bd s 	dn++
63bd 63bd d d9
63bd 63bd u 01 01
63bd 63bd s 	exx
63be 63be s 	endm
63be 63be s 	endm
63be 63be s 
63be 63be d 3ac165
63be 63be u 03 01
63be 63be s 	ld	a,(voltmp+1)	; previous volume bits
63c1 63c1 s    if 1 > 0
63c1 63c1 d 3c
63c1 63c1 u 01 01
63c1 63c1 s    	inc	a		; caught up to moved meter
63c2 63c2 s    else
63c2 63c2 s    	dec	a		; caught up to moved meter
63c2 63c2 s    endif
63c2 63c2 d 87
63c2 63c2 u 01 01
63c2 63c2 s 	add	a,a
63c3 63c3 d 87
63c3 63c3 u 01 01
63c3 63c3 s 	add	a,a		; make way for waveform
63c4 63c4 d ee40
63c4 63c4 u 02 01
63c4 63c4 s 	xor	(high(wavebnk)&$c0)^$c0	; magically fix up high bits
63c6 63c6 d f600
63c6 63c6 u 02 01
63c6 63c6 s 	or	0		; add waveform back in
63c7 63c7 s 	org	$-1
63c7 63c7 d 00
63c7 63c7 u 01 03
63c7 63c7 s ?e0800:	defb	0
63c8 63c8 d 32695d
63c8 63c8 u 03 01
63c8 63c8 s 	ld	(wf_r),a
63cb 63cb s 	; waste 6
63cb 63cb d 33
63cb 63cb u 01 01
63cb 63cb s 	inc	sp
63cc 63cc s 
63cc 63cc s 	cycle
63cc 63cc s 	start_cycle
63cc 63cc s diff	defl	sampcyc-t($)
63cc 63cc s 	assert	t($) == sampcyc
63cc 63cc s 	sett	0
63cc 63cc s 	endm
63cc 63cc s 	samp_l
63cc 63cc d 19
63cc 63cc u 01 01
63cc 63cc s 	add	hl,de
63cd 63cd d 4c
63cd 63cd u 01 01
63cd 63cd s 	ld	c,h
63ce 63ce d 0a
63ce 63ce u 01 01
63ce 63ce s 	ld	a,(bc)
63cf 63cf d d3b9
63cf 63cf u 02 01
63cf 63cf s 	out	(dac_l),a
63d1 63d1 s 	equval	dacp,%dn,$-1
63d1 63d1 s dacp230	=	$-1
63d1 63d1 s 	endm
63d1 63d1 s 	dn++
63d1 63d1 s 	endm
63d1 63d1 s 	samp_r
63d1 63d1 d d9
63d1 63d1 u 01 01
63d1 63d1 s 	exx
63d2 63d2 d 19
63d2 63d2 u 01 01
63d2 63d2 s 	add	hl,de
63d3 63d3 d 4c
63d3 63d3 u 01 01
63d3 63d3 s 	ld	c,h
63d4 63d4 d 0a
63d4 63d4 u 01 01
63d4 63d4 s 	ld	a,(bc)
63d5 63d5 d d3b5
63d5 63d5 u 02 01
63d5 63d5 s 	out	(dac_r),a
63d7 63d7 s 	equval	dacp,%dn,$-1
63d7 63d7 s dacp231	=	$-1
63d7 63d7 s 	endm
63d7 63d7 s 	dn++
63d7 63d7 d d9
63d7 63d7 u 01 01
63d7 63d7 s 	exx
63d8 63d8 s 	endm
63d8 63d8 s 	endm
63d8 63d8 s 
63d8 63d8 s 	; waste 4
63d8 63d8 d 00
63d8 63d8 u 01 01
63d8 63d8 s 	nop
63d9 63d9 s 
63d9 63d9 d 3a695d
63d9 63d9 u 03 01
63d9 63d9 s 	ld	a,(wf_r)
63dc 63dc d e6fc
63dc 63dc u 02 01
63dc 63dc s 	and	~3		; drop waveform
63de 63de d 32a15f
63de 63de u 03 01
63de 63de s 	ld	(wb_r),a
63e1 63e1 s 
63e1 63e1 d 3e00
63e1 63e1 u 02 01
63e1 63e1 s 	ld	a,0
63e2 63e2 s 	org	$-1
63e2 63e2 d 00
63e2 63e2 u 01 03
63e2 63e2 s ?h0800:	defb	0
63e3 63e3 d b7
63e3 63e3 u 01 01
63e3 63e3 s 	or	a
63e4 63e4 d ca0264
63e4 63e4 u 03 01
63e4 63e4 s 	jp	z,?g0800
63e7 63e7 s 
63e7 63e7 s 	cycle
63e7 63e7 s 	start_cycle
63e7 63e7 s diff	defl	sampcyc-t($)
63e7 63e7 s 	assert	t($) == sampcyc
63e7 63e7 s 	sett	0
63e7 63e7 s 	endm
63e7 63e7 s 	samp_l
63e7 63e7 d 19
63e7 63e7 u 01 01
63e7 63e7 s 	add	hl,de
63e8 63e8 d 4c
63e8 63e8 u 01 01
63e8 63e8 s 	ld	c,h
63e9 63e9 d 0a
63e9 63e9 u 01 01
63e9 63e9 s 	ld	a,(bc)
63ea 63ea d d3b9
63ea 63ea u 02 01
63ea 63ea s 	out	(dac_l),a
63ec 63ec s 	equval	dacp,%dn,$-1
63ec 63ec s dacp232	=	$-1
63ec 63ec s 	endm
63ec 63ec s 	dn++
63ec 63ec s 	endm
63ec 63ec s 	samp_r
63ec 63ec d d9
63ec 63ec u 01 01
63ec 63ec s 	exx
63ed 63ed d 19
63ed 63ed u 01 01
63ed 63ed s 	add	hl,de
63ee 63ee d 4c
63ee 63ee u 01 01
63ee 63ee s 	ld	c,h
63ef 63ef d 0a
63ef 63ef u 01 01
63ef 63ef s 	ld	a,(bc)
63f0 63f0 d d3b5
63f0 63f0 u 02 01
63f0 63f0 s 	out	(dac_r),a
63f2 63f2 s 	equval	dacp,%dn,$-1
63f2 63f2 s dacp233	=	$-1
63f2 63f2 s 	endm
63f2 63f2 s 	dn++
63f2 63f2 d d9
63f2 63f2 u 01 01
63f2 63f2 s 	exx
63f3 63f3 s 	endm
63f3 63f3 s 	endm
63f3 63f3 d 3a695d
63f3 63f3 u 03 01
63f3 63f3 s 	ld	a,(wf_r)
63f6 63f6 d d9
63f6 63f6 u 01 01
63f6 63f6 s 	exx
63f7 63f7 d 47
63f7 63f7 u 01 01
63f7 63f7 s 	ld	b,a
63f8 63f8 d d9
63f8 63f8 u 01 01
63f8 63f8 s 	exx
63f9 63f9 s 	; waste 33
63f9 63f9 d 3a0000
63f9 63f9 u 03 01
63f9 63f9 s 	ld	a,(0)
63fc 63fc d c3ff63
63fc 63fc u 03 01
63fc 63fc s 	jp	$+3
63ff 63ff d c30264
63ff 63ff u 03 01
63ff 63ff s 	jp	$+3
6402 6402 s 
6402 6402 s ?g0800:
6402 6402 s 	cycle
6402 6402 s 	start_cycle
6402 6402 s diff	defl	sampcyc-t($)
6402 6402 s 	assert	t($) == sampcyc
6402 6402 s 	sett	0
6402 6402 s 	endm
6402 6402 s 	samp_l
6402 6402 d 19
6402 6402 u 01 01
6402 6402 s 	add	hl,de
6403 6403 d 4c
6403 6403 u 01 01
6403 6403 s 	ld	c,h
6404 6404 d 0a
6404 6404 u 01 01
6404 6404 s 	ld	a,(bc)
6405 6405 d d3b9
6405 6405 u 02 01
6405 6405 s 	out	(dac_l),a
6407 6407 s 	equval	dacp,%dn,$-1
6407 6407 s dacp234	=	$-1
6407 6407 s 	endm
6407 6407 s 	dn++
6407 6407 s 	endm
6407 6407 s 	samp_r
6407 6407 d d9
6407 6407 u 01 01
6407 6407 s 	exx
6408 6408 d 19
6408 6408 u 01 01
6408 6408 s 	add	hl,de
6409 6409 d 4c
6409 6409 u 01 01
6409 6409 s 	ld	c,h
640a 640a d 0a
640a 640a u 01 01
640a 640a s 	ld	a,(bc)
640b 640b d d3b5
640b 640b u 02 01
640b 640b s 	out	(dac_r),a
640d 640d s 	equval	dacp,%dn,$-1
640d 640d s dacp235	=	$-1
640d 640d s 	endm
640d 640d s 	dn++
640d 640d d d9
640d 640d u 01 01
640d 640d s 	exx
640e 640e s 	endm
640e 640e s 	endm
640e 640e s 
640e 640e d fd36ff64
640e 640e u 04 01
640e 640e s 	ld	(iy-1),high(vol_down_up_r)
6412 6412 d fd36fe34
6412 6412 u 04 01
6412 6412 s 	ld	(iy-2),low(vol_down_up_r)
6416 6416 s 	; waste 20
6416 6416 d c31964
6416 6416 u 03 01
6416 6416 s 	jp	$+3
6419 6419 d c31c64
6419 6419 u 03 01
6419 6419 s 	jp	$+3
641c 641c s 
641c 641c s 	cycle
641c 641c s 	start_cycle
641c 641c s diff	defl	sampcyc-t($)
641c 641c s 	assert	t($) == sampcyc
641c 641c s 	sett	0
641c 641c s 	endm
641c 641c s 	samp_l
641c 641c d 19
641c 641c u 01 01
641c 641c s 	add	hl,de
641d 641d d 4c
641d 641d u 01 01
641d 641d s 	ld	c,h
641e 641e d 0a
641e 641e u 01 01
641e 641e s 	ld	a,(bc)
641f 641f d d3b9
641f 641f u 02 01
641f 641f s 	out	(dac_l),a
6421 6421 s 	equval	dacp,%dn,$-1
6421 6421 s dacp236	=	$-1
6421 6421 s 	endm
6421 6421 s 	dn++
6421 6421 s 	endm
6421 6421 s 	samp_r
6421 6421 d d9
6421 6421 u 01 01
6421 6421 s 	exx
6422 6422 d 19
6422 6422 u 01 01
6422 6422 s 	add	hl,de
6423 6423 d 4c
6423 6423 u 01 01
6423 6423 s 	ld	c,h
6424 6424 d 0a
6424 6424 u 01 01
6424 6424 s 	ld	a,(bc)
6425 6425 d d3b5
6425 6425 u 02 01
6425 6425 s 	out	(dac_r),a
6427 6427 s 	equval	dacp,%dn,$-1
6427 6427 s dacp237	=	$-1
6427 6427 s 	endm
6427 6427 s 	dn++
6427 6427 d d9
6427 6427 u 01 01
6427 6427 s 	exx
6428 6428 s 	endm
6428 6428 s 	endm
6428 6428 s 
6428 6428 s 	; waste 31
6428 6428 d 1800
6428 6428 u 02 01
6428 6428 s 	jr	$+2
642a 642a d 1800
642a 642a u 02 01
642a 642a s 	jr	$+2
642c 642c d f600
642c 642c u 02 01
642c 642c s 	or	a,0
642e 642e s 
642e 642e d fd36fdca
642e 642e u 04 01
642e 642e s 	ld	(iy-3),jp_z
6432 6432 d fde9
6432 6432 u 02 01
6432 6432 s 	jp	(iy)
6434 6434 s 
6434 6434 s 	endm
6434 6434 s 
6434 6434 s vol_down_up_r:
6434 6434 s 	kreset	vol_down_down_r,exx
6434 6434 s 	cycle
6434 6434 s 	start_cycle
6434 6434 s diff	defl	sampcyc-t($)
6434 6434 s 	assert	t($) == sampcyc
6434 6434 s 	sett	0
6434 6434 s 	endm
6434 6434 s 	samp_l
6434 6434 d 19
6434 6434 u 01 01
6434 6434 s 	add	hl,de
6435 6435 d 4c
6435 6435 u 01 01
6435 6435 s 	ld	c,h
6436 6436 d 0a
6436 6436 u 01 01
6436 6436 s 	ld	a,(bc)
6437 6437 d d3b9
6437 6437 u 02 01
6437 6437 s 	out	(dac_l),a
6439 6439 s 	equval	dacp,%dn,$-1
6439 6439 s dacp238	=	$-1
6439 6439 s 	endm
6439 6439 s 	dn++
6439 6439 s 	endm
6439 6439 s 	samp_r
6439 6439 d d9
6439 6439 u 01 01
6439 6439 s 	exx
643a 643a d 19
643a 643a u 01 01
643a 643a s 	add	hl,de
643b 643b d 4c
643b 643b u 01 01
643b 643b s 	ld	c,h
643c 643c d 0a
643c 643c u 01 01
643c 643c s 	ld	a,(bc)
643d 643d d d3b5
643d 643d u 02 01
643d 643d s 	out	(dac_r),a
643f 643f s 	equval	dacp,%dn,$-1
643f 643f s dacp239	=	$-1
643f 643f s 	endm
643f 643f s 	dn++
643f 643f d d9
643f 643f u 01 01
643f 643f s 	exx
6440 6440 s 	endm
6440 6440 s 	endm
6440 6440 s 
6440 6440 d f1
6440 6440 u 01 01
6440 6440 s 	pop	af
6441 6441 d fde1
6441 6441 u 02 01
6441 6441 s 	pop	iy
6443 6443 d fd36fdc2
6443 6443 u 04 01
6443 6443 s 	ld	(iy-3),jp_nz
6447 6447 s 	; waste 15
6447 6447 d 00
6447 6447 u 01 01
6447 6447 s 	nop
6448 6448 d 00
6448 6448 u 01 01
6448 6448 s 	nop
6449 6449 d 3e00
6449 6449 u 02 01
6449 6449 s 	ld	a,0
644b 644b s 
644b 644b s 	cycle
644b 644b s 	start_cycle
644b 644b s diff	defl	sampcyc-t($)
644b 644b s 	assert	t($) == sampcyc
644b 644b s 	sett	0
644b 644b s 	endm
644b 644b s 	samp_l
644b 644b d 19
644b 644b u 01 01
644b 644b s 	add	hl,de
644c 644c d 4c
644c 644c u 01 01
644c 644c s 	ld	c,h
644d 644d d 0a
644d 644d u 01 01
644d 644d s 	ld	a,(bc)
644e 644e d d3b9
644e 644e u 02 01
644e 644e s 	out	(dac_l),a
6450 6450 s 	equval	dacp,%dn,$-1
6450 6450 s dacp240	=	$-1
6450 6450 s 	endm
6450 6450 s 	dn++
6450 6450 s 	endm
6450 6450 s 	samp_r
6450 6450 d d9
6450 6450 u 01 01
6450 6450 s 	exx
6451 6451 d 19
6451 6451 u 01 01
6451 6451 s 	add	hl,de
6452 6452 d 4c
6452 6452 u 01 01
6452 6452 s 	ld	c,h
6453 6453 d 0a
6453 6453 u 01 01
6453 6453 s 	ld	a,(bc)
6454 6454 d d3b5
6454 6454 u 02 01
6454 6454 s 	out	(dac_r),a
6456 6456 s 	equval	dacp,%dn,$-1
6456 6456 s dacp241	=	$-1
6456 6456 s 	endm
6456 6456 s 	dn++
6456 6456 d d9
6456 6456 u 01 01
6456 6456 s 	exx
6457 6457 s 	endm
6457 6457 s 	endm
6457 6457 s 
6457 6457 d fd36fe09
6457 6457 u 04 01
6457 6457 s 	ld	(iy-2),low(vol_down_down_r)
645b 645b d fd36ff63
645b 645b u 04 01
645b 645b s 	ld	(iy-1),high(vol_down_down_r)
645f 645f s 	; waste 12
645f 645f d 1800
645f 645f u 02 01
645f 645f s 	jr	$+2
6461 6461 d fde9
6461 6461 u 02 01
6461 6461 s 	jp	(iy)
6463 6463 s 
6463 6463 s 	endm
6463 6463 s 
6463 6463 s vol_up_down_r:
6463 6463 s 	dovol	_r,-1,vol_up_up_r,exx
6463 6463 s 
6463 6463 s 	cycle
6463 6463 s 	start_cycle
6463 6463 s diff	defl	sampcyc-t($)
6463 6463 s 	assert	t($) == sampcyc
6463 6463 s 	sett	0
6463 6463 s 	endm
6463 6463 s 	samp_l
6463 6463 d 19
6463 6463 u 01 01
6463 6463 s 	add	hl,de
6464 6464 d 4c
6464 6464 u 01 01
6464 6464 s 	ld	c,h
6465 6465 d 0a
6465 6465 u 01 01
6465 6465 s 	ld	a,(bc)
6466 6466 d d3b9
6466 6466 u 02 01
6466 6466 s 	out	(dac_l),a
6468 6468 s 	equval	dacp,%dn,$-1
6468 6468 s dacp242	=	$-1
6468 6468 s 	endm
6468 6468 s 	dn++
6468 6468 s 	endm
6468 6468 s 	samp_r
6468 6468 d d9
6468 6468 u 01 01
6468 6468 s 	exx
6469 6469 d 19
6469 6469 u 01 01
6469 6469 s 	add	hl,de
646a 646a d 4c
646a 646a u 01 01
646a 646a s 	ld	c,h
646b 646b d 0a
646b 646b u 01 01
646b 646b s 	ld	a,(bc)
646c 646c d d3b5
646c 646c u 02 01
646c 646c s 	out	(dac_r),a
646e 646e s 	equval	dacp,%dn,$-1
646e 646e s dacp243	=	$-1
646e 646e s 	endm
646e 646e s 	dn++
646e 646e d d9
646e 646e u 01 01
646e 646e s 	exx
646f 646f s 	endm
646f 646f s 	endm
646f 646f s 
646f 646f s 	; Clean up all parameters and get return location into IY
646f 646f d f1
646f 646f u 01 01
646f 646f s 	pop	af		
6470 6470 d fde1
6470 6470 u 02 01
6470 6470 s 	pop	iy
6472 6472 d f1
6472 6472 u 01 01
6472 6472 s 	pop	af		; Oh, not necessary; oh well.
6473 6473 d dd2abe65
6473 6473 u 04 01
6473 6473 s 	ld	ix,(vl_m_r)
6477 6477 s 	; waste 4
6477 6477 d 00
6477 6477 u 01 01
6477 6477 s 	nop
6478 6478 s 
6478 6478 s 	cycle
6478 6478 s 	start_cycle
6478 6478 s diff	defl	sampcyc-t($)
6478 6478 s 	assert	t($) == sampcyc
6478 6478 s 	sett	0
6478 6478 s 	endm
6478 6478 s 	samp_l
6478 6478 d 19
6478 6478 u 01 01
6478 6478 s 	add	hl,de
6479 6479 d 4c
6479 6479 u 01 01
6479 6479 s 	ld	c,h
647a 647a d 0a
647a 647a u 01 01
647a 647a s 	ld	a,(bc)
647b 647b d d3b9
647b 647b u 02 01
647b 647b s 	out	(dac_l),a
647d 647d s 	equval	dacp,%dn,$-1
647d 647d s dacp244	=	$-1
647d 647d s 	endm
647d 647d s 	dn++
647d 647d s 	endm
647d 647d s 	samp_r
647d 647d d d9
647d 647d u 01 01
647d 647d s 	exx
647e 647e d 19
647e 647e u 01 01
647e 647e s 	add	hl,de
647f 647f d 4c
647f 647f u 01 01
647f 647f s 	ld	c,h
6480 6480 d 0a
6480 6480 u 01 01
6480 6480 s 	ld	a,(bc)
6481 6481 d d3b5
6481 6481 u 02 01
6481 6481 s 	out	(dac_r),a
6483 6483 s 	equval	dacp,%dn,$-1
6483 6483 s dacp245	=	$-1
6483 6483 s 	endm
6483 6483 s 	dn++
6483 6483 d d9
6483 6483 u 01 01
6483 6483 s 	exx
6484 6484 s 	endm
6484 6484 s 	endm
6484 6484 s 
6484 6484 d dd29
6484 6484 u 02 01
6484 6484 s 	add	ix,ix
6486 6486 d dd29
6486 6486 u 02 01
6486 6486 s 	add	ix,ix		; get "volume" bits in IX high byte
6488 6488 d dd22c065
6488 6488 u 04 01
6488 6488 s 	ld	(voltmp),ix	; make accessible
648c 648c s 	; waste 8
648c 648c d 00
648c 648c u 01 01
648c 648c s 	nop
648d 648d d 00
648d 648d u 01 01
648d 648d s 	nop
648e 648e s 
648e 648e s 	cycle
648e 648e s 	start_cycle
648e 648e s diff	defl	sampcyc-t($)
648e 648e s 	assert	t($) == sampcyc
648e 648e s 	sett	0
648e 648e s 	endm
648e 648e s 	samp_l
648e 648e d 19
648e 648e u 01 01
648e 648e s 	add	hl,de
648f 648f d 4c
648f 648f u 01 01
648f 648f s 	ld	c,h
6490 6490 d 0a
6490 6490 u 01 01
6490 6490 s 	ld	a,(bc)
6491 6491 d d3b9
6491 6491 u 02 01
6491 6491 s 	out	(dac_l),a
6493 6493 s 	equval	dacp,%dn,$-1
6493 6493 s dacp246	=	$-1
6493 6493 s 	endm
6493 6493 s 	dn++
6493 6493 s 	endm
6493 6493 s 	samp_r
6493 6493 d d9
6493 6493 u 01 01
6493 6493 s 	exx
6494 6494 d 19
6494 6494 u 01 01
6494 6494 s 	add	hl,de
6495 6495 d 4c
6495 6495 u 01 01
6495 6495 s 	ld	c,h
6496 6496 d 0a
6496 6496 u 01 01
6496 6496 s 	ld	a,(bc)
6497 6497 d d3b5
6497 6497 u 02 01
6497 6497 s 	out	(dac_r),a
6499 6499 s 	equval	dacp,%dn,$-1
6499 6499 s dacp247	=	$-1
6499 6499 s 	endm
6499 6499 s 	dn++
6499 6499 d d9
6499 6499 u 01 01
6499 6499 s 	exx
649a 649a s 	endm
649a 649a s 	endm
649a 649a s 
649a 649a d dd2abe65
649a 649a u 04 01
649a 649a s 	ld	ix,(vl_m_r)
649e 649e d 3ac165
649e 649e u 03 01
649e 649e s 	ld	a,(voltmp+1)	; volume bits
64a1 64a1 s    if -1 > 0
64a1 64a1 s 	cp	$3f*4+3		; volume bits 15?
64a1 64a1 s    else
64a1 64a1 d fef0
64a1 64a1 u 02 01
64a1 64a1 s 	cp	$3c*4+0		; volume bits 0?
64a3 64a3 s    endif
64a3 64a3 d ca2a5f
64a3 64a3 u 03 01
64a3 64a3 s 	jp	z,jp_iy		; return if volume at up/down limit
64a6 64a6 d 00
64a6 64a6 u 01 01
64a6 64a6 s 	nop			; balance
64a7 64a7 d 00
64a7 64a7 u 01 01
64a7 64a7 s 	nop			;   jp (iy)
64a8 64a8 s 	; lucky balance
64a8 64a8 s 
64a8 64a8 s 	cycle
64a8 64a8 s 	start_cycle
64a8 64a8 s diff	defl	sampcyc-t($)
64a8 64a8 s 	assert	t($) == sampcyc
64a8 64a8 s 	sett	0
64a8 64a8 s 	endm
64a8 64a8 s 	samp_l
64a8 64a8 d 19
64a8 64a8 u 01 01
64a8 64a8 s 	add	hl,de
64a9 64a9 d 4c
64a9 64a9 u 01 01
64a9 64a9 s 	ld	c,h
64aa 64aa d 0a
64aa 64aa u 01 01
64aa 64aa s 	ld	a,(bc)
64ab 64ab d d3b9
64ab 64ab u 02 01
64ab 64ab s 	out	(dac_l),a
64ad 64ad s 	equval	dacp,%dn,$-1
64ad 64ad s dacp248	=	$-1
64ad 64ad s 	endm
64ad 64ad s 	dn++
64ad 64ad s 	endm
64ad 64ad s 	samp_r
64ad 64ad d d9
64ad 64ad u 01 01
64ad 64ad s 	exx
64ae 64ae d 19
64ae 64ae u 01 01
64ae 64ae s 	add	hl,de
64af 64af d 4c
64af 64af u 01 01
64af 64af s 	ld	c,h
64b0 64b0 d 0a
64b0 64b0 u 01 01
64b0 64b0 s 	ld	a,(bc)
64b1 64b1 d d3b5
64b1 64b1 u 02 01
64b1 64b1 s 	out	(dac_r),a
64b3 64b3 s 	equval	dacp,%dn,$-1
64b3 64b3 s dacp249	=	$-1
64b3 64b3 s 	endm
64b3 64b3 s 	dn++
64b3 64b3 d d9
64b3 64b3 u 01 01
64b3 64b3 s 	exx
64b4 64b4 s 	endm
64b4 64b4 s 	endm
64b4 64b4 s 
64b4 64b4 s    if -1 > 0
64b4 64b4 s 	ld	(ix),' '	; erase top of volume
64b4 64b4 s    else
64b4 64b4 d 1800
64b4 64b4 u 02 01
64b4 64b4 s 	jr	$+2
64b6 64b6 d f600
64b6 64b6 u 02 01
64b6 64b6 s 	or	a,0
64b8 64b8 s    endif
64b8 64b8 d ed53eb64
64b8 64b8 u 04 01
64b8 64b8 s 	ld	(?f0886),de
64bc 64bc s 	; waste 19
64bc 64bc d 1800
64bc 64bc u 02 01
64bc 64bc s 	jr	$+2
64be 64be d f600
64be 64be u 02 01
64be 64be s 	or	a,0
64c0 64c0 s 
64c0 64c0 s 	cycle
64c0 64c0 s 	start_cycle
64c0 64c0 s diff	defl	sampcyc-t($)
64c0 64c0 s 	assert	t($) == sampcyc
64c0 64c0 s 	sett	0
64c0 64c0 s 	endm
64c0 64c0 s 	samp_l
64c0 64c0 d 19
64c0 64c0 u 01 01
64c0 64c0 s 	add	hl,de
64c1 64c1 d 4c
64c1 64c1 u 01 01
64c1 64c1 s 	ld	c,h
64c2 64c2 d 0a
64c2 64c2 u 01 01
64c2 64c2 s 	ld	a,(bc)
64c3 64c3 d d3b9
64c3 64c3 u 02 01
64c3 64c3 s 	out	(dac_l),a
64c5 64c5 s 	equval	dacp,%dn,$-1
64c5 64c5 s dacp250	=	$-1
64c5 64c5 s 	endm
64c5 64c5 s 	dn++
64c5 64c5 s 	endm
64c5 64c5 s 	samp_r
64c5 64c5 d d9
64c5 64c5 u 01 01
64c5 64c5 s 	exx
64c6 64c6 d 19
64c6 64c6 u 01 01
64c6 64c6 s 	add	hl,de
64c7 64c7 d 4c
64c7 64c7 u 01 01
64c7 64c7 s 	ld	c,h
64c8 64c8 d 0a
64c8 64c8 u 01 01
64c8 64c8 s 	ld	a,(bc)
64c9 64c9 d d3b5
64c9 64c9 u 02 01
64c9 64c9 s 	out	(dac_r),a
64cb 64cb s 	equval	dacp,%dn,$-1
64cb 64cb s dacp251	=	$-1
64cb 64cb s 	endm
64cb 64cb s 	dn++
64cb 64cb d d9
64cb 64cb u 01 01
64cb 64cb s 	exx
64cc 64cc s 	endm
64cc 64cc s 	endm
64cc 64cc s 
64cc 64cc d dd2abe65
64cc 64cc u 04 01
64cc 64cc s 	ld	ix,(vl_m_r);
64d0 64d0 s 
64d0 64d0 d d9
64d0 64d0 u 01 01
64d0 64d0 s 	exx
64d1 64d1 d 78
64d1 64d1 u 01 01
64d1 64d1 s 	ld	a,b
64d2 64d2 d d6c0
64d2 64d2 u 02 01
64d2 64d2 s 	sub	high(silence)
64d4 64d4 d 323b65
64d4 64d4 u 03 01
64d4 64d4 s 	ld	(?h0886),a
64d7 64d7 d d9
64d7 64d7 u 01 01
64d7 64d7 s 	exx
64d8 64d8 s 	; waste 6
64d8 64d8 d 33
64d8 64d8 u 01 01
64d8 64d8 s 	inc	sp
64d9 64d9 s 
64d9 64d9 s 	cycle
64d9 64d9 s 	start_cycle
64d9 64d9 s diff	defl	sampcyc-t($)
64d9 64d9 s 	assert	t($) == sampcyc
64d9 64d9 s 	sett	0
64d9 64d9 s 	endm
64d9 64d9 s 	samp_l
64d9 64d9 d 19
64d9 64d9 u 01 01
64d9 64d9 s 	add	hl,de
64da 64da d 4c
64da 64da u 01 01
64da 64da s 	ld	c,h
64db 64db d 0a
64db 64db u 01 01
64db 64db s 	ld	a,(bc)
64dc 64dc d d3b9
64dc 64dc u 02 01
64dc 64dc s 	out	(dac_l),a
64de 64de s 	equval	dacp,%dn,$-1
64de 64de s dacp252	=	$-1
64de 64de s 	endm
64de 64de s 	dn++
64de 64de s 	endm
64de 64de s 	samp_r
64de 64de d d9
64de 64de u 01 01
64de 64de s 	exx
64df 64df d 19
64df 64df u 01 01
64df 64df s 	add	hl,de
64e0 64e0 d 4c
64e0 64e0 u 01 01
64e0 64e0 s 	ld	c,h
64e1 64e1 d 0a
64e1 64e1 u 01 01
64e1 64e1 s 	ld	a,(bc)
64e2 64e2 d d3b5
64e2 64e2 u 02 01
64e2 64e2 s 	out	(dac_r),a
64e4 64e4 s 	equval	dacp,%dn,$-1
64e4 64e4 s dacp253	=	$-1
64e4 64e4 s 	endm
64e4 64e4 s 	dn++
64e4 64e4 d d9
64e4 64e4 u 01 01
64e4 64e4 s 	exx
64e5 64e5 s 	endm
64e5 64e5 s 	endm
64e5 64e5 s 
64e5 64e5 d 11c0ff
64e5 64e5 u 03 01
64e5 64e5 s 	ld	de,64*-1
64e8 64e8 d dd19
64e8 64e8 u 02 01
64e8 64e8 s 	add	ix,de		; move meter
64ea 64ea d 110000
64ea 64ea u 03 01
64ea 64ea s 	ld	de,0
64eb 64eb s 	org	$-2
64eb 64eb d 0000
64eb 64eb u 02 03
64eb 64eb s ?f0886:	defw	0
64ed 64ed s    if -1 > 0
64ed 64ed s 	; waste 23
64ed 64ed s 	jp	$+3
64ed 64ed s 	nop
64ed 64ed s 	scf
64ed 64ed s 	ret	nc
64ed 64ed s    else
64ed 64ed d dd3600aa
64ed 64ed u 04 01
64ed 64ed s    	ld	(ix),meter_r	; add to top of meter
64f1 64f1 s 	; waste 4
64f1 64f1 d 00
64f1 64f1 u 01 01
64f1 64f1 s 	nop
64f2 64f2 s    endif
64f2 64f2 s 
64f2 64f2 s 	cycle
64f2 64f2 s 	start_cycle
64f2 64f2 s diff	defl	sampcyc-t($)
64f2 64f2 s 	assert	t($) == sampcyc
64f2 64f2 s 	sett	0
64f2 64f2 s 	endm
64f2 64f2 s 	samp_l
64f2 64f2 d 19
64f2 64f2 u 01 01
64f2 64f2 s 	add	hl,de
64f3 64f3 d 4c
64f3 64f3 u 01 01
64f3 64f3 s 	ld	c,h
64f4 64f4 d 0a
64f4 64f4 u 01 01
64f4 64f4 s 	ld	a,(bc)
64f5 64f5 d d3b9
64f5 64f5 u 02 01
64f5 64f5 s 	out	(dac_l),a
64f7 64f7 s 	equval	dacp,%dn,$-1
64f7 64f7 s dacp254	=	$-1
64f7 64f7 s 	endm
64f7 64f7 s 	dn++
64f7 64f7 s 	endm
64f7 64f7 s 	samp_r
64f7 64f7 d d9
64f7 64f7 u 01 01
64f7 64f7 s 	exx
64f8 64f8 d 19
64f8 64f8 u 01 01
64f8 64f8 s 	add	hl,de
64f9 64f9 d 4c
64f9 64f9 u 01 01
64f9 64f9 s 	ld	c,h
64fa 64fa d 0a
64fa 64fa u 01 01
64fa 64fa s 	ld	a,(bc)
64fb 64fb d d3b5
64fb 64fb u 02 01
64fb 64fb s 	out	(dac_r),a
64fd 64fd s 	equval	dacp,%dn,$-1
64fd 64fd s dacp255	=	$-1
64fd 64fd s 	endm
64fd 64fd s 	dn++
64fd 64fd d d9
64fd 64fd u 01 01
64fd 64fd s 	exx
64fe 64fe s 	endm
64fe 64fe s 	endm
64fe 64fe s 
64fe 64fe d dd22be65
64fe 64fe u 04 01
64fe 64fe s 	ld	(vl_m_r),ix	; save volume position
6502 6502 d 3a695d
6502 6502 u 03 01
6502 6502 s 	ld	a,(wf_r)
6505 6505 d e603
6505 6505 u 02 01
6505 6505 s 	and	3		; clear volume from waveform
6507 6507 d 322065
6507 6507 u 03 01
6507 6507 s 	ld	(?e0886),a
650a 650a s 	; waste 5
650a 650a d d8
650a 650a u 01 01
650a 650a s 	ret	c
650b 650b s 
650b 650b s 	cycle
650b 650b s 	start_cycle
650b 650b s diff	defl	sampcyc-t($)
650b 650b s 	assert	t($) == sampcyc
650b 650b s 	sett	0
650b 650b s 	endm
650b 650b s 	samp_l
650b 650b d 19
650b 650b u 01 01
650b 650b s 	add	hl,de
650c 650c d 4c
650c 650c u 01 01
650c 650c s 	ld	c,h
650d 650d d 0a
650d 650d u 01 01
650d 650d s 	ld	a,(bc)
650e 650e d d3b9
650e 650e u 02 01
650e 650e s 	out	(dac_l),a
6510 6510 s 	equval	dacp,%dn,$-1
6510 6510 s dacp256	=	$-1
6510 6510 s 	endm
6510 6510 s 	dn++
6510 6510 s 	endm
6510 6510 s 	samp_r
6510 6510 d d9
6510 6510 u 01 01
6510 6510 s 	exx
6511 6511 d 19
6511 6511 u 01 01
6511 6511 s 	add	hl,de
6512 6512 d 4c
6512 6512 u 01 01
6512 6512 s 	ld	c,h
6513 6513 d 0a
6513 6513 u 01 01
6513 6513 s 	ld	a,(bc)
6514 6514 d d3b5
6514 6514 u 02 01
6514 6514 s 	out	(dac_r),a
6516 6516 s 	equval	dacp,%dn,$-1
6516 6516 s dacp257	=	$-1
6516 6516 s 	endm
6516 6516 s 	dn++
6516 6516 d d9
6516 6516 u 01 01
6516 6516 s 	exx
6517 6517 s 	endm
6517 6517 s 	endm
6517 6517 s 
6517 6517 d 3ac165
6517 6517 u 03 01
6517 6517 s 	ld	a,(voltmp+1)	; previous volume bits
651a 651a s    if -1 > 0
651a 651a s    	inc	a		; caught up to moved meter
651a 651a s    else
651a 651a d 3d
651a 651a u 01 01
651a 651a s    	dec	a		; caught up to moved meter
651b 651b s    endif
651b 651b d 87
651b 651b u 01 01
651b 651b s 	add	a,a
651c 651c d 87
651c 651c u 01 01
651c 651c s 	add	a,a		; make way for waveform
651d 651d d ee40
651d 651d u 02 01
651d 651d s 	xor	(high(wavebnk)&$c0)^$c0	; magically fix up high bits
651f 651f d f600
651f 651f u 02 01
651f 651f s 	or	0		; add waveform back in
6520 6520 s 	org	$-1
6520 6520 d 00
6520 6520 u 01 03
6520 6520 s ?e0886:	defb	0
6521 6521 d 32695d
6521 6521 u 03 01
6521 6521 s 	ld	(wf_r),a
6524 6524 s 	; waste 6
6524 6524 d 33
6524 6524 u 01 01
6524 6524 s 	inc	sp
6525 6525 s 
6525 6525 s 	cycle
6525 6525 s 	start_cycle
6525 6525 s diff	defl	sampcyc-t($)
6525 6525 s 	assert	t($) == sampcyc
6525 6525 s 	sett	0
6525 6525 s 	endm
6525 6525 s 	samp_l
6525 6525 d 19
6525 6525 u 01 01
6525 6525 s 	add	hl,de
6526 6526 d 4c
6526 6526 u 01 01
6526 6526 s 	ld	c,h
6527 6527 d 0a
6527 6527 u 01 01
6527 6527 s 	ld	a,(bc)
6528 6528 d d3b9
6528 6528 u 02 01
6528 6528 s 	out	(dac_l),a
652a 652a s 	equval	dacp,%dn,$-1
652a 652a s dacp258	=	$-1
652a 652a s 	endm
652a 652a s 	dn++
652a 652a s 	endm
652a 652a s 	samp_r
652a 652a d d9
652a 652a u 01 01
652a 652a s 	exx
652b 652b d 19
652b 652b u 01 01
652b 652b s 	add	hl,de
652c 652c d 4c
652c 652c u 01 01
652c 652c s 	ld	c,h
652d 652d d 0a
652d 652d u 01 01
652d 652d s 	ld	a,(bc)
652e 652e d d3b5
652e 652e u 02 01
652e 652e s 	out	(dac_r),a
6530 6530 s 	equval	dacp,%dn,$-1
6530 6530 s dacp259	=	$-1
6530 6530 s 	endm
6530 6530 s 	dn++
6530 6530 d d9
6530 6530 u 01 01
6530 6530 s 	exx
6531 6531 s 	endm
6531 6531 s 	endm
6531 6531 s 
6531 6531 s 	; waste 4
6531 6531 d 00
6531 6531 u 01 01
6531 6531 s 	nop
6532 6532 s 
6532 6532 d 3a695d
6532 6532 u 03 01
6532 6532 s 	ld	a,(wf_r)
6535 6535 d e6fc
6535 6535 u 02 01
6535 6535 s 	and	~3		; drop waveform
6537 6537 d 32a15f
6537 6537 u 03 01
6537 6537 s 	ld	(wb_r),a
653a 653a s 
653a 653a d 3e00
653a 653a u 02 01
653a 653a s 	ld	a,0
653b 653b s 	org	$-1
653b 653b d 00
653b 653b u 01 03
653b 653b s ?h0886:	defb	0
653c 653c d b7
653c 653c u 01 01
653c 653c s 	or	a
653d 653d d ca5b65
653d 653d u 03 01
653d 653d s 	jp	z,?g0886
6540 6540 s 
6540 6540 s 	cycle
6540 6540 s 	start_cycle
6540 6540 s diff	defl	sampcyc-t($)
6540 6540 s 	assert	t($) == sampcyc
6540 6540 s 	sett	0
6540 6540 s 	endm
6540 6540 s 	samp_l
6540 6540 d 19
6540 6540 u 01 01
6540 6540 s 	add	hl,de
6541 6541 d 4c
6541 6541 u 01 01
6541 6541 s 	ld	c,h
6542 6542 d 0a
6542 6542 u 01 01
6542 6542 s 	ld	a,(bc)
6543 6543 d d3b9
6543 6543 u 02 01
6543 6543 s 	out	(dac_l),a
6545 6545 s 	equval	dacp,%dn,$-1
6545 6545 s dacp260	=	$-1
6545 6545 s 	endm
6545 6545 s 	dn++
6545 6545 s 	endm
6545 6545 s 	samp_r
6545 6545 d d9
6545 6545 u 01 01
6545 6545 s 	exx
6546 6546 d 19
6546 6546 u 01 01
6546 6546 s 	add	hl,de
6547 6547 d 4c
6547 6547 u 01 01
6547 6547 s 	ld	c,h
6548 6548 d 0a
6548 6548 u 01 01
6548 6548 s 	ld	a,(bc)
6549 6549 d d3b5
6549 6549 u 02 01
6549 6549 s 	out	(dac_r),a
654b 654b s 	equval	dacp,%dn,$-1
654b 654b s dacp261	=	$-1
654b 654b s 	endm
654b 654b s 	dn++
654b 654b d d9
654b 654b u 01 01
654b 654b s 	exx
654c 654c s 	endm
654c 654c s 	endm
654c 654c d 3a695d
654c 654c u 03 01
654c 654c s 	ld	a,(wf_r)
654f 654f d d9
654f 654f u 01 01
654f 654f s 	exx
6550 6550 d 47
6550 6550 u 01 01
6550 6550 s 	ld	b,a
6551 6551 d d9
6551 6551 u 01 01
6551 6551 s 	exx
6552 6552 s 	; waste 33
6552 6552 d 3a0000
6552 6552 u 03 01
6552 6552 s 	ld	a,(0)
6555 6555 d c35865
6555 6555 u 03 01
6555 6555 s 	jp	$+3
6558 6558 d c35b65
6558 6558 u 03 01
6558 6558 s 	jp	$+3
655b 655b s 
655b 655b s ?g0886:
655b 655b s 	cycle
655b 655b s 	start_cycle
655b 655b s diff	defl	sampcyc-t($)
655b 655b s 	assert	t($) == sampcyc
655b 655b s 	sett	0
655b 655b s 	endm
655b 655b s 	samp_l
655b 655b d 19
655b 655b u 01 01
655b 655b s 	add	hl,de
655c 655c d 4c
655c 655c u 01 01
655c 655c s 	ld	c,h
655d 655d d 0a
655d 655d u 01 01
655d 655d s 	ld	a,(bc)
655e 655e d d3b9
655e 655e u 02 01
655e 655e s 	out	(dac_l),a
6560 6560 s 	equval	dacp,%dn,$-1
6560 6560 s dacp262	=	$-1
6560 6560 s 	endm
6560 6560 s 	dn++
6560 6560 s 	endm
6560 6560 s 	samp_r
6560 6560 d d9
6560 6560 u 01 01
6560 6560 s 	exx
6561 6561 d 19
6561 6561 u 01 01
6561 6561 s 	add	hl,de
6562 6562 d 4c
6562 6562 u 01 01
6562 6562 s 	ld	c,h
6563 6563 d 0a
6563 6563 u 01 01
6563 6563 s 	ld	a,(bc)
6564 6564 d d3b5
6564 6564 u 02 01
6564 6564 s 	out	(dac_r),a
6566 6566 s 	equval	dacp,%dn,$-1
6566 6566 s dacp263	=	$-1
6566 6566 s 	endm
6566 6566 s 	dn++
6566 6566 d d9
6566 6566 u 01 01
6566 6566 s 	exx
6567 6567 s 	endm
6567 6567 s 	endm
6567 6567 s 
6567 6567 d fd36ff65
6567 6567 u 04 01
6567 6567 s 	ld	(iy-1),high(vol_up_up_r)
656b 656b d fd36fe8d
656b 656b u 04 01
656b 656b s 	ld	(iy-2),low(vol_up_up_r)
656f 656f s 	; waste 20
656f 656f d c37265
656f 656f u 03 01
656f 656f s 	jp	$+3
6572 6572 d c37565
6572 6572 u 03 01
6572 6572 s 	jp	$+3
6575 6575 s 
6575 6575 s 	cycle
6575 6575 s 	start_cycle
6575 6575 s diff	defl	sampcyc-t($)
6575 6575 s 	assert	t($) == sampcyc
6575 6575 s 	sett	0
6575 6575 s 	endm
6575 6575 s 	samp_l
6575 6575 d 19
6575 6575 u 01 01
6575 6575 s 	add	hl,de
6576 6576 d 4c
6576 6576 u 01 01
6576 6576 s 	ld	c,h
6577 6577 d 0a
6577 6577 u 01 01
6577 6577 s 	ld	a,(bc)
6578 6578 d d3b9
6578 6578 u 02 01
6578 6578 s 	out	(dac_l),a
657a 657a s 	equval	dacp,%dn,$-1
657a 657a s dacp264	=	$-1
657a 657a s 	endm
657a 657a s 	dn++
657a 657a s 	endm
657a 657a s 	samp_r
657a 657a d d9
657a 657a u 01 01
657a 657a s 	exx
657b 657b d 19
657b 657b u 01 01
657b 657b s 	add	hl,de
657c 657c d 4c
657c 657c u 01 01
657c 657c s 	ld	c,h
657d 657d d 0a
657d 657d u 01 01
657d 657d s 	ld	a,(bc)
657e 657e d d3b5
657e 657e u 02 01
657e 657e s 	out	(dac_r),a
6580 6580 s 	equval	dacp,%dn,$-1
6580 6580 s dacp265	=	$-1
6580 6580 s 	endm
6580 6580 s 	dn++
6580 6580 d d9
6580 6580 u 01 01
6580 6580 s 	exx
6581 6581 s 	endm
6581 6581 s 	endm
6581 6581 s 
6581 6581 s 	; waste 31
6581 6581 d 1800
6581 6581 u 02 01
6581 6581 s 	jr	$+2
6583 6583 d 1800
6583 6583 u 02 01
6583 6583 s 	jr	$+2
6585 6585 d f600
6585 6585 u 02 01
6585 6585 s 	or	a,0
6587 6587 s 
6587 6587 d fd36fdca
6587 6587 u 04 01
6587 6587 s 	ld	(iy-3),jp_z
658b 658b d fde9
658b 658b u 02 01
658b 658b s 	jp	(iy)
658d 658d s 
658d 658d s 	endm
658d 658d s 
658d 658d s vol_up_up_r:
658d 658d s 	kreset	vol_up_down_r,exx
658d 658d s 	cycle
658d 658d s 	start_cycle
658d 658d s diff	defl	sampcyc-t($)
658d 658d s 	assert	t($) == sampcyc
658d 658d s 	sett	0
658d 658d s 	endm
658d 658d s 	samp_l
658d 658d d 19
658d 658d u 01 01
658d 658d s 	add	hl,de
658e 658e d 4c
658e 658e u 01 01
658e 658e s 	ld	c,h
658f 658f d 0a
658f 658f u 01 01
658f 658f s 	ld	a,(bc)
6590 6590 d d3b9
6590 6590 u 02 01
6590 6590 s 	out	(dac_l),a
6592 6592 s 	equval	dacp,%dn,$-1
6592 6592 s dacp266	=	$-1
6592 6592 s 	endm
6592 6592 s 	dn++
6592 6592 s 	endm
6592 6592 s 	samp_r
6592 6592 d d9
6592 6592 u 01 01
6592 6592 s 	exx
6593 6593 d 19
6593 6593 u 01 01
6593 6593 s 	add	hl,de
6594 6594 d 4c
6594 6594 u 01 01
6594 6594 s 	ld	c,h
6595 6595 d 0a
6595 6595 u 01 01
6595 6595 s 	ld	a,(bc)
6596 6596 d d3b5
6596 6596 u 02 01
6596 6596 s 	out	(dac_r),a
6598 6598 s 	equval	dacp,%dn,$-1
6598 6598 s dacp267	=	$-1
6598 6598 s 	endm
6598 6598 s 	dn++
6598 6598 d d9
6598 6598 u 01 01
6598 6598 s 	exx
6599 6599 s 	endm
6599 6599 s 	endm
6599 6599 s 
6599 6599 d f1
6599 6599 u 01 01
6599 6599 s 	pop	af
659a 659a d fde1
659a 659a u 02 01
659a 659a s 	pop	iy
659c 659c d fd36fdc2
659c 659c u 04 01
659c 659c s 	ld	(iy-3),jp_nz
65a0 65a0 s 	; waste 15
65a0 65a0 d 00
65a0 65a0 u 01 01
65a0 65a0 s 	nop
65a1 65a1 d 00
65a1 65a1 u 01 01
65a1 65a1 s 	nop
65a2 65a2 d 3e00
65a2 65a2 u 02 01
65a2 65a2 s 	ld	a,0
65a4 65a4 s 
65a4 65a4 s 	cycle
65a4 65a4 s 	start_cycle
65a4 65a4 s diff	defl	sampcyc-t($)
65a4 65a4 s 	assert	t($) == sampcyc
65a4 65a4 s 	sett	0
65a4 65a4 s 	endm
65a4 65a4 s 	samp_l
65a4 65a4 d 19
65a4 65a4 u 01 01
65a4 65a4 s 	add	hl,de
65a5 65a5 d 4c
65a5 65a5 u 01 01
65a5 65a5 s 	ld	c,h
65a6 65a6 d 0a
65a6 65a6 u 01 01
65a6 65a6 s 	ld	a,(bc)
65a7 65a7 d d3b9
65a7 65a7 u 02 01
65a7 65a7 s 	out	(dac_l),a
65a9 65a9 s 	equval	dacp,%dn,$-1
65a9 65a9 s dacp268	=	$-1
65a9 65a9 s 	endm
65a9 65a9 s 	dn++
65a9 65a9 s 	endm
65a9 65a9 s 	samp_r
65a9 65a9 d d9
65a9 65a9 u 01 01
65a9 65a9 s 	exx
65aa 65aa d 19
65aa 65aa u 01 01
65aa 65aa s 	add	hl,de
65ab 65ab d 4c
65ab 65ab u 01 01
65ab 65ab s 	ld	c,h
65ac 65ac d 0a
65ac 65ac u 01 01
65ac 65ac s 	ld	a,(bc)
65ad 65ad d d3b5
65ad 65ad u 02 01
65ad 65ad s 	out	(dac_r),a
65af 65af s 	equval	dacp,%dn,$-1
65af 65af s dacp269	=	$-1
65af 65af s 	endm
65af 65af s 	dn++
65af 65af d d9
65af 65af u 01 01
65af 65af s 	exx
65b0 65b0 s 	endm
65b0 65b0 s 	endm
65b0 65b0 s 
65b0 65b0 d fd36fe63
65b0 65b0 u 04 01
65b0 65b0 s 	ld	(iy-2),low(vol_up_down_r)
65b4 65b4 d fd36ff64
65b4 65b4 u 04 01
65b4 65b4 s 	ld	(iy-1),high(vol_up_down_r)
65b8 65b8 s 	; waste 12
65b8 65b8 d 1800
65b8 65b8 u 02 01
65b8 65b8 s 	jr	$+2
65ba 65ba d fde9
65ba 65ba u 02 01
65ba 65ba s 	jp	(iy)
65bc 65bc s 
65bc 65bc s 	endm
65bc 65bc s 
65bc 65bc s 	start_cycle		; just to check balance
65bc 65bc s diff	defl	sampcyc-t($)
65bc 65bc s 	assert	t($) == sampcyc
65bc 65bc s 	sett	0
65bc 65bc s 	endm
65bc 65bc s 
65bc 65bc d 003c
65bc 65bc u 02 02
65bc 65bc s vl_m_l:	defw	$3c00
65be 65be d 3f3c
65be 65be u 02 02
65be 65be s vl_m_r:	defw	$3c00+63
65c0 65c0 d 0000
65c0 65c0 u 02 02
65c0 65c0 s voltmp:	defw	0
65c2 65c2 s 
65c2 65c2 s ; Divide sample block at HL by 2 and put into DE.
65c2 65c2 d 010400
65c2 65c2 u 03 01
65c2 65c2 s div2:	ld	bc,4
65c5 65c5 d 7e
65c5 65c5 u 01 01
65c5 65c5 s d2lp:	ld	a,(hl)
65c6 65c6 d cb2f
65c6 65c6 u 02 01
65c6 65c6 s 	sra	a
65c8 65c8 d 12
65c8 65c8 u 01 01
65c8 65c8 s 	ld	(de),a
65c9 65c9 d 23
65c9 65c9 u 01 01
65c9 65c9 s 	inc	hl
65ca 65ca d 13
65ca 65ca u 01 01
65ca 65ca s 	inc	de
65cb 65cb d 10f8
65cb 65cb u 02 01
65cb 65cb s 	djnz	d2lp
65cd 65cd d 0d
65cd 65cd u 01 01
65cd 65cd s 	dec	c
65ce 65ce d 20f5
65ce 65ce u 02 01
65ce 65ce s 	jr	nz,d2lp
65d0 65d0 d c9
65d0 65d0 u 01 01
65d0 65d0 s 	ret
65d1 65d1 s 
65d1 65d1 s ; Add sample block at HL and DE and put into IX.
65d1 65d1 d 010400
65d1 65d1 u 03 01
65d1 65d1 s sum2:	ld	bc,4
65d4 65d4 d 1a
65d4 65d4 u 01 01
65d4 65d4 s s2lp:	ld	a,(de)
65d5 65d5 d 86
65d5 65d5 u 01 01
65d5 65d5 s 	add	a,(hl)
65d6 65d6 d dd7700
65d6 65d6 u 03 01
65d6 65d6 s 	ld	(ix),a
65d9 65d9 d 13
65d9 65d9 u 01 01
65d9 65d9 s 	inc	de
65da 65da d 23
65da 65da u 01 01
65da 65da s 	inc	hl
65db 65db d dd23
65db 65db u 02 01
65db 65db s 	inc	ix
65dd 65dd d 10f5
65dd 65dd u 02 01
65dd 65dd s 	djnz	s2lp
65df 65df d 0d
65df 65df u 01 01
65df 65df s 	dec	c
65e0 65e0 d 20f2
65e0 65e0 u 02 01
65e0 65e0 s 	jr	nz,s2lp
65e2 65e2 d c9
65e2 65e2 u 01 01
65e2 65e2 s 	ret
65e3 65e3 s 
65e3 65e3 s    endif
65e3 65e3 s 
65e3 65e3 s param_tab:
65e3 65e3 s 	cpu_hz = 1774080
65e3 65e3 s 	parkeys	0
65e3 65e3 s 	calc_steps
65e3 65e3 s 	octbase = 110 * 256
65e3 65e3 s 	hz = octbase
65e3 65e3 s 	nt = 0
65e3 65e3 s 	rept	32
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_0	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_1	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_2	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_3	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_4	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_5	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_6	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_7	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_8	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_9	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_10	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_11	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_12	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_13	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_14	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_15	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_16	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_17	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_18	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_19	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_20	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_21	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_22	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_23	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_24	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_25	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_26	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_27	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_28	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_29	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_30	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	; Hz of entire 256 byte buffer at step 1 is: 
65e3 65e3 s 	;	cpu_hz / sampcyc / 256
65e3 65e3 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
65e3 65e3 s 	; So target Hz over that is our step.
65e3 65e3 s 	; But we want 8.8 fixed point value.
65e3 65e3 s 
65e3 65e3 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
65e3 65e3 s step_31	=	hz/(cpu_hz/sampcyc/256)
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	hz *= 271 ; twelfth root 2 * 256
65e3 65e3 s 	hz /= 256
65e3 65e3 s 	nt++
65e3 65e3 s 	if nt % 12 == 0
65e3 65e3 s 		octbase *= 2
65e3 65e3 s 		hz = octbase
65e3 65e3 s 	endif
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s ; Define these sensibly
65e3 65e3 s 
65e3 65e3 s st_c0	=	step_0
65e3 65e3 s st_c0@	=	step_1
65e3 65e3 s st_d0	=	step_2
65e3 65e3 s st_d0@	=	step_3
65e3 65e3 s st_e0	=	step_4
65e3 65e3 s st_f0	=	step_5
65e3 65e3 s st_f0@	=	step_6
65e3 65e3 s st_g0	=	step_7
65e3 65e3 s st_g0@	=	step_8
65e3 65e3 s st_a0	=	step_9
65e3 65e3 s st_a0@	=	step_10
65e3 65e3 s st_b0	=	step_11
65e3 65e3 s 
65e3 65e3 s st_c1	=	step_12
65e3 65e3 s st_c1@	=	step_13
65e3 65e3 s st_d1	=	step_14
65e3 65e3 s st_d1@	=	step_15
65e3 65e3 s st_e1	=	step_16
65e3 65e3 s st_f1	=	step_17
65e3 65e3 s st_f1@	=	step_18
65e3 65e3 s st_g1	=	step_19
65e3 65e3 s st_g1@	=	step_20
65e3 65e3 s st_a1	=	step_21
65e3 65e3 s st_a1@	=	step_22
65e3 65e3 s st_b1	=	step_23
65e3 65e3 s 
65e3 65e3 s st_c2	=	step_24
65e3 65e3 s st_c2@	=	step_25
65e3 65e3 s st_d2	=	step_26
65e3 65e3 s st_d2@	=	step_27
65e3 65e3 s st_e2	=	step_28
65e3 65e3 s st_f2	=	step_29
65e3 65e3 s 
65e3 65e3 s st_null	=	0
65e3 65e3 s 
65e3 65e3 s 	endm
65e3 65e3 s 
65e3 65e3 s 	parkey = 0
65e3 65e3 s 
65e3 65e3 s 	key_l	25,k_Z,c0
65e3 65e3 s 	key	25,k_Z,c0,down_l
65e3 65e3 s   if parkey == 0
65e3 65e3 s param_25:
65e3 65e3 s   endif
65e3 65e3 s 
65e3 65e3 s   if parkey < 2
65e3 65e3 d 1d02
65e3 65e3 u 02 02
65e3 65e3 s 	defw	st_c0
65e5 65e5 s   endif
65e5 65e5 s 
65e5 65e5 s   if parkey == 0
65e5 65e5 d e257
65e5 65e5 u 02 02
65e5 65e5 s 	defw	ret_25
65e7 65e7 d 19ff
65e7 65e7 u 02 02
65e7 65e7 s 	defw	$ff00+25
65e9 65e9 s   endif
65e9 65e9 s 
65e9 65e9 s   if parkey == 2
65e9 65e9 s 	cycle
65e9 65e9 s 	ld	sp,param_25
65e9 65e9 s 	; Waste 7+4
65e9 65e9 s 	nop
65e9 65e9 s 	ld	a,0
65e9 65e9 s 	ld	a,0		; waste we can eliminate?
65e9 65e9 s 	ld	a,(k_Z >> 8)
65e9 65e9 s 	and	k_Z % $100
65e9 65e9 s 	jp	nz,down_l
65e9 65e9 s ret_25:
65e9 65e9 s   endif
65e9 65e9 s 	endm
65e9 65e9 s 	endm
65e9 65e9 s 	key_l	18,k_S,c0@
65e9 65e9 s 	key	18,k_S,c0@,down_l
65e9 65e9 s   if parkey == 0
65e9 65e9 s param_18:
65e9 65e9 s   endif
65e9 65e9 s 
65e9 65e9 s   if parkey < 2
65e9 65e9 d 3d02
65e9 65e9 u 02 02
65e9 65e9 s 	defw	st_c0@
65eb 65eb s   endif
65eb 65eb s 
65eb 65eb s   if parkey == 0
65eb 65eb d fe57
65eb 65eb u 02 02
65eb 65eb s 	defw	ret_18
65ed 65ed d 12ff
65ed 65ed u 02 02
65ed 65ed s 	defw	$ff00+18
65ef 65ef s   endif
65ef 65ef s 
65ef 65ef s   if parkey == 2
65ef 65ef s 	cycle
65ef 65ef s 	ld	sp,param_18
65ef 65ef s 	; Waste 7+4
65ef 65ef s 	nop
65ef 65ef s 	ld	a,0
65ef 65ef s 	ld	a,0		; waste we can eliminate?
65ef 65ef s 	ld	a,(k_S >> 8)
65ef 65ef s 	and	k_S % $100
65ef 65ef s 	jp	nz,down_l
65ef 65ef s ret_18:
65ef 65ef s   endif
65ef 65ef s 	endm
65ef 65ef s 	endm
65ef 65ef s 	key_l	26,k_X,d0
65ef 65ef s 	key	26,k_X,d0,down_l
65ef 65ef s   if parkey == 0
65ef 65ef s param_26:
65ef 65ef s   endif
65ef 65ef s 
65ef 65ef s   if parkey < 2
65ef 65ef d 5e02
65ef 65ef u 02 02
65ef 65ef s 	defw	st_d0
65f1 65f1 s   endif
65f1 65f1 s 
65f1 65f1 s   if parkey == 0
65f1 65f1 d 1a58
65f1 65f1 u 02 02
65f1 65f1 s 	defw	ret_26
65f3 65f3 d 1aff
65f3 65f3 u 02 02
65f3 65f3 s 	defw	$ff00+26
65f5 65f5 s   endif
65f5 65f5 s 
65f5 65f5 s   if parkey == 2
65f5 65f5 s 	cycle
65f5 65f5 s 	ld	sp,param_26
65f5 65f5 s 	; Waste 7+4
65f5 65f5 s 	nop
65f5 65f5 s 	ld	a,0
65f5 65f5 s 	ld	a,0		; waste we can eliminate?
65f5 65f5 s 	ld	a,(k_X >> 8)
65f5 65f5 s 	and	k_X % $100
65f5 65f5 s 	jp	nz,down_l
65f5 65f5 s ret_26:
65f5 65f5 s   endif
65f5 65f5 s 	endm
65f5 65f5 s 	endm
65f5 65f5 s 	key_l	19,k_D,d0@
65f5 65f5 s 	key	19,k_D,d0@,down_l
65f5 65f5 s   if parkey == 0
65f5 65f5 s param_19:
65f5 65f5 s   endif
65f5 65f5 s 
65f5 65f5 s   if parkey < 2
65f5 65f5 d 8202
65f5 65f5 u 02 02
65f5 65f5 s 	defw	st_d0@
65f7 65f7 s   endif
65f7 65f7 s 
65f7 65f7 s   if parkey == 0
65f7 65f7 d 3658
65f7 65f7 u 02 02
65f7 65f7 s 	defw	ret_19
65f9 65f9 d 13ff
65f9 65f9 u 02 02
65f9 65f9 s 	defw	$ff00+19
65fb 65fb s   endif
65fb 65fb s 
65fb 65fb s   if parkey == 2
65fb 65fb s 	cycle
65fb 65fb s 	ld	sp,param_19
65fb 65fb s 	; Waste 7+4
65fb 65fb s 	nop
65fb 65fb s 	ld	a,0
65fb 65fb s 	ld	a,0		; waste we can eliminate?
65fb 65fb s 	ld	a,(k_D >> 8)
65fb 65fb s 	and	k_D % $100
65fb 65fb s 	jp	nz,down_l
65fb 65fb s ret_19:
65fb 65fb s   endif
65fb 65fb s 	endm
65fb 65fb s 	endm
65fb 65fb s 	key_l	27,k_C,e0
65fb 65fb s 	key	27,k_C,e0,down_l
65fb 65fb s   if parkey == 0
65fb 65fb s param_27:
65fb 65fb s   endif
65fb 65fb s 
65fb 65fb s   if parkey < 2
65fb 65fb d a802
65fb 65fb u 02 02
65fb 65fb s 	defw	st_e0
65fd 65fd s   endif
65fd 65fd s 
65fd 65fd s   if parkey == 0
65fd 65fd d 5258
65fd 65fd u 02 02
65fd 65fd s 	defw	ret_27
65ff 65ff d 1bff
65ff 65ff u 02 02
65ff 65ff s 	defw	$ff00+27
6601 6601 s   endif
6601 6601 s 
6601 6601 s   if parkey == 2
6601 6601 s 	cycle
6601 6601 s 	ld	sp,param_27
6601 6601 s 	; Waste 7+4
6601 6601 s 	nop
6601 6601 s 	ld	a,0
6601 6601 s 	ld	a,0		; waste we can eliminate?
6601 6601 s 	ld	a,(k_C >> 8)
6601 6601 s 	and	k_C % $100
6601 6601 s 	jp	nz,down_l
6601 6601 s ret_27:
6601 6601 s   endif
6601 6601 s 	endm
6601 6601 s 	endm
6601 6601 s 	key_l	28,k_V,f0
6601 6601 s 	key	28,k_V,f0,down_l
6601 6601 s   if parkey == 0
6601 6601 s param_28:
6601 6601 s   endif
6601 6601 s 
6601 6601 s   if parkey < 2
6601 6601 d cf02
6601 6601 u 02 02
6601 6601 s 	defw	st_f0
6603 6603 s   endif
6603 6603 s 
6603 6603 s   if parkey == 0
6603 6603 d 6e58
6603 6603 u 02 02
6603 6603 s 	defw	ret_28
6605 6605 d 1cff
6605 6605 u 02 02
6605 6605 s 	defw	$ff00+28
6607 6607 s   endif
6607 6607 s 
6607 6607 s   if parkey == 2
6607 6607 s 	cycle
6607 6607 s 	ld	sp,param_28
6607 6607 s 	; Waste 7+4
6607 6607 s 	nop
6607 6607 s 	ld	a,0
6607 6607 s 	ld	a,0		; waste we can eliminate?
6607 6607 s 	ld	a,(k_V >> 8)
6607 6607 s 	and	k_V % $100
6607 6607 s 	jp	nz,down_l
6607 6607 s ret_28:
6607 6607 s   endif
6607 6607 s 	endm
6607 6607 s 	endm
6607 6607 s 	key_l	20,k_G,f0@
6607 6607 s 	key	20,k_G,f0@,down_l
6607 6607 s   if parkey == 0
6607 6607 s param_20:
6607 6607 s   endif
6607 6607 s 
6607 6607 s   if parkey < 2
6607 6607 d fa02
6607 6607 u 02 02
6607 6607 s 	defw	st_f0@
6609 6609 s   endif
6609 6609 s 
6609 6609 s   if parkey == 0
6609 6609 d 8a58
6609 6609 u 02 02
6609 6609 s 	defw	ret_20
660b 660b d 14ff
660b 660b u 02 02
660b 660b s 	defw	$ff00+20
660d 660d s   endif
660d 660d s 
660d 660d s   if parkey == 2
660d 660d s 	cycle
660d 660d s 	ld	sp,param_20
660d 660d s 	; Waste 7+4
660d 660d s 	nop
660d 660d s 	ld	a,0
660d 660d s 	ld	a,0		; waste we can eliminate?
660d 660d s 	ld	a,(k_G >> 8)
660d 660d s 	and	k_G % $100
660d 660d s 	jp	nz,down_l
660d 660d s ret_20:
660d 660d s   endif
660d 660d s 	endm
660d 660d s 	endm
660d 660d s 	key_l	29,k_B,g0
660d 660d s 	key	29,k_B,g0,down_l
660d 660d s   if parkey == 0
660d 660d s param_29:
660d 660d s   endif
660d 660d s 
660d 660d s   if parkey < 2
660d 660d d 2603
660d 660d u 02 02
660d 660d s 	defw	st_g0
660f 660f s   endif
660f 660f s 
660f 660f s   if parkey == 0
660f 660f d a658
660f 660f u 02 02
660f 660f s 	defw	ret_29
6611 6611 d 1dff
6611 6611 u 02 02
6611 6611 s 	defw	$ff00+29
6613 6613 s   endif
6613 6613 s 
6613 6613 s   if parkey == 2
6613 6613 s 	cycle
6613 6613 s 	ld	sp,param_29
6613 6613 s 	; Waste 7+4
6613 6613 s 	nop
6613 6613 s 	ld	a,0
6613 6613 s 	ld	a,0		; waste we can eliminate?
6613 6613 s 	ld	a,(k_B >> 8)
6613 6613 s 	and	k_B % $100
6613 6613 s 	jp	nz,down_l
6613 6613 s ret_29:
6613 6613 s   endif
6613 6613 s 	endm
6613 6613 s 	endm
6613 6613 s 	key_l	21,k_H,g0@
6613 6613 s 	key	21,k_H,g0@,down_l
6613 6613 s   if parkey == 0
6613 6613 s param_21:
6613 6613 s   endif
6613 6613 s 
6613 6613 s   if parkey < 2
6613 6613 d 5503
6613 6613 u 02 02
6613 6613 s 	defw	st_g0@
6615 6615 s   endif
6615 6615 s 
6615 6615 s   if parkey == 0
6615 6615 d c258
6615 6615 u 02 02
6615 6615 s 	defw	ret_21
6617 6617 d 15ff
6617 6617 u 02 02
6617 6617 s 	defw	$ff00+21
6619 6619 s   endif
6619 6619 s 
6619 6619 s   if parkey == 2
6619 6619 s 	cycle
6619 6619 s 	ld	sp,param_21
6619 6619 s 	; Waste 7+4
6619 6619 s 	nop
6619 6619 s 	ld	a,0
6619 6619 s 	ld	a,0		; waste we can eliminate?
6619 6619 s 	ld	a,(k_H >> 8)
6619 6619 s 	and	k_H % $100
6619 6619 s 	jp	nz,down_l
6619 6619 s ret_21:
6619 6619 s   endif
6619 6619 s 	endm
6619 6619 s 	endm
6619 6619 s 	key_l	30,k_N,a0
6619 6619 s 	key	30,k_N,a0,down_l
6619 6619 s   if parkey == 0
6619 6619 s param_30:
6619 6619 s   endif
6619 6619 s 
6619 6619 s   if parkey < 2
6619 6619 d 8703
6619 6619 u 02 02
6619 6619 s 	defw	st_a0
661b 661b s   endif
661b 661b s 
661b 661b s   if parkey == 0
661b 661b d de58
661b 661b u 02 02
661b 661b s 	defw	ret_30
661d 661d d 1eff
661d 661d u 02 02
661d 661d s 	defw	$ff00+30
661f 661f s   endif
661f 661f s 
661f 661f s   if parkey == 2
661f 661f s 	cycle
661f 661f s 	ld	sp,param_30
661f 661f s 	; Waste 7+4
661f 661f s 	nop
661f 661f s 	ld	a,0
661f 661f s 	ld	a,0		; waste we can eliminate?
661f 661f s 	ld	a,(k_N >> 8)
661f 661f s 	and	k_N % $100
661f 661f s 	jp	nz,down_l
661f 661f s ret_30:
661f 661f s   endif
661f 661f s 	endm
661f 661f s 	endm
661f 661f s 	key_l	22,k_J,a0@
661f 661f s 	key	22,k_J,a0@,down_l
661f 661f s   if parkey == 0
661f 661f s param_22:
661f 661f s   endif
661f 661f s 
661f 661f s   if parkey < 2
661f 661f d bc03
661f 661f u 02 02
661f 661f s 	defw	st_a0@
6621 6621 s   endif
6621 6621 s 
6621 6621 s   if parkey == 0
6621 6621 d fa58
6621 6621 u 02 02
6621 6621 s 	defw	ret_22
6623 6623 d 16ff
6623 6623 u 02 02
6623 6623 s 	defw	$ff00+22
6625 6625 s   endif
6625 6625 s 
6625 6625 s   if parkey == 2
6625 6625 s 	cycle
6625 6625 s 	ld	sp,param_22
6625 6625 s 	; Waste 7+4
6625 6625 s 	nop
6625 6625 s 	ld	a,0
6625 6625 s 	ld	a,0		; waste we can eliminate?
6625 6625 s 	ld	a,(k_J >> 8)
6625 6625 s 	and	k_J % $100
6625 6625 s 	jp	nz,down_l
6625 6625 s ret_22:
6625 6625 s   endif
6625 6625 s 	endm
6625 6625 s 	endm
6625 6625 s 	key_l	31,k_M,b0
6625 6625 s 	key	31,k_M,b0,down_l
6625 6625 s   if parkey == 0
6625 6625 s param_31:
6625 6625 s   endif
6625 6625 s 
6625 6625 s   if parkey < 2
6625 6625 d f403
6625 6625 u 02 02
6625 6625 s 	defw	st_b0
6627 6627 s   endif
6627 6627 s 
6627 6627 s   if parkey == 0
6627 6627 d 1659
6627 6627 u 02 02
6627 6627 s 	defw	ret_31
6629 6629 d 1fff
6629 6629 u 02 02
6629 6629 s 	defw	$ff00+31
662b 662b s   endif
662b 662b s 
662b 662b s   if parkey == 2
662b 662b s 	cycle
662b 662b s 	ld	sp,param_31
662b 662b s 	; Waste 7+4
662b 662b s 	nop
662b 662b s 	ld	a,0
662b 662b s 	ld	a,0		; waste we can eliminate?
662b 662b s 	ld	a,(k_M >> 8)
662b 662b s 	and	k_M % $100
662b 662b s 	jp	nz,down_l
662b 662b s ret_31:
662b 662b s   endif
662b 662b s 	endm
662b 662b s 	endm
662b 662b s 	key_l	32,k_comma,c1
662b 662b s 	key	32,k_comma,c1,down_l
662b 662b s   if parkey == 0
662b 662b s param_32:
662b 662b s   endif
662b 662b s 
662b 662b s   if parkey < 2
662b 662b d 3b04
662b 662b u 02 02
662b 662b s 	defw	st_c1
662d 662d s   endif
662d 662d s 
662d 662d s   if parkey == 0
662d 662d d 3259
662d 662d u 02 02
662d 662d s 	defw	ret_32
662f 662f d 20ff
662f 662f u 02 02
662f 662f s 	defw	$ff00+32
6631 6631 s   endif
6631 6631 s 
6631 6631 s   if parkey == 2
6631 6631 s 	cycle
6631 6631 s 	ld	sp,param_32
6631 6631 s 	; Waste 7+4
6631 6631 s 	nop
6631 6631 s 	ld	a,0
6631 6631 s 	ld	a,0		; waste we can eliminate?
6631 6631 s 	ld	a,(k_comma >> 8)
6631 6631 s 	and	k_comma % $100
6631 6631 s 	jp	nz,down_l
6631 6631 s ret_32:
6631 6631 s   endif
6631 6631 s 	endm
6631 6631 s 	endm
6631 6631 s 	key_l	23,k_L,c1@
6631 6631 s 	key	23,k_L,c1@,down_l
6631 6631 s   if parkey == 0
6631 6631 s param_23:
6631 6631 s   endif
6631 6631 s 
6631 6631 s   if parkey < 2
6631 6631 d 7a04
6631 6631 u 02 02
6631 6631 s 	defw	st_c1@
6633 6633 s   endif
6633 6633 s 
6633 6633 s   if parkey == 0
6633 6633 d 4e59
6633 6633 u 02 02
6633 6633 s 	defw	ret_23
6635 6635 d 17ff
6635 6635 u 02 02
6635 6635 s 	defw	$ff00+23
6637 6637 s   endif
6637 6637 s 
6637 6637 s   if parkey == 2
6637 6637 s 	cycle
6637 6637 s 	ld	sp,param_23
6637 6637 s 	; Waste 7+4
6637 6637 s 	nop
6637 6637 s 	ld	a,0
6637 6637 s 	ld	a,0		; waste we can eliminate?
6637 6637 s 	ld	a,(k_L >> 8)
6637 6637 s 	and	k_L % $100
6637 6637 s 	jp	nz,down_l
6637 6637 s ret_23:
6637 6637 s   endif
6637 6637 s 	endm
6637 6637 s 	endm
6637 6637 s 	key_l	33,k_dot,d1
6637 6637 s 	key	33,k_dot,d1,down_l
6637 6637 s   if parkey == 0
6637 6637 s param_33:
6637 6637 s   endif
6637 6637 s 
6637 6637 s   if parkey < 2
6637 6637 d bd04
6637 6637 u 02 02
6637 6637 s 	defw	st_d1
6639 6639 s   endif
6639 6639 s 
6639 6639 s   if parkey == 0
6639 6639 d 6a59
6639 6639 u 02 02
6639 6639 s 	defw	ret_33
663b 663b d 21ff
663b 663b u 02 02
663b 663b s 	defw	$ff00+33
663d 663d s   endif
663d 663d s 
663d 663d s   if parkey == 2
663d 663d s 	cycle
663d 663d s 	ld	sp,param_33
663d 663d s 	; Waste 7+4
663d 663d s 	nop
663d 663d s 	ld	a,0
663d 663d s 	ld	a,0		; waste we can eliminate?
663d 663d s 	ld	a,(k_dot >> 8)
663d 663d s 	and	k_dot % $100
663d 663d s 	jp	nz,down_l
663d 663d s ret_33:
663d 663d s   endif
663d 663d s 	endm
663d 663d s 	endm
663d 663d s 	key_l	24,k_semi,d1@
663d 663d s 	key	24,k_semi,d1@,down_l
663d 663d s   if parkey == 0
663d 663d s param_24:
663d 663d s   endif
663d 663d s 
663d 663d s   if parkey < 2
663d 663d d 0405
663d 663d u 02 02
663d 663d s 	defw	st_d1@
663f 663f s   endif
663f 663f s 
663f 663f s   if parkey == 0
663f 663f d 8659
663f 663f u 02 02
663f 663f s 	defw	ret_24
6641 6641 d 18ff
6641 6641 u 02 02
6641 6641 s 	defw	$ff00+24
6643 6643 s   endif
6643 6643 s 
6643 6643 s   if parkey == 2
6643 6643 s 	cycle
6643 6643 s 	ld	sp,param_24
6643 6643 s 	; Waste 7+4
6643 6643 s 	nop
6643 6643 s 	ld	a,0
6643 6643 s 	ld	a,0		; waste we can eliminate?
6643 6643 s 	ld	a,(k_semi >> 8)
6643 6643 s 	and	k_semi % $100
6643 6643 s 	jp	nz,down_l
6643 6643 s ret_24:
6643 6643 s   endif
6643 6643 s 	endm
6643 6643 s 	endm
6643 6643 s 	key_l	34,k_slash,e1
6643 6643 s 	key	34,k_slash,e1,down_l
6643 6643 s   if parkey == 0
6643 6643 s param_34:
6643 6643 s   endif
6643 6643 s 
6643 6643 s   if parkey < 2
6643 6643 d 5005
6643 6643 u 02 02
6643 6643 s 	defw	st_e1
6645 6645 s   endif
6645 6645 s 
6645 6645 s   if parkey == 0
6645 6645 d a259
6645 6645 u 02 02
6645 6645 s 	defw	ret_34
6647 6647 d 22ff
6647 6647 u 02 02
6647 6647 s 	defw	$ff00+34
6649 6649 s   endif
6649 6649 s 
6649 6649 s   if parkey == 2
6649 6649 s 	cycle
6649 6649 s 	ld	sp,param_34
6649 6649 s 	; Waste 7+4
6649 6649 s 	nop
6649 6649 s 	ld	a,0
6649 6649 s 	ld	a,0		; waste we can eliminate?
6649 6649 s 	ld	a,(k_slash >> 8)
6649 6649 s 	and	k_slash % $100
6649 6649 s 	jp	nz,down_l
6649 6649 s ret_34:
6649 6649 s   endif
6649 6649 s 	endm
6649 6649 s 	endm
6649 6649 s 
6649 6649 s 	key_r	07,k_Q,c1
6649 6649 s 	key	07,k_Q,c1,down_r
6649 6649 s   if parkey == 0
6649 6649 s param_07:
6649 6649 s   endif
6649 6649 s 
6649 6649 s   if parkey < 2
6649 6649 d 3b04
6649 6649 u 02 02
6649 6649 s 	defw	st_c1
664b 664b s   endif
664b 664b s 
664b 664b s   if parkey == 0
664b 664b d be59
664b 664b u 02 02
664b 664b s 	defw	ret_07
664d 664d d 07ff
664d 664d u 02 02
664d 664d s 	defw	$ff00+07
664f 664f s   endif
664f 664f s 
664f 664f s   if parkey == 2
664f 664f s 	cycle
664f 664f s 	ld	sp,param_07
664f 664f s 	; Waste 7+4
664f 664f s 	nop
664f 664f s 	ld	a,0
664f 664f s 	ld	a,0		; waste we can eliminate?
664f 664f s 	ld	a,(k_Q >> 8)
664f 664f s 	and	k_Q % $100
664f 664f s 	jp	nz,down_r
664f 664f s ret_07:
664f 664f s   endif
664f 664f s 	endm
664f 664f s 	endm
664f 664f s 	key_r	00,k_2,c1@
664f 664f s 	key	00,k_2,c1@,down_r
664f 664f s   if parkey == 0
664f 664f s param_00:
664f 664f s   endif
664f 664f s 
664f 664f s   if parkey < 2
664f 664f d 7a04
664f 664f u 02 02
664f 664f s 	defw	st_c1@
6651 6651 s   endif
6651 6651 s 
6651 6651 s   if parkey == 0
6651 6651 d da59
6651 6651 u 02 02
6651 6651 s 	defw	ret_00
6653 6653 d 00ff
6653 6653 u 02 02
6653 6653 s 	defw	$ff00+00
6655 6655 s   endif
6655 6655 s 
6655 6655 s   if parkey == 2
6655 6655 s 	cycle
6655 6655 s 	ld	sp,param_00
6655 6655 s 	; Waste 7+4
6655 6655 s 	nop
6655 6655 s 	ld	a,0
6655 6655 s 	ld	a,0		; waste we can eliminate?
6655 6655 s 	ld	a,(k_2 >> 8)
6655 6655 s 	and	k_2 % $100
6655 6655 s 	jp	nz,down_r
6655 6655 s ret_00:
6655 6655 s   endif
6655 6655 s 	endm
6655 6655 s 	endm
6655 6655 s 	key_r	08,k_W,d1
6655 6655 s 	key	08,k_W,d1,down_r
6655 6655 s   if parkey == 0
6655 6655 s param_08:
6655 6655 s   endif
6655 6655 s 
6655 6655 s   if parkey < 2
6655 6655 d bd04
6655 6655 u 02 02
6655 6655 s 	defw	st_d1
6657 6657 s   endif
6657 6657 s 
6657 6657 s   if parkey == 0
6657 6657 d f659
6657 6657 u 02 02
6657 6657 s 	defw	ret_08
6659 6659 d 08ff
6659 6659 u 02 02
6659 6659 s 	defw	$ff00+08
665b 665b s   endif
665b 665b s 
665b 665b s   if parkey == 2
665b 665b s 	cycle
665b 665b s 	ld	sp,param_08
665b 665b s 	; Waste 7+4
665b 665b s 	nop
665b 665b s 	ld	a,0
665b 665b s 	ld	a,0		; waste we can eliminate?
665b 665b s 	ld	a,(k_W >> 8)
665b 665b s 	and	k_W % $100
665b 665b s 	jp	nz,down_r
665b 665b s ret_08:
665b 665b s   endif
665b 665b s 	endm
665b 665b s 	endm
665b 665b s 	key_r	01,k_3,d1@
665b 665b s 	key	01,k_3,d1@,down_r
665b 665b s   if parkey == 0
665b 665b s param_01:
665b 665b s   endif
665b 665b s 
665b 665b s   if parkey < 2
665b 665b d 0405
665b 665b u 02 02
665b 665b s 	defw	st_d1@
665d 665d s   endif
665d 665d s 
665d 665d s   if parkey == 0
665d 665d d 125a
665d 665d u 02 02
665d 665d s 	defw	ret_01
665f 665f d 01ff
665f 665f u 02 02
665f 665f s 	defw	$ff00+01
6661 6661 s   endif
6661 6661 s 
6661 6661 s   if parkey == 2
6661 6661 s 	cycle
6661 6661 s 	ld	sp,param_01
6661 6661 s 	; Waste 7+4
6661 6661 s 	nop
6661 6661 s 	ld	a,0
6661 6661 s 	ld	a,0		; waste we can eliminate?
6661 6661 s 	ld	a,(k_3 >> 8)
6661 6661 s 	and	k_3 % $100
6661 6661 s 	jp	nz,down_r
6661 6661 s ret_01:
6661 6661 s   endif
6661 6661 s 	endm
6661 6661 s 	endm
6661 6661 s 	key_r	09,k_E,e1
6661 6661 s 	key	09,k_E,e1,down_r
6661 6661 s   if parkey == 0
6661 6661 s param_09:
6661 6661 s   endif
6661 6661 s 
6661 6661 s   if parkey < 2
6661 6661 d 5005
6661 6661 u 02 02
6661 6661 s 	defw	st_e1
6663 6663 s   endif
6663 6663 s 
6663 6663 s   if parkey == 0
6663 6663 d 2e5a
6663 6663 u 02 02
6663 6663 s 	defw	ret_09
6665 6665 d 09ff
6665 6665 u 02 02
6665 6665 s 	defw	$ff00+09
6667 6667 s   endif
6667 6667 s 
6667 6667 s   if parkey == 2
6667 6667 s 	cycle
6667 6667 s 	ld	sp,param_09
6667 6667 s 	; Waste 7+4
6667 6667 s 	nop
6667 6667 s 	ld	a,0
6667 6667 s 	ld	a,0		; waste we can eliminate?
6667 6667 s 	ld	a,(k_E >> 8)
6667 6667 s 	and	k_E % $100
6667 6667 s 	jp	nz,down_r
6667 6667 s ret_09:
6667 6667 s   endif
6667 6667 s 	endm
6667 6667 s 	endm
6667 6667 s 	key_r	10,k_R,f1
6667 6667 s 	key	10,k_R,f1,down_r
6667 6667 s   if parkey == 0
6667 6667 s param_10:
6667 6667 s   endif
6667 6667 s 
6667 6667 s   if parkey < 2
6667 6667 d 9f05
6667 6667 u 02 02
6667 6667 s 	defw	st_f1
6669 6669 s   endif
6669 6669 s 
6669 6669 s   if parkey == 0
6669 6669 d 4a5a
6669 6669 u 02 02
6669 6669 s 	defw	ret_10
666b 666b d 0aff
666b 666b u 02 02
666b 666b s 	defw	$ff00+10
666d 666d s   endif
666d 666d s 
666d 666d s   if parkey == 2
666d 666d s 	cycle
666d 666d s 	ld	sp,param_10
666d 666d s 	; Waste 7+4
666d 666d s 	nop
666d 666d s 	ld	a,0
666d 666d s 	ld	a,0		; waste we can eliminate?
666d 666d s 	ld	a,(k_R >> 8)
666d 666d s 	and	k_R % $100
666d 666d s 	jp	nz,down_r
666d 666d s ret_10:
666d 666d s   endif
666d 666d s 	endm
666d 666d s 	endm
666d 666d s 	key_r	02,k_5,f1@
666d 666d s 	key	02,k_5,f1@,down_r
666d 666d s   if parkey == 0
666d 666d s param_02:
666d 666d s   endif
666d 666d s 
666d 666d s   if parkey < 2
666d 666d d f405
666d 666d u 02 02
666d 666d s 	defw	st_f1@
666f 666f s   endif
666f 666f s 
666f 666f s   if parkey == 0
666f 666f d 665a
666f 666f u 02 02
666f 666f s 	defw	ret_02
6671 6671 d 02ff
6671 6671 u 02 02
6671 6671 s 	defw	$ff00+02
6673 6673 s   endif
6673 6673 s 
6673 6673 s   if parkey == 2
6673 6673 s 	cycle
6673 6673 s 	ld	sp,param_02
6673 6673 s 	; Waste 7+4
6673 6673 s 	nop
6673 6673 s 	ld	a,0
6673 6673 s 	ld	a,0		; waste we can eliminate?
6673 6673 s 	ld	a,(k_5 >> 8)
6673 6673 s 	and	k_5 % $100
6673 6673 s 	jp	nz,down_r
6673 6673 s ret_02:
6673 6673 s   endif
6673 6673 s 	endm
6673 6673 s 	endm
6673 6673 s 	key_r	11,k_T,g1
6673 6673 s 	key	11,k_T,g1,down_r
6673 6673 s   if parkey == 0
6673 6673 s param_11:
6673 6673 s   endif
6673 6673 s 
6673 6673 s   if parkey < 2
6673 6673 d 4d06
6673 6673 u 02 02
6673 6673 s 	defw	st_g1
6675 6675 s   endif
6675 6675 s 
6675 6675 s   if parkey == 0
6675 6675 d 825a
6675 6675 u 02 02
6675 6675 s 	defw	ret_11
6677 6677 d 0bff
6677 6677 u 02 02
6677 6677 s 	defw	$ff00+11
6679 6679 s   endif
6679 6679 s 
6679 6679 s   if parkey == 2
6679 6679 s 	cycle
6679 6679 s 	ld	sp,param_11
6679 6679 s 	; Waste 7+4
6679 6679 s 	nop
6679 6679 s 	ld	a,0
6679 6679 s 	ld	a,0		; waste we can eliminate?
6679 6679 s 	ld	a,(k_T >> 8)
6679 6679 s 	and	k_T % $100
6679 6679 s 	jp	nz,down_r
6679 6679 s ret_11:
6679 6679 s   endif
6679 6679 s 	endm
6679 6679 s 	endm
6679 6679 s 	key_r	03,k_6,g1@
6679 6679 s 	key	03,k_6,g1@,down_r
6679 6679 s   if parkey == 0
6679 6679 s param_03:
6679 6679 s   endif
6679 6679 s 
6679 6679 s   if parkey < 2
6679 6679 d ab06
6679 6679 u 02 02
6679 6679 s 	defw	st_g1@
667b 667b s   endif
667b 667b s 
667b 667b s   if parkey == 0
667b 667b d 9e5a
667b 667b u 02 02
667b 667b s 	defw	ret_03
667d 667d d 03ff
667d 667d u 02 02
667d 667d s 	defw	$ff00+03
667f 667f s   endif
667f 667f s 
667f 667f s   if parkey == 2
667f 667f s 	cycle
667f 667f s 	ld	sp,param_03
667f 667f s 	; Waste 7+4
667f 667f s 	nop
667f 667f s 	ld	a,0
667f 667f s 	ld	a,0		; waste we can eliminate?
667f 667f s 	ld	a,(k_6 >> 8)
667f 667f s 	and	k_6 % $100
667f 667f s 	jp	nz,down_r
667f 667f s ret_03:
667f 667f s   endif
667f 667f s 	endm
667f 667f s 	endm
667f 667f s 	key_r	12,k_Y,a1
667f 667f s 	key	12,k_Y,a1,down_r
667f 667f s   if parkey == 0
667f 667f s param_12:
667f 667f s   endif
667f 667f s 
667f 667f s   if parkey < 2
667f 667f d 1007
667f 667f u 02 02
667f 667f s 	defw	st_a1
6681 6681 s   endif
6681 6681 s 
6681 6681 s   if parkey == 0
6681 6681 d ba5a
6681 6681 u 02 02
6681 6681 s 	defw	ret_12
6683 6683 d 0cff
6683 6683 u 02 02
6683 6683 s 	defw	$ff00+12
6685 6685 s   endif
6685 6685 s 
6685 6685 s   if parkey == 2
6685 6685 s 	cycle
6685 6685 s 	ld	sp,param_12
6685 6685 s 	; Waste 7+4
6685 6685 s 	nop
6685 6685 s 	ld	a,0
6685 6685 s 	ld	a,0		; waste we can eliminate?
6685 6685 s 	ld	a,(k_Y >> 8)
6685 6685 s 	and	k_Y % $100
6685 6685 s 	jp	nz,down_r
6685 6685 s ret_12:
6685 6685 s   endif
6685 6685 s 	endm
6685 6685 s 	endm
6685 6685 s 	key_r	04,k_7,a1@
6685 6685 s 	key	04,k_7,a1@,down_r
6685 6685 s   if parkey == 0
6685 6685 s param_04:
6685 6685 s   endif
6685 6685 s 
6685 6685 s   if parkey < 2
6685 6685 d 7907
6685 6685 u 02 02
6685 6685 s 	defw	st_a1@
6687 6687 s   endif
6687 6687 s 
6687 6687 s   if parkey == 0
6687 6687 d d65a
6687 6687 u 02 02
6687 6687 s 	defw	ret_04
6689 6689 d 04ff
6689 6689 u 02 02
6689 6689 s 	defw	$ff00+04
668b 668b s   endif
668b 668b s 
668b 668b s   if parkey == 2
668b 668b s 	cycle
668b 668b s 	ld	sp,param_04
668b 668b s 	; Waste 7+4
668b 668b s 	nop
668b 668b s 	ld	a,0
668b 668b s 	ld	a,0		; waste we can eliminate?
668b 668b s 	ld	a,(k_7 >> 8)
668b 668b s 	and	k_7 % $100
668b 668b s 	jp	nz,down_r
668b 668b s ret_04:
668b 668b s   endif
668b 668b s 	endm
668b 668b s 	endm
668b 668b s 	key_r	13,k_U,b1
668b 668b s 	key	13,k_U,b1,down_r
668b 668b s   if parkey == 0
668b 668b s param_13:
668b 668b s   endif
668b 668b s 
668b 668b s   if parkey < 2
668b 668b d ea07
668b 668b u 02 02
668b 668b s 	defw	st_b1
668d 668d s   endif
668d 668d s 
668d 668d s   if parkey == 0
668d 668d d f25a
668d 668d u 02 02
668d 668d s 	defw	ret_13
668f 668f d 0dff
668f 668f u 02 02
668f 668f s 	defw	$ff00+13
6691 6691 s   endif
6691 6691 s 
6691 6691 s   if parkey == 2
6691 6691 s 	cycle
6691 6691 s 	ld	sp,param_13
6691 6691 s 	; Waste 7+4
6691 6691 s 	nop
6691 6691 s 	ld	a,0
6691 6691 s 	ld	a,0		; waste we can eliminate?
6691 6691 s 	ld	a,(k_U >> 8)
6691 6691 s 	and	k_U % $100
6691 6691 s 	jp	nz,down_r
6691 6691 s ret_13:
6691 6691 s   endif
6691 6691 s 	endm
6691 6691 s 	endm
6691 6691 s 	key_r	14,k_I,c2
6691 6691 s 	key	14,k_I,c2,down_r
6691 6691 s   if parkey == 0
6691 6691 s param_14:
6691 6691 s   endif
6691 6691 s 
6691 6691 s   if parkey < 2
6691 6691 d 7608
6691 6691 u 02 02
6691 6691 s 	defw	st_c2
6693 6693 s   endif
6693 6693 s 
6693 6693 s   if parkey == 0
6693 6693 d 0e5b
6693 6693 u 02 02
6693 6693 s 	defw	ret_14
6695 6695 d 0eff
6695 6695 u 02 02
6695 6695 s 	defw	$ff00+14
6697 6697 s   endif
6697 6697 s 
6697 6697 s   if parkey == 2
6697 6697 s 	cycle
6697 6697 s 	ld	sp,param_14
6697 6697 s 	; Waste 7+4
6697 6697 s 	nop
6697 6697 s 	ld	a,0
6697 6697 s 	ld	a,0		; waste we can eliminate?
6697 6697 s 	ld	a,(k_I >> 8)
6697 6697 s 	and	k_I % $100
6697 6697 s 	jp	nz,down_r
6697 6697 s ret_14:
6697 6697 s   endif
6697 6697 s 	endm
6697 6697 s 	endm
6697 6697 s 	key_r	05,k_9,c2@
6697 6697 s 	key	05,k_9,c2@,down_r
6697 6697 s   if parkey == 0
6697 6697 s param_05:
6697 6697 s   endif
6697 6697 s 
6697 6697 s   if parkey < 2
6697 6697 d f508
6697 6697 u 02 02
6697 6697 s 	defw	st_c2@
6699 6699 s   endif
6699 6699 s 
6699 6699 s   if parkey == 0
6699 6699 d 2a5b
6699 6699 u 02 02
6699 6699 s 	defw	ret_05
669b 669b d 05ff
669b 669b u 02 02
669b 669b s 	defw	$ff00+05
669d 669d s   endif
669d 669d s 
669d 669d s   if parkey == 2
669d 669d s 	cycle
669d 669d s 	ld	sp,param_05
669d 669d s 	; Waste 7+4
669d 669d s 	nop
669d 669d s 	ld	a,0
669d 669d s 	ld	a,0		; waste we can eliminate?
669d 669d s 	ld	a,(k_9 >> 8)
669d 669d s 	and	k_9 % $100
669d 669d s 	jp	nz,down_r
669d 669d s ret_05:
669d 669d s   endif
669d 669d s 	endm
669d 669d s 	endm
669d 669d s 	key_r	15,k_O,d2
669d 669d s 	key	15,k_O,d2,down_r
669d 669d s   if parkey == 0
669d 669d s param_15:
669d 669d s   endif
669d 669d s 
669d 669d s   if parkey < 2
669d 669d d 7b09
669d 669d u 02 02
669d 669d s 	defw	st_d2
669f 669f s   endif
669f 669f s 
669f 669f s   if parkey == 0
669f 669f d 465b
669f 669f u 02 02
669f 669f s 	defw	ret_15
66a1 66a1 d 0fff
66a1 66a1 u 02 02
66a1 66a1 s 	defw	$ff00+15
66a3 66a3 s   endif
66a3 66a3 s 
66a3 66a3 s   if parkey == 2
66a3 66a3 s 	cycle
66a3 66a3 s 	ld	sp,param_15
66a3 66a3 s 	; Waste 7+4
66a3 66a3 s 	nop
66a3 66a3 s 	ld	a,0
66a3 66a3 s 	ld	a,0		; waste we can eliminate?
66a3 66a3 s 	ld	a,(k_O >> 8)
66a3 66a3 s 	and	k_O % $100
66a3 66a3 s 	jp	nz,down_r
66a3 66a3 s ret_15:
66a3 66a3 s   endif
66a3 66a3 s 	endm
66a3 66a3 s 	endm
66a3 66a3 s 	key_r	06,k_0,d2@
66a3 66a3 s 	key	06,k_0,d2@,down_r
66a3 66a3 s   if parkey == 0
66a3 66a3 s param_06:
66a3 66a3 s   endif
66a3 66a3 s 
66a3 66a3 s   if parkey < 2
66a3 66a3 d 090a
66a3 66a3 u 02 02
66a3 66a3 s 	defw	st_d2@
66a5 66a5 s   endif
66a5 66a5 s 
66a5 66a5 s   if parkey == 0
66a5 66a5 d 625b
66a5 66a5 u 02 02
66a5 66a5 s 	defw	ret_06
66a7 66a7 d 06ff
66a7 66a7 u 02 02
66a7 66a7 s 	defw	$ff00+06
66a9 66a9 s   endif
66a9 66a9 s 
66a9 66a9 s   if parkey == 2
66a9 66a9 s 	cycle
66a9 66a9 s 	ld	sp,param_06
66a9 66a9 s 	; Waste 7+4
66a9 66a9 s 	nop
66a9 66a9 s 	ld	a,0
66a9 66a9 s 	ld	a,0		; waste we can eliminate?
66a9 66a9 s 	ld	a,(k_0 >> 8)
66a9 66a9 s 	and	k_0 % $100
66a9 66a9 s 	jp	nz,down_r
66a9 66a9 s ret_06:
66a9 66a9 s   endif
66a9 66a9 s 	endm
66a9 66a9 s 	endm
66a9 66a9 s 	key_r	16,k_P,e2
66a9 66a9 s 	key	16,k_P,e2,down_r
66a9 66a9 s   if parkey == 0
66a9 66a9 s param_16:
66a9 66a9 s   endif
66a9 66a9 s 
66a9 66a9 s   if parkey < 2
66a9 66a9 d a00a
66a9 66a9 u 02 02
66a9 66a9 s 	defw	st_e2
66ab 66ab s   endif
66ab 66ab s 
66ab 66ab s   if parkey == 0
66ab 66ab d 7e5b
66ab 66ab u 02 02
66ab 66ab s 	defw	ret_16
66ad 66ad d 10ff
66ad 66ad u 02 02
66ad 66ad s 	defw	$ff00+16
66af 66af s   endif
66af 66af s 
66af 66af s   if parkey == 2
66af 66af s 	cycle
66af 66af s 	ld	sp,param_16
66af 66af s 	; Waste 7+4
66af 66af s 	nop
66af 66af s 	ld	a,0
66af 66af s 	ld	a,0		; waste we can eliminate?
66af 66af s 	ld	a,(k_P >> 8)
66af 66af s 	and	k_P % $100
66af 66af s 	jp	nz,down_r
66af 66af s ret_16:
66af 66af s   endif
66af 66af s 	endm
66af 66af s 	endm
66af 66af s 	key_r	17,k_@,f2
66af 66af s 	key	17,k_@,f2,down_r
66af 66af s   if parkey == 0
66af 66af s param_17:
66af 66af s   endif
66af 66af s 
66af 66af s   if parkey < 2
66af 66af d 3f0b
66af 66af u 02 02
66af 66af s 	defw	st_f2
66b1 66b1 s   endif
66b1 66b1 s 
66b1 66b1 s   if parkey == 0
66b1 66b1 d 9a5b
66b1 66b1 u 02 02
66b1 66b1 s 	defw	ret_17
66b3 66b3 d 11ff
66b3 66b3 u 02 02
66b3 66b3 s 	defw	$ff00+17
66b5 66b5 s   endif
66b5 66b5 s 
66b5 66b5 s   if parkey == 2
66b5 66b5 s 	cycle
66b5 66b5 s 	ld	sp,param_17
66b5 66b5 s 	; Waste 7+4
66b5 66b5 s 	nop
66b5 66b5 s 	ld	a,0
66b5 66b5 s 	ld	a,0		; waste we can eliminate?
66b5 66b5 s 	ld	a,(k_@ >> 8)
66b5 66b5 s 	and	k_@ % $100
66b5 66b5 s 	jp	nz,down_r
66b5 66b5 s ret_17:
66b5 66b5 s   endif
66b5 66b5 s 	endm
66b5 66b5 s 	endm
66b5 66b5 s 
66b5 66b5 s 	key	35,k_A,null,wave_down_l
66b5 66b5 s   if parkey == 0
66b5 66b5 s param_35:
66b5 66b5 s   endif
66b5 66b5 s 
66b5 66b5 s   if parkey < 2
66b5 66b5 d 0000
66b5 66b5 u 02 02
66b5 66b5 s 	defw	st_null
66b7 66b7 s   endif
66b7 66b7 s 
66b7 66b7 s   if parkey == 0
66b7 66b7 d b65b
66b7 66b7 u 02 02
66b7 66b7 s 	defw	ret_35
66b9 66b9 d 23ff
66b9 66b9 u 02 02
66b9 66b9 s 	defw	$ff00+35
66bb 66bb s   endif
66bb 66bb s 
66bb 66bb s   if parkey == 2
66bb 66bb s 	cycle
66bb 66bb s 	ld	sp,param_35
66bb 66bb s 	; Waste 7+4
66bb 66bb s 	nop
66bb 66bb s 	ld	a,0
66bb 66bb s 	ld	a,0		; waste we can eliminate?
66bb 66bb s 	ld	a,(k_A >> 8)
66bb 66bb s 	and	k_A % $100
66bb 66bb s 	jp	nz,wave_down_l
66bb 66bb s ret_35:
66bb 66bb s   endif
66bb 66bb s 	endm
66bb 66bb s 	key	36,k_1,null,wave_down_r
66bb 66bb s   if parkey == 0
66bb 66bb s param_36:
66bb 66bb s   endif
66bb 66bb s 
66bb 66bb s   if parkey < 2
66bb 66bb d 0000
66bb 66bb u 02 02
66bb 66bb s 	defw	st_null
66bd 66bd s   endif
66bd 66bd s 
66bd 66bd s   if parkey == 0
66bd 66bd d d25b
66bd 66bd u 02 02
66bd 66bd s 	defw	ret_36
66bf 66bf d 24ff
66bf 66bf u 02 02
66bf 66bf s 	defw	$ff00+36
66c1 66c1 s   endif
66c1 66c1 s 
66c1 66c1 s   if parkey == 2
66c1 66c1 s 	cycle
66c1 66c1 s 	ld	sp,param_36
66c1 66c1 s 	; Waste 7+4
66c1 66c1 s 	nop
66c1 66c1 s 	ld	a,0
66c1 66c1 s 	ld	a,0		; waste we can eliminate?
66c1 66c1 s 	ld	a,(k_1 >> 8)
66c1 66c1 s 	and	k_1 % $100
66c1 66c1 s 	jp	nz,wave_down_r
66c1 66c1 s ret_36:
66c1 66c1 s   endif
66c1 66c1 s 	endm
66c1 66c1 s 
66c1 66c1 s    if havevol
66c1 66c1 s 	key	37,k_up,null,vol_up_down_l
66c1 66c1 s   if parkey == 0
66c1 66c1 s param_37:
66c1 66c1 s   endif
66c1 66c1 s 
66c1 66c1 s   if parkey < 2
66c1 66c1 d 0000
66c1 66c1 u 02 02
66c1 66c1 s 	defw	st_null
66c3 66c3 s   endif
66c3 66c3 s 
66c3 66c3 s   if parkey == 0
66c3 66c3 d ee5b
66c3 66c3 u 02 02
66c3 66c3 s 	defw	ret_37
66c5 66c5 d 25ff
66c5 66c5 u 02 02
66c5 66c5 s 	defw	$ff00+37
66c7 66c7 s   endif
66c7 66c7 s 
66c7 66c7 s   if parkey == 2
66c7 66c7 s 	cycle
66c7 66c7 s 	ld	sp,param_37
66c7 66c7 s 	; Waste 7+4
66c7 66c7 s 	nop
66c7 66c7 s 	ld	a,0
66c7 66c7 s 	ld	a,0		; waste we can eliminate?
66c7 66c7 s 	ld	a,(k_up >> 8)
66c7 66c7 s 	and	k_up % $100
66c7 66c7 s 	jp	nz,vol_up_down_l
66c7 66c7 s ret_37:
66c7 66c7 s   endif
66c7 66c7 s 	endm
66c7 66c7 s 	key	38,k_down,null,vol_down_down_l
66c7 66c7 s   if parkey == 0
66c7 66c7 s param_38:
66c7 66c7 s   endif
66c7 66c7 s 
66c7 66c7 s   if parkey < 2
66c7 66c7 d 0000
66c7 66c7 u 02 02
66c7 66c7 s 	defw	st_null
66c9 66c9 s   endif
66c9 66c9 s 
66c9 66c9 s   if parkey == 0
66c9 66c9 d 0a5c
66c9 66c9 u 02 02
66c9 66c9 s 	defw	ret_38
66cb 66cb d 26ff
66cb 66cb u 02 02
66cb 66cb s 	defw	$ff00+38
66cd 66cd s   endif
66cd 66cd s 
66cd 66cd s   if parkey == 2
66cd 66cd s 	cycle
66cd 66cd s 	ld	sp,param_38
66cd 66cd s 	; Waste 7+4
66cd 66cd s 	nop
66cd 66cd s 	ld	a,0
66cd 66cd s 	ld	a,0		; waste we can eliminate?
66cd 66cd s 	ld	a,(k_down >> 8)
66cd 66cd s 	and	k_down % $100
66cd 66cd s 	jp	nz,vol_down_down_l
66cd 66cd s ret_38:
66cd 66cd s   endif
66cd 66cd s 	endm
66cd 66cd s 
66cd 66cd s 	key	39,k_left,null,vol_up_down_r
66cd 66cd s   if parkey == 0
66cd 66cd s param_39:
66cd 66cd s   endif
66cd 66cd s 
66cd 66cd s   if parkey < 2
66cd 66cd d 0000
66cd 66cd u 02 02
66cd 66cd s 	defw	st_null
66cf 66cf s   endif
66cf 66cf s 
66cf 66cf s   if parkey == 0
66cf 66cf d 265c
66cf 66cf u 02 02
66cf 66cf s 	defw	ret_39
66d1 66d1 d 27ff
66d1 66d1 u 02 02
66d1 66d1 s 	defw	$ff00+39
66d3 66d3 s   endif
66d3 66d3 s 
66d3 66d3 s   if parkey == 2
66d3 66d3 s 	cycle
66d3 66d3 s 	ld	sp,param_39
66d3 66d3 s 	; Waste 7+4
66d3 66d3 s 	nop
66d3 66d3 s 	ld	a,0
66d3 66d3 s 	ld	a,0		; waste we can eliminate?
66d3 66d3 s 	ld	a,(k_left >> 8)
66d3 66d3 s 	and	k_left % $100
66d3 66d3 s 	jp	nz,vol_up_down_r
66d3 66d3 s ret_39:
66d3 66d3 s   endif
66d3 66d3 s 	endm
66d3 66d3 s 	key	40,k_right,null,vol_down_down_r
66d3 66d3 s   if parkey == 0
66d3 66d3 s param_40:
66d3 66d3 s   endif
66d3 66d3 s 
66d3 66d3 s   if parkey < 2
66d3 66d3 d 0000
66d3 66d3 u 02 02
66d3 66d3 s 	defw	st_null
66d5 66d5 s   endif
66d5 66d5 s 
66d5 66d5 s   if parkey == 0
66d5 66d5 d 425c
66d5 66d5 u 02 02
66d5 66d5 s 	defw	ret_40
66d7 66d7 d 28ff
66d7 66d7 u 02 02
66d7 66d7 s 	defw	$ff00+40
66d9 66d9 s   endif
66d9 66d9 s 
66d9 66d9 s   if parkey == 2
66d9 66d9 s 	cycle
66d9 66d9 s 	ld	sp,param_40
66d9 66d9 s 	; Waste 7+4
66d9 66d9 s 	nop
66d9 66d9 s 	ld	a,0
66d9 66d9 s 	ld	a,0		; waste we can eliminate?
66d9 66d9 s 	ld	a,(k_right >> 8)
66d9 66d9 s 	and	k_right % $100
66d9 66d9 s 	jp	nz,vol_down_down_r
66d9 66d9 s ret_40:
66d9 66d9 s   endif
66d9 66d9 s 	endm
66d9 66d9 s    endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s step3_tab:
66d9 66d9 s 	cpu_hz = 2027520
66d9 66d9 s 	parkeys	1
66d9 66d9 s 	calc_steps
66d9 66d9 s 	octbase = 110 * 256
66d9 66d9 s 	hz = octbase
66d9 66d9 s 	nt = 0
66d9 66d9 s 	rept	32
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_0	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_1	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_2	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_3	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_4	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_5	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_6	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_7	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_8	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_9	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_10	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_11	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_12	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_13	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_14	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_15	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_16	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_17	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_18	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_19	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_20	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_21	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_22	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_23	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_24	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_25	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_26	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_27	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_28	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_29	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_30	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	; Hz of entire 256 byte buffer at step 1 is: 
66d9 66d9 s 	;	cpu_hz / sampcyc / 256
66d9 66d9 s 	; (52.5 Hz at 1774080 Hz, 60 Hz at 2027520 Hz)
66d9 66d9 s 	; So target Hz over that is our step.
66d9 66d9 s 	; But we want 8.8 fixed point value.
66d9 66d9 s 
66d9 66d9 s 	equval	step_,%nt,hz/(cpu_hz/sampcyc/256)
66d9 66d9 s step_31	=	hz/(cpu_hz/sampcyc/256)
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	hz *= 271 ; twelfth root 2 * 256
66d9 66d9 s 	hz /= 256
66d9 66d9 s 	nt++
66d9 66d9 s 	if nt % 12 == 0
66d9 66d9 s 		octbase *= 2
66d9 66d9 s 		hz = octbase
66d9 66d9 s 	endif
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s ; Define these sensibly
66d9 66d9 s 
66d9 66d9 s st_c0	=	step_0
66d9 66d9 s st_c0@	=	step_1
66d9 66d9 s st_d0	=	step_2
66d9 66d9 s st_d0@	=	step_3
66d9 66d9 s st_e0	=	step_4
66d9 66d9 s st_f0	=	step_5
66d9 66d9 s st_f0@	=	step_6
66d9 66d9 s st_g0	=	step_7
66d9 66d9 s st_g0@	=	step_8
66d9 66d9 s st_a0	=	step_9
66d9 66d9 s st_a0@	=	step_10
66d9 66d9 s st_b0	=	step_11
66d9 66d9 s 
66d9 66d9 s st_c1	=	step_12
66d9 66d9 s st_c1@	=	step_13
66d9 66d9 s st_d1	=	step_14
66d9 66d9 s st_d1@	=	step_15
66d9 66d9 s st_e1	=	step_16
66d9 66d9 s st_f1	=	step_17
66d9 66d9 s st_f1@	=	step_18
66d9 66d9 s st_g1	=	step_19
66d9 66d9 s st_g1@	=	step_20
66d9 66d9 s st_a1	=	step_21
66d9 66d9 s st_a1@	=	step_22
66d9 66d9 s st_b1	=	step_23
66d9 66d9 s 
66d9 66d9 s st_c2	=	step_24
66d9 66d9 s st_c2@	=	step_25
66d9 66d9 s st_d2	=	step_26
66d9 66d9 s st_d2@	=	step_27
66d9 66d9 s st_e2	=	step_28
66d9 66d9 s st_f2	=	step_29
66d9 66d9 s 
66d9 66d9 s st_null	=	0
66d9 66d9 s 
66d9 66d9 s 	endm
66d9 66d9 s 
66d9 66d9 s 	parkey = 1
66d9 66d9 s 
66d9 66d9 s 	key_l	25,k_Z,c0
66d9 66d9 s 	key	25,k_Z,c0,down_l
66d9 66d9 s   if parkey == 0
66d9 66d9 s param_25:
66d9 66d9 s   endif
66d9 66d9 s 
66d9 66d9 s   if parkey < 2
66d9 66d9 d d501
66d9 66d9 u 02 02
66d9 66d9 s 	defw	st_c0
66db 66db s   endif
66db 66db s 
66db 66db s   if parkey == 0
66db 66db s 	defw	ret_25
66db 66db s 	defw	$ff00+25
66db 66db s   endif
66db 66db s 
66db 66db s   if parkey == 2
66db 66db s 	cycle
66db 66db s 	ld	sp,param_25
66db 66db s 	; Waste 7+4
66db 66db s 	nop
66db 66db s 	ld	a,0
66db 66db s 	ld	a,0		; waste we can eliminate?
66db 66db s 	ld	a,(k_Z >> 8)
66db 66db s 	and	k_Z % $100
66db 66db s 	jp	nz,down_l
66db 66db s ret_25:
66db 66db s   endif
66db 66db s 	endm
66db 66db s 	endm
66db 66db s 	key_l	18,k_S,c0@
66db 66db s 	key	18,k_S,c0@,down_l
66db 66db s   if parkey == 0
66db 66db s param_18:
66db 66db s   endif
66db 66db s 
66db 66db s   if parkey < 2
66db 66db d f001
66db 66db u 02 02
66db 66db s 	defw	st_c0@
66dd 66dd s   endif
66dd 66dd s 
66dd 66dd s   if parkey == 0
66dd 66dd s 	defw	ret_18
66dd 66dd s 	defw	$ff00+18
66dd 66dd s   endif
66dd 66dd s 
66dd 66dd s   if parkey == 2
66dd 66dd s 	cycle
66dd 66dd s 	ld	sp,param_18
66dd 66dd s 	; Waste 7+4
66dd 66dd s 	nop
66dd 66dd s 	ld	a,0
66dd 66dd s 	ld	a,0		; waste we can eliminate?
66dd 66dd s 	ld	a,(k_S >> 8)
66dd 66dd s 	and	k_S % $100
66dd 66dd s 	jp	nz,down_l
66dd 66dd s ret_18:
66dd 66dd s   endif
66dd 66dd s 	endm
66dd 66dd s 	endm
66dd 66dd s 	key_l	26,k_X,d0
66dd 66dd s 	key	26,k_X,d0,down_l
66dd 66dd s   if parkey == 0
66dd 66dd s param_26:
66dd 66dd s   endif
66dd 66dd s 
66dd 66dd s   if parkey < 2
66dd 66dd d 0d02
66dd 66dd u 02 02
66dd 66dd s 	defw	st_d0
66df 66df s   endif
66df 66df s 
66df 66df s   if parkey == 0
66df 66df s 	defw	ret_26
66df 66df s 	defw	$ff00+26
66df 66df s   endif
66df 66df s 
66df 66df s   if parkey == 2
66df 66df s 	cycle
66df 66df s 	ld	sp,param_26
66df 66df s 	; Waste 7+4
66df 66df s 	nop
66df 66df s 	ld	a,0
66df 66df s 	ld	a,0		; waste we can eliminate?
66df 66df s 	ld	a,(k_X >> 8)
66df 66df s 	and	k_X % $100
66df 66df s 	jp	nz,down_l
66df 66df s ret_26:
66df 66df s   endif
66df 66df s 	endm
66df 66df s 	endm
66df 66df s 	key_l	19,k_D,d0@
66df 66df s 	key	19,k_D,d0@,down_l
66df 66df s   if parkey == 0
66df 66df s param_19:
66df 66df s   endif
66df 66df s 
66df 66df s   if parkey < 2
66df 66df d 2c02
66df 66df u 02 02
66df 66df s 	defw	st_d0@
66e1 66e1 s   endif
66e1 66e1 s 
66e1 66e1 s   if parkey == 0
66e1 66e1 s 	defw	ret_19
66e1 66e1 s 	defw	$ff00+19
66e1 66e1 s   endif
66e1 66e1 s 
66e1 66e1 s   if parkey == 2
66e1 66e1 s 	cycle
66e1 66e1 s 	ld	sp,param_19
66e1 66e1 s 	; Waste 7+4
66e1 66e1 s 	nop
66e1 66e1 s 	ld	a,0
66e1 66e1 s 	ld	a,0		; waste we can eliminate?
66e1 66e1 s 	ld	a,(k_D >> 8)
66e1 66e1 s 	and	k_D % $100
66e1 66e1 s 	jp	nz,down_l
66e1 66e1 s ret_19:
66e1 66e1 s   endif
66e1 66e1 s 	endm
66e1 66e1 s 	endm
66e1 66e1 s 	key_l	27,k_C,e0
66e1 66e1 s 	key	27,k_C,e0,down_l
66e1 66e1 s   if parkey == 0
66e1 66e1 s param_27:
66e1 66e1 s   endif
66e1 66e1 s 
66e1 66e1 s   if parkey < 2
66e1 66e1 d 4d02
66e1 66e1 u 02 02
66e1 66e1 s 	defw	st_e0
66e3 66e3 s   endif
66e3 66e3 s 
66e3 66e3 s   if parkey == 0
66e3 66e3 s 	defw	ret_27
66e3 66e3 s 	defw	$ff00+27
66e3 66e3 s   endif
66e3 66e3 s 
66e3 66e3 s   if parkey == 2
66e3 66e3 s 	cycle
66e3 66e3 s 	ld	sp,param_27
66e3 66e3 s 	; Waste 7+4
66e3 66e3 s 	nop
66e3 66e3 s 	ld	a,0
66e3 66e3 s 	ld	a,0		; waste we can eliminate?
66e3 66e3 s 	ld	a,(k_C >> 8)
66e3 66e3 s 	and	k_C % $100
66e3 66e3 s 	jp	nz,down_l
66e3 66e3 s ret_27:
66e3 66e3 s   endif
66e3 66e3 s 	endm
66e3 66e3 s 	endm
66e3 66e3 s 	key_l	28,k_V,f0
66e3 66e3 s 	key	28,k_V,f0,down_l
66e3 66e3 s   if parkey == 0
66e3 66e3 s param_28:
66e3 66e3 s   endif
66e3 66e3 s 
66e3 66e3 s   if parkey < 2
66e3 66e3 d 6f02
66e3 66e3 u 02 02
66e3 66e3 s 	defw	st_f0
66e5 66e5 s   endif
66e5 66e5 s 
66e5 66e5 s   if parkey == 0
66e5 66e5 s 	defw	ret_28
66e5 66e5 s 	defw	$ff00+28
66e5 66e5 s   endif
66e5 66e5 s 
66e5 66e5 s   if parkey == 2
66e5 66e5 s 	cycle
66e5 66e5 s 	ld	sp,param_28
66e5 66e5 s 	; Waste 7+4
66e5 66e5 s 	nop
66e5 66e5 s 	ld	a,0
66e5 66e5 s 	ld	a,0		; waste we can eliminate?
66e5 66e5 s 	ld	a,(k_V >> 8)
66e5 66e5 s 	and	k_V % $100
66e5 66e5 s 	jp	nz,down_l
66e5 66e5 s ret_28:
66e5 66e5 s   endif
66e5 66e5 s 	endm
66e5 66e5 s 	endm
66e5 66e5 s 	key_l	20,k_G,f0@
66e5 66e5 s 	key	20,k_G,f0@,down_l
66e5 66e5 s   if parkey == 0
66e5 66e5 s param_20:
66e5 66e5 s   endif
66e5 66e5 s 
66e5 66e5 s   if parkey < 2
66e5 66e5 d 9402
66e5 66e5 u 02 02
66e5 66e5 s 	defw	st_f0@
66e7 66e7 s   endif
66e7 66e7 s 
66e7 66e7 s   if parkey == 0
66e7 66e7 s 	defw	ret_20
66e7 66e7 s 	defw	$ff00+20
66e7 66e7 s   endif
66e7 66e7 s 
66e7 66e7 s   if parkey == 2
66e7 66e7 s 	cycle
66e7 66e7 s 	ld	sp,param_20
66e7 66e7 s 	; Waste 7+4
66e7 66e7 s 	nop
66e7 66e7 s 	ld	a,0
66e7 66e7 s 	ld	a,0		; waste we can eliminate?
66e7 66e7 s 	ld	a,(k_G >> 8)
66e7 66e7 s 	and	k_G % $100
66e7 66e7 s 	jp	nz,down_l
66e7 66e7 s ret_20:
66e7 66e7 s   endif
66e7 66e7 s 	endm
66e7 66e7 s 	endm
66e7 66e7 s 	key_l	29,k_B,g0
66e7 66e7 s 	key	29,k_B,g0,down_l
66e7 66e7 s   if parkey == 0
66e7 66e7 s param_29:
66e7 66e7 s   endif
66e7 66e7 s 
66e7 66e7 s   if parkey < 2
66e7 66e7 d bb02
66e7 66e7 u 02 02
66e7 66e7 s 	defw	st_g0
66e9 66e9 s   endif
66e9 66e9 s 
66e9 66e9 s   if parkey == 0
66e9 66e9 s 	defw	ret_29
66e9 66e9 s 	defw	$ff00+29
66e9 66e9 s   endif
66e9 66e9 s 
66e9 66e9 s   if parkey == 2
66e9 66e9 s 	cycle
66e9 66e9 s 	ld	sp,param_29
66e9 66e9 s 	; Waste 7+4
66e9 66e9 s 	nop
66e9 66e9 s 	ld	a,0
66e9 66e9 s 	ld	a,0		; waste we can eliminate?
66e9 66e9 s 	ld	a,(k_B >> 8)
66e9 66e9 s 	and	k_B % $100
66e9 66e9 s 	jp	nz,down_l
66e9 66e9 s ret_29:
66e9 66e9 s   endif
66e9 66e9 s 	endm
66e9 66e9 s 	endm
66e9 66e9 s 	key_l	21,k_H,g0@
66e9 66e9 s 	key	21,k_H,g0@,down_l
66e9 66e9 s   if parkey == 0
66e9 66e9 s param_21:
66e9 66e9 s   endif
66e9 66e9 s 
66e9 66e9 s   if parkey < 2
66e9 66e9 d e402
66e9 66e9 u 02 02
66e9 66e9 s 	defw	st_g0@
66eb 66eb s   endif
66eb 66eb s 
66eb 66eb s   if parkey == 0
66eb 66eb s 	defw	ret_21
66eb 66eb s 	defw	$ff00+21
66eb 66eb s   endif
66eb 66eb s 
66eb 66eb s   if parkey == 2
66eb 66eb s 	cycle
66eb 66eb s 	ld	sp,param_21
66eb 66eb s 	; Waste 7+4
66eb 66eb s 	nop
66eb 66eb s 	ld	a,0
66eb 66eb s 	ld	a,0		; waste we can eliminate?
66eb 66eb s 	ld	a,(k_H >> 8)
66eb 66eb s 	and	k_H % $100
66eb 66eb s 	jp	nz,down_l
66eb 66eb s ret_21:
66eb 66eb s   endif
66eb 66eb s 	endm
66eb 66eb s 	endm
66eb 66eb s 	key_l	30,k_N,a0
66eb 66eb s 	key	30,k_N,a0,down_l
66eb 66eb s   if parkey == 0
66eb 66eb s param_30:
66eb 66eb s   endif
66eb 66eb s 
66eb 66eb s   if parkey < 2
66eb 66eb d 0f03
66eb 66eb u 02 02
66eb 66eb s 	defw	st_a0
66ed 66ed s   endif
66ed 66ed s 
66ed 66ed s   if parkey == 0
66ed 66ed s 	defw	ret_30
66ed 66ed s 	defw	$ff00+30
66ed 66ed s   endif
66ed 66ed s 
66ed 66ed s   if parkey == 2
66ed 66ed s 	cycle
66ed 66ed s 	ld	sp,param_30
66ed 66ed s 	; Waste 7+4
66ed 66ed s 	nop
66ed 66ed s 	ld	a,0
66ed 66ed s 	ld	a,0		; waste we can eliminate?
66ed 66ed s 	ld	a,(k_N >> 8)
66ed 66ed s 	and	k_N % $100
66ed 66ed s 	jp	nz,down_l
66ed 66ed s ret_30:
66ed 66ed s   endif
66ed 66ed s 	endm
66ed 66ed s 	endm
66ed 66ed s 	key_l	22,k_J,a0@
66ed 66ed s 	key	22,k_J,a0@,down_l
66ed 66ed s   if parkey == 0
66ed 66ed s param_22:
66ed 66ed s   endif
66ed 66ed s 
66ed 66ed s   if parkey < 2
66ed 66ed d 3d03
66ed 66ed u 02 02
66ed 66ed s 	defw	st_a0@
66ef 66ef s   endif
66ef 66ef s 
66ef 66ef s   if parkey == 0
66ef 66ef s 	defw	ret_22
66ef 66ef s 	defw	$ff00+22
66ef 66ef s   endif
66ef 66ef s 
66ef 66ef s   if parkey == 2
66ef 66ef s 	cycle
66ef 66ef s 	ld	sp,param_22
66ef 66ef s 	; Waste 7+4
66ef 66ef s 	nop
66ef 66ef s 	ld	a,0
66ef 66ef s 	ld	a,0		; waste we can eliminate?
66ef 66ef s 	ld	a,(k_J >> 8)
66ef 66ef s 	and	k_J % $100
66ef 66ef s 	jp	nz,down_l
66ef 66ef s ret_22:
66ef 66ef s   endif
66ef 66ef s 	endm
66ef 66ef s 	endm
66ef 66ef s 	key_l	31,k_M,b0
66ef 66ef s 	key	31,k_M,b0,down_l
66ef 66ef s   if parkey == 0
66ef 66ef s param_31:
66ef 66ef s   endif
66ef 66ef s 
66ef 66ef s   if parkey < 2
66ef 66ef d 6d03
66ef 66ef u 02 02
66ef 66ef s 	defw	st_b0
66f1 66f1 s   endif
66f1 66f1 s 
66f1 66f1 s   if parkey == 0
66f1 66f1 s 	defw	ret_31
66f1 66f1 s 	defw	$ff00+31
66f1 66f1 s   endif
66f1 66f1 s 
66f1 66f1 s   if parkey == 2
66f1 66f1 s 	cycle
66f1 66f1 s 	ld	sp,param_31
66f1 66f1 s 	; Waste 7+4
66f1 66f1 s 	nop
66f1 66f1 s 	ld	a,0
66f1 66f1 s 	ld	a,0		; waste we can eliminate?
66f1 66f1 s 	ld	a,(k_M >> 8)
66f1 66f1 s 	and	k_M % $100
66f1 66f1 s 	jp	nz,down_l
66f1 66f1 s ret_31:
66f1 66f1 s   endif
66f1 66f1 s 	endm
66f1 66f1 s 	endm
66f1 66f1 s 	key_l	32,k_comma,c1
66f1 66f1 s 	key	32,k_comma,c1,down_l
66f1 66f1 s   if parkey == 0
66f1 66f1 s param_32:
66f1 66f1 s   endif
66f1 66f1 s 
66f1 66f1 s   if parkey < 2
66f1 66f1 d aa03
66f1 66f1 u 02 02
66f1 66f1 s 	defw	st_c1
66f3 66f3 s   endif
66f3 66f3 s 
66f3 66f3 s   if parkey == 0
66f3 66f3 s 	defw	ret_32
66f3 66f3 s 	defw	$ff00+32
66f3 66f3 s   endif
66f3 66f3 s 
66f3 66f3 s   if parkey == 2
66f3 66f3 s 	cycle
66f3 66f3 s 	ld	sp,param_32
66f3 66f3 s 	; Waste 7+4
66f3 66f3 s 	nop
66f3 66f3 s 	ld	a,0
66f3 66f3 s 	ld	a,0		; waste we can eliminate?
66f3 66f3 s 	ld	a,(k_comma >> 8)
66f3 66f3 s 	and	k_comma % $100
66f3 66f3 s 	jp	nz,down_l
66f3 66f3 s ret_32:
66f3 66f3 s   endif
66f3 66f3 s 	endm
66f3 66f3 s 	endm
66f3 66f3 s 	key_l	23,k_L,c1@
66f3 66f3 s 	key	23,k_L,c1@,down_l
66f3 66f3 s   if parkey == 0
66f3 66f3 s param_23:
66f3 66f3 s   endif
66f3 66f3 s 
66f3 66f3 s   if parkey < 2
66f3 66f3 d e103
66f3 66f3 u 02 02
66f3 66f3 s 	defw	st_c1@
66f5 66f5 s   endif
66f5 66f5 s 
66f5 66f5 s   if parkey == 0
66f5 66f5 s 	defw	ret_23
66f5 66f5 s 	defw	$ff00+23
66f5 66f5 s   endif
66f5 66f5 s 
66f5 66f5 s   if parkey == 2
66f5 66f5 s 	cycle
66f5 66f5 s 	ld	sp,param_23
66f5 66f5 s 	; Waste 7+4
66f5 66f5 s 	nop
66f5 66f5 s 	ld	a,0
66f5 66f5 s 	ld	a,0		; waste we can eliminate?
66f5 66f5 s 	ld	a,(k_L >> 8)
66f5 66f5 s 	and	k_L % $100
66f5 66f5 s 	jp	nz,down_l
66f5 66f5 s ret_23:
66f5 66f5 s   endif
66f5 66f5 s 	endm
66f5 66f5 s 	endm
66f5 66f5 s 	key_l	33,k_dot,d1
66f5 66f5 s 	key	33,k_dot,d1,down_l
66f5 66f5 s   if parkey == 0
66f5 66f5 s param_33:
66f5 66f5 s   endif
66f5 66f5 s 
66f5 66f5 s   if parkey < 2
66f5 66f5 d 1b04
66f5 66f5 u 02 02
66f5 66f5 s 	defw	st_d1
66f7 66f7 s   endif
66f7 66f7 s 
66f7 66f7 s   if parkey == 0
66f7 66f7 s 	defw	ret_33
66f7 66f7 s 	defw	$ff00+33
66f7 66f7 s   endif
66f7 66f7 s 
66f7 66f7 s   if parkey == 2
66f7 66f7 s 	cycle
66f7 66f7 s 	ld	sp,param_33
66f7 66f7 s 	; Waste 7+4
66f7 66f7 s 	nop
66f7 66f7 s 	ld	a,0
66f7 66f7 s 	ld	a,0		; waste we can eliminate?
66f7 66f7 s 	ld	a,(k_dot >> 8)
66f7 66f7 s 	and	k_dot % $100
66f7 66f7 s 	jp	nz,down_l
66f7 66f7 s ret_33:
66f7 66f7 s   endif
66f7 66f7 s 	endm
66f7 66f7 s 	endm
66f7 66f7 s 	key_l	24,k_semi,d1@
66f7 66f7 s 	key	24,k_semi,d1@,down_l
66f7 66f7 s   if parkey == 0
66f7 66f7 s param_24:
66f7 66f7 s   endif
66f7 66f7 s 
66f7 66f7 s   if parkey < 2
66f7 66f7 d 5904
66f7 66f7 u 02 02
66f7 66f7 s 	defw	st_d1@
66f9 66f9 s   endif
66f9 66f9 s 
66f9 66f9 s   if parkey == 0
66f9 66f9 s 	defw	ret_24
66f9 66f9 s 	defw	$ff00+24
66f9 66f9 s   endif
66f9 66f9 s 
66f9 66f9 s   if parkey == 2
66f9 66f9 s 	cycle
66f9 66f9 s 	ld	sp,param_24
66f9 66f9 s 	; Waste 7+4
66f9 66f9 s 	nop
66f9 66f9 s 	ld	a,0
66f9 66f9 s 	ld	a,0		; waste we can eliminate?
66f9 66f9 s 	ld	a,(k_semi >> 8)
66f9 66f9 s 	and	k_semi % $100
66f9 66f9 s 	jp	nz,down_l
66f9 66f9 s ret_24:
66f9 66f9 s   endif
66f9 66f9 s 	endm
66f9 66f9 s 	endm
66f9 66f9 s 	key_l	34,k_slash,e1
66f9 66f9 s 	key	34,k_slash,e1,down_l
66f9 66f9 s   if parkey == 0
66f9 66f9 s param_34:
66f9 66f9 s   endif
66f9 66f9 s 
66f9 66f9 s   if parkey < 2
66f9 66f9 d 9a04
66f9 66f9 u 02 02
66f9 66f9 s 	defw	st_e1
66fb 66fb s   endif
66fb 66fb s 
66fb 66fb s   if parkey == 0
66fb 66fb s 	defw	ret_34
66fb 66fb s 	defw	$ff00+34
66fb 66fb s   endif
66fb 66fb s 
66fb 66fb s   if parkey == 2
66fb 66fb s 	cycle
66fb 66fb s 	ld	sp,param_34
66fb 66fb s 	; Waste 7+4
66fb 66fb s 	nop
66fb 66fb s 	ld	a,0
66fb 66fb s 	ld	a,0		; waste we can eliminate?
66fb 66fb s 	ld	a,(k_slash >> 8)
66fb 66fb s 	and	k_slash % $100
66fb 66fb s 	jp	nz,down_l
66fb 66fb s ret_34:
66fb 66fb s   endif
66fb 66fb s 	endm
66fb 66fb s 	endm
66fb 66fb s 
66fb 66fb s 	key_r	07,k_Q,c1
66fb 66fb s 	key	07,k_Q,c1,down_r
66fb 66fb s   if parkey == 0
66fb 66fb s param_07:
66fb 66fb s   endif
66fb 66fb s 
66fb 66fb s   if parkey < 2
66fb 66fb d aa03
66fb 66fb u 02 02
66fb 66fb s 	defw	st_c1
66fd 66fd s   endif
66fd 66fd s 
66fd 66fd s   if parkey == 0
66fd 66fd s 	defw	ret_07
66fd 66fd s 	defw	$ff00+07
66fd 66fd s   endif
66fd 66fd s 
66fd 66fd s   if parkey == 2
66fd 66fd s 	cycle
66fd 66fd s 	ld	sp,param_07
66fd 66fd s 	; Waste 7+4
66fd 66fd s 	nop
66fd 66fd s 	ld	a,0
66fd 66fd s 	ld	a,0		; waste we can eliminate?
66fd 66fd s 	ld	a,(k_Q >> 8)
66fd 66fd s 	and	k_Q % $100
66fd 66fd s 	jp	nz,down_r
66fd 66fd s ret_07:
66fd 66fd s   endif
66fd 66fd s 	endm
66fd 66fd s 	endm
66fd 66fd s 	key_r	00,k_2,c1@
66fd 66fd s 	key	00,k_2,c1@,down_r
66fd 66fd s   if parkey == 0
66fd 66fd s param_00:
66fd 66fd s   endif
66fd 66fd s 
66fd 66fd s   if parkey < 2
66fd 66fd d e103
66fd 66fd u 02 02
66fd 66fd s 	defw	st_c1@
66ff 66ff s   endif
66ff 66ff s 
66ff 66ff s   if parkey == 0
66ff 66ff s 	defw	ret_00
66ff 66ff s 	defw	$ff00+00
66ff 66ff s   endif
66ff 66ff s 
66ff 66ff s   if parkey == 2
66ff 66ff s 	cycle
66ff 66ff s 	ld	sp,param_00
66ff 66ff s 	; Waste 7+4
66ff 66ff s 	nop
66ff 66ff s 	ld	a,0
66ff 66ff s 	ld	a,0		; waste we can eliminate?
66ff 66ff s 	ld	a,(k_2 >> 8)
66ff 66ff s 	and	k_2 % $100
66ff 66ff s 	jp	nz,down_r
66ff 66ff s ret_00:
66ff 66ff s   endif
66ff 66ff s 	endm
66ff 66ff s 	endm
66ff 66ff s 	key_r	08,k_W,d1
66ff 66ff s 	key	08,k_W,d1,down_r
66ff 66ff s   if parkey == 0
66ff 66ff s param_08:
66ff 66ff s   endif
66ff 66ff s 
66ff 66ff s   if parkey < 2
66ff 66ff d 1b04
66ff 66ff u 02 02
66ff 66ff s 	defw	st_d1
6701 6701 s   endif
6701 6701 s 
6701 6701 s   if parkey == 0
6701 6701 s 	defw	ret_08
6701 6701 s 	defw	$ff00+08
6701 6701 s   endif
6701 6701 s 
6701 6701 s   if parkey == 2
6701 6701 s 	cycle
6701 6701 s 	ld	sp,param_08
6701 6701 s 	; Waste 7+4
6701 6701 s 	nop
6701 6701 s 	ld	a,0
6701 6701 s 	ld	a,0		; waste we can eliminate?
6701 6701 s 	ld	a,(k_W >> 8)
6701 6701 s 	and	k_W % $100
6701 6701 s 	jp	nz,down_r
6701 6701 s ret_08:
6701 6701 s   endif
6701 6701 s 	endm
6701 6701 s 	endm
6701 6701 s 	key_r	01,k_3,d1@
6701 6701 s 	key	01,k_3,d1@,down_r
6701 6701 s   if parkey == 0
6701 6701 s param_01:
6701 6701 s   endif
6701 6701 s 
6701 6701 s   if parkey < 2
6701 6701 d 5904
6701 6701 u 02 02
6701 6701 s 	defw	st_d1@
6703 6703 s   endif
6703 6703 s 
6703 6703 s   if parkey == 0
6703 6703 s 	defw	ret_01
6703 6703 s 	defw	$ff00+01
6703 6703 s   endif
6703 6703 s 
6703 6703 s   if parkey == 2
6703 6703 s 	cycle
6703 6703 s 	ld	sp,param_01
6703 6703 s 	; Waste 7+4
6703 6703 s 	nop
6703 6703 s 	ld	a,0
6703 6703 s 	ld	a,0		; waste we can eliminate?
6703 6703 s 	ld	a,(k_3 >> 8)
6703 6703 s 	and	k_3 % $100
6703 6703 s 	jp	nz,down_r
6703 6703 s ret_01:
6703 6703 s   endif
6703 6703 s 	endm
6703 6703 s 	endm
6703 6703 s 	key_r	09,k_E,e1
6703 6703 s 	key	09,k_E,e1,down_r
6703 6703 s   if parkey == 0
6703 6703 s param_09:
6703 6703 s   endif
6703 6703 s 
6703 6703 s   if parkey < 2
6703 6703 d 9a04
6703 6703 u 02 02
6703 6703 s 	defw	st_e1
6705 6705 s   endif
6705 6705 s 
6705 6705 s   if parkey == 0
6705 6705 s 	defw	ret_09
6705 6705 s 	defw	$ff00+09
6705 6705 s   endif
6705 6705 s 
6705 6705 s   if parkey == 2
6705 6705 s 	cycle
6705 6705 s 	ld	sp,param_09
6705 6705 s 	; Waste 7+4
6705 6705 s 	nop
6705 6705 s 	ld	a,0
6705 6705 s 	ld	a,0		; waste we can eliminate?
6705 6705 s 	ld	a,(k_E >> 8)
6705 6705 s 	and	k_E % $100
6705 6705 s 	jp	nz,down_r
6705 6705 s ret_09:
6705 6705 s   endif
6705 6705 s 	endm
6705 6705 s 	endm
6705 6705 s 	key_r	10,k_R,f1
6705 6705 s 	key	10,k_R,f1,down_r
6705 6705 s   if parkey == 0
6705 6705 s param_10:
6705 6705 s   endif
6705 6705 s 
6705 6705 s   if parkey < 2
6705 6705 d df04
6705 6705 u 02 02
6705 6705 s 	defw	st_f1
6707 6707 s   endif
6707 6707 s 
6707 6707 s   if parkey == 0
6707 6707 s 	defw	ret_10
6707 6707 s 	defw	$ff00+10
6707 6707 s   endif
6707 6707 s 
6707 6707 s   if parkey == 2
6707 6707 s 	cycle
6707 6707 s 	ld	sp,param_10
6707 6707 s 	; Waste 7+4
6707 6707 s 	nop
6707 6707 s 	ld	a,0
6707 6707 s 	ld	a,0		; waste we can eliminate?
6707 6707 s 	ld	a,(k_R >> 8)
6707 6707 s 	and	k_R % $100
6707 6707 s 	jp	nz,down_r
6707 6707 s ret_10:
6707 6707 s   endif
6707 6707 s 	endm
6707 6707 s 	endm
6707 6707 s 	key_r	02,k_5,f1@
6707 6707 s 	key	02,k_5,f1@,down_r
6707 6707 s   if parkey == 0
6707 6707 s param_02:
6707 6707 s   endif
6707 6707 s 
6707 6707 s   if parkey < 2
6707 6707 d 2805
6707 6707 u 02 02
6707 6707 s 	defw	st_f1@
6709 6709 s   endif
6709 6709 s 
6709 6709 s   if parkey == 0
6709 6709 s 	defw	ret_02
6709 6709 s 	defw	$ff00+02
6709 6709 s   endif
6709 6709 s 
6709 6709 s   if parkey == 2
6709 6709 s 	cycle
6709 6709 s 	ld	sp,param_02
6709 6709 s 	; Waste 7+4
6709 6709 s 	nop
6709 6709 s 	ld	a,0
6709 6709 s 	ld	a,0		; waste we can eliminate?
6709 6709 s 	ld	a,(k_5 >> 8)
6709 6709 s 	and	k_5 % $100
6709 6709 s 	jp	nz,down_r
6709 6709 s ret_02:
6709 6709 s   endif
6709 6709 s 	endm
6709 6709 s 	endm
6709 6709 s 	key_r	11,k_T,g1
6709 6709 s 	key	11,k_T,g1,down_r
6709 6709 s   if parkey == 0
6709 6709 s param_11:
6709 6709 s   endif
6709 6709 s 
6709 6709 s   if parkey < 2
6709 6709 d 7605
6709 6709 u 02 02
6709 6709 s 	defw	st_g1
670b 670b s   endif
670b 670b s 
670b 670b s   if parkey == 0
670b 670b s 	defw	ret_11
670b 670b s 	defw	$ff00+11
670b 670b s   endif
670b 670b s 
670b 670b s   if parkey == 2
670b 670b s 	cycle
670b 670b s 	ld	sp,param_11
670b 670b s 	; Waste 7+4
670b 670b s 	nop
670b 670b s 	ld	a,0
670b 670b s 	ld	a,0		; waste we can eliminate?
670b 670b s 	ld	a,(k_T >> 8)
670b 670b s 	and	k_T % $100
670b 670b s 	jp	nz,down_r
670b 670b s ret_11:
670b 670b s   endif
670b 670b s 	endm
670b 670b s 	endm
670b 670b s 	key_r	03,k_6,g1@
670b 670b s 	key	03,k_6,g1@,down_r
670b 670b s   if parkey == 0
670b 670b s param_03:
670b 670b s   endif
670b 670b s 
670b 670b s   if parkey < 2
670b 670b d c805
670b 670b u 02 02
670b 670b s 	defw	st_g1@
670d 670d s   endif
670d 670d s 
670d 670d s   if parkey == 0
670d 670d s 	defw	ret_03
670d 670d s 	defw	$ff00+03
670d 670d s   endif
670d 670d s 
670d 670d s   if parkey == 2
670d 670d s 	cycle
670d 670d s 	ld	sp,param_03
670d 670d s 	; Waste 7+4
670d 670d s 	nop
670d 670d s 	ld	a,0
670d 670d s 	ld	a,0		; waste we can eliminate?
670d 670d s 	ld	a,(k_6 >> 8)
670d 670d s 	and	k_6 % $100
670d 670d s 	jp	nz,down_r
670d 670d s ret_03:
670d 670d s   endif
670d 670d s 	endm
670d 670d s 	endm
670d 670d s 	key_r	12,k_Y,a1
670d 670d s 	key	12,k_Y,a1,down_r
670d 670d s   if parkey == 0
670d 670d s param_12:
670d 670d s   endif
670d 670d s 
670d 670d s   if parkey < 2
670d 670d d 1e06
670d 670d u 02 02
670d 670d s 	defw	st_a1
670f 670f s   endif
670f 670f s 
670f 670f s   if parkey == 0
670f 670f s 	defw	ret_12
670f 670f s 	defw	$ff00+12
670f 670f s   endif
670f 670f s 
670f 670f s   if parkey == 2
670f 670f s 	cycle
670f 670f s 	ld	sp,param_12
670f 670f s 	; Waste 7+4
670f 670f s 	nop
670f 670f s 	ld	a,0
670f 670f s 	ld	a,0		; waste we can eliminate?
670f 670f s 	ld	a,(k_Y >> 8)
670f 670f s 	and	k_Y % $100
670f 670f s 	jp	nz,down_r
670f 670f s ret_12:
670f 670f s   endif
670f 670f s 	endm
670f 670f s 	endm
670f 670f s 	key_r	04,k_7,a1@
670f 670f s 	key	04,k_7,a1@,down_r
670f 670f s   if parkey == 0
670f 670f s param_04:
670f 670f s   endif
670f 670f s 
670f 670f s   if parkey < 2
670f 670f d 7a06
670f 670f u 02 02
670f 670f s 	defw	st_a1@
6711 6711 s   endif
6711 6711 s 
6711 6711 s   if parkey == 0
6711 6711 s 	defw	ret_04
6711 6711 s 	defw	$ff00+04
6711 6711 s   endif
6711 6711 s 
6711 6711 s   if parkey == 2
6711 6711 s 	cycle
6711 6711 s 	ld	sp,param_04
6711 6711 s 	; Waste 7+4
6711 6711 s 	nop
6711 6711 s 	ld	a,0
6711 6711 s 	ld	a,0		; waste we can eliminate?
6711 6711 s 	ld	a,(k_7 >> 8)
6711 6711 s 	and	k_7 % $100
6711 6711 s 	jp	nz,down_r
6711 6711 s ret_04:
6711 6711 s   endif
6711 6711 s 	endm
6711 6711 s 	endm
6711 6711 s 	key_r	13,k_U,b1
6711 6711 s 	key	13,k_U,b1,down_r
6711 6711 s   if parkey == 0
6711 6711 s param_13:
6711 6711 s   endif
6711 6711 s 
6711 6711 s   if parkey < 2
6711 6711 d db06
6711 6711 u 02 02
6711 6711 s 	defw	st_b1
6713 6713 s   endif
6713 6713 s 
6713 6713 s   if parkey == 0
6713 6713 s 	defw	ret_13
6713 6713 s 	defw	$ff00+13
6713 6713 s   endif
6713 6713 s 
6713 6713 s   if parkey == 2
6713 6713 s 	cycle
6713 6713 s 	ld	sp,param_13
6713 6713 s 	; Waste 7+4
6713 6713 s 	nop
6713 6713 s 	ld	a,0
6713 6713 s 	ld	a,0		; waste we can eliminate?
6713 6713 s 	ld	a,(k_U >> 8)
6713 6713 s 	and	k_U % $100
6713 6713 s 	jp	nz,down_r
6713 6713 s ret_13:
6713 6713 s   endif
6713 6713 s 	endm
6713 6713 s 	endm
6713 6713 s 	key_r	14,k_I,c2
6713 6713 s 	key	14,k_I,c2,down_r
6713 6713 s   if parkey == 0
6713 6713 s param_14:
6713 6713 s   endif
6713 6713 s 
6713 6713 s   if parkey < 2
6713 6713 d 5507
6713 6713 u 02 02
6713 6713 s 	defw	st_c2
6715 6715 s   endif
6715 6715 s 
6715 6715 s   if parkey == 0
6715 6715 s 	defw	ret_14
6715 6715 s 	defw	$ff00+14
6715 6715 s   endif
6715 6715 s 
6715 6715 s   if parkey == 2
6715 6715 s 	cycle
6715 6715 s 	ld	sp,param_14
6715 6715 s 	; Waste 7+4
6715 6715 s 	nop
6715 6715 s 	ld	a,0
6715 6715 s 	ld	a,0		; waste we can eliminate?
6715 6715 s 	ld	a,(k_I >> 8)
6715 6715 s 	and	k_I % $100
6715 6715 s 	jp	nz,down_r
6715 6715 s ret_14:
6715 6715 s   endif
6715 6715 s 	endm
6715 6715 s 	endm
6715 6715 s 	key_r	05,k_9,c2@
6715 6715 s 	key	05,k_9,c2@,down_r
6715 6715 s   if parkey == 0
6715 6715 s param_05:
6715 6715 s   endif
6715 6715 s 
6715 6715 s   if parkey < 2
6715 6715 d c307
6715 6715 u 02 02
6715 6715 s 	defw	st_c2@
6717 6717 s   endif
6717 6717 s 
6717 6717 s   if parkey == 0
6717 6717 s 	defw	ret_05
6717 6717 s 	defw	$ff00+05
6717 6717 s   endif
6717 6717 s 
6717 6717 s   if parkey == 2
6717 6717 s 	cycle
6717 6717 s 	ld	sp,param_05
6717 6717 s 	; Waste 7+4
6717 6717 s 	nop
6717 6717 s 	ld	a,0
6717 6717 s 	ld	a,0		; waste we can eliminate?
6717 6717 s 	ld	a,(k_9 >> 8)
6717 6717 s 	and	k_9 % $100
6717 6717 s 	jp	nz,down_r
6717 6717 s ret_05:
6717 6717 s   endif
6717 6717 s 	endm
6717 6717 s 	endm
6717 6717 s 	key_r	15,k_O,d2
6717 6717 s 	key	15,k_O,d2,down_r
6717 6717 s   if parkey == 0
6717 6717 s param_15:
6717 6717 s   endif
6717 6717 s 
6717 6717 s   if parkey < 2
6717 6717 d 3708
6717 6717 u 02 02
6717 6717 s 	defw	st_d2
6719 6719 s   endif
6719 6719 s 
6719 6719 s   if parkey == 0
6719 6719 s 	defw	ret_15
6719 6719 s 	defw	$ff00+15
6719 6719 s   endif
6719 6719 s 
6719 6719 s   if parkey == 2
6719 6719 s 	cycle
6719 6719 s 	ld	sp,param_15
6719 6719 s 	; Waste 7+4
6719 6719 s 	nop
6719 6719 s 	ld	a,0
6719 6719 s 	ld	a,0		; waste we can eliminate?
6719 6719 s 	ld	a,(k_O >> 8)
6719 6719 s 	and	k_O % $100
6719 6719 s 	jp	nz,down_r
6719 6719 s ret_15:
6719 6719 s   endif
6719 6719 s 	endm
6719 6719 s 	endm
6719 6719 s 	key_r	06,k_0,d2@
6719 6719 s 	key	06,k_0,d2@,down_r
6719 6719 s   if parkey == 0
6719 6719 s param_06:
6719 6719 s   endif
6719 6719 s 
6719 6719 s   if parkey < 2
6719 6719 d b308
6719 6719 u 02 02
6719 6719 s 	defw	st_d2@
671b 671b s   endif
671b 671b s 
671b 671b s   if parkey == 0
671b 671b s 	defw	ret_06
671b 671b s 	defw	$ff00+06
671b 671b s   endif
671b 671b s 
671b 671b s   if parkey == 2
671b 671b s 	cycle
671b 671b s 	ld	sp,param_06
671b 671b s 	; Waste 7+4
671b 671b s 	nop
671b 671b s 	ld	a,0
671b 671b s 	ld	a,0		; waste we can eliminate?
671b 671b s 	ld	a,(k_0 >> 8)
671b 671b s 	and	k_0 % $100
671b 671b s 	jp	nz,down_r
671b 671b s ret_06:
671b 671b s   endif
671b 671b s 	endm
671b 671b s 	endm
671b 671b s 	key_r	16,k_P,e2
671b 671b s 	key	16,k_P,e2,down_r
671b 671b s   if parkey == 0
671b 671b s param_16:
671b 671b s   endif
671b 671b s 
671b 671b s   if parkey < 2
671b 671b d 3509
671b 671b u 02 02
671b 671b s 	defw	st_e2
671d 671d s   endif
671d 671d s 
671d 671d s   if parkey == 0
671d 671d s 	defw	ret_16
671d 671d s 	defw	$ff00+16
671d 671d s   endif
671d 671d s 
671d 671d s   if parkey == 2
671d 671d s 	cycle
671d 671d s 	ld	sp,param_16
671d 671d s 	; Waste 7+4
671d 671d s 	nop
671d 671d s 	ld	a,0
671d 671d s 	ld	a,0		; waste we can eliminate?
671d 671d s 	ld	a,(k_P >> 8)
671d 671d s 	and	k_P % $100
671d 671d s 	jp	nz,down_r
671d 671d s ret_16:
671d 671d s   endif
671d 671d s 	endm
671d 671d s 	endm
671d 671d s 	key_r	17,k_@,f2
671d 671d s 	key	17,k_@,f2,down_r
671d 671d s   if parkey == 0
671d 671d s param_17:
671d 671d s   endif
671d 671d s 
671d 671d s   if parkey < 2
671d 671d d bf09
671d 671d u 02 02
671d 671d s 	defw	st_f2
671f 671f s   endif
671f 671f s 
671f 671f s   if parkey == 0
671f 671f s 	defw	ret_17
671f 671f s 	defw	$ff00+17
671f 671f s   endif
671f 671f s 
671f 671f s   if parkey == 2
671f 671f s 	cycle
671f 671f s 	ld	sp,param_17
671f 671f s 	; Waste 7+4
671f 671f s 	nop
671f 671f s 	ld	a,0
671f 671f s 	ld	a,0		; waste we can eliminate?
671f 671f s 	ld	a,(k_@ >> 8)
671f 671f s 	and	k_@ % $100
671f 671f s 	jp	nz,down_r
671f 671f s ret_17:
671f 671f s   endif
671f 671f s 	endm
671f 671f s 	endm
671f 671f s 
671f 671f s 	key	35,k_A,null,wave_down_l
671f 671f s   if parkey == 0
671f 671f s param_35:
671f 671f s   endif
671f 671f s 
671f 671f s   if parkey < 2
671f 671f d 0000
671f 671f u 02 02
671f 671f s 	defw	st_null
6721 6721 s   endif
6721 6721 s 
6721 6721 s   if parkey == 0
6721 6721 s 	defw	ret_35
6721 6721 s 	defw	$ff00+35
6721 6721 s   endif
6721 6721 s 
6721 6721 s   if parkey == 2
6721 6721 s 	cycle
6721 6721 s 	ld	sp,param_35
6721 6721 s 	; Waste 7+4
6721 6721 s 	nop
6721 6721 s 	ld	a,0
6721 6721 s 	ld	a,0		; waste we can eliminate?
6721 6721 s 	ld	a,(k_A >> 8)
6721 6721 s 	and	k_A % $100
6721 6721 s 	jp	nz,wave_down_l
6721 6721 s ret_35:
6721 6721 s   endif
6721 6721 s 	endm
6721 6721 s 	key	36,k_1,null,wave_down_r
6721 6721 s   if parkey == 0
6721 6721 s param_36:
6721 6721 s   endif
6721 6721 s 
6721 6721 s   if parkey < 2
6721 6721 d 0000
6721 6721 u 02 02
6721 6721 s 	defw	st_null
6723 6723 s   endif
6723 6723 s 
6723 6723 s   if parkey == 0
6723 6723 s 	defw	ret_36
6723 6723 s 	defw	$ff00+36
6723 6723 s   endif
6723 6723 s 
6723 6723 s   if parkey == 2
6723 6723 s 	cycle
6723 6723 s 	ld	sp,param_36
6723 6723 s 	; Waste 7+4
6723 6723 s 	nop
6723 6723 s 	ld	a,0
6723 6723 s 	ld	a,0		; waste we can eliminate?
6723 6723 s 	ld	a,(k_1 >> 8)
6723 6723 s 	and	k_1 % $100
6723 6723 s 	jp	nz,wave_down_r
6723 6723 s ret_36:
6723 6723 s   endif
6723 6723 s 	endm
6723 6723 s 
6723 6723 s    if havevol
6723 6723 s 	key	37,k_up,null,vol_up_down_l
6723 6723 s   if parkey == 0
6723 6723 s param_37:
6723 6723 s   endif
6723 6723 s 
6723 6723 s   if parkey < 2
6723 6723 d 0000
6723 6723 u 02 02
6723 6723 s 	defw	st_null
6725 6725 s   endif
6725 6725 s 
6725 6725 s   if parkey == 0
6725 6725 s 	defw	ret_37
6725 6725 s 	defw	$ff00+37
6725 6725 s   endif
6725 6725 s 
6725 6725 s   if parkey == 2
6725 6725 s 	cycle
6725 6725 s 	ld	sp,param_37
6725 6725 s 	; Waste 7+4
6725 6725 s 	nop
6725 6725 s 	ld	a,0
6725 6725 s 	ld	a,0		; waste we can eliminate?
6725 6725 s 	ld	a,(k_up >> 8)
6725 6725 s 	and	k_up % $100
6725 6725 s 	jp	nz,vol_up_down_l
6725 6725 s ret_37:
6725 6725 s   endif
6725 6725 s 	endm
6725 6725 s 	key	38,k_down,null,vol_down_down_l
6725 6725 s   if parkey == 0
6725 6725 s param_38:
6725 6725 s   endif
6725 6725 s 
6725 6725 s   if parkey < 2
6725 6725 d 0000
6725 6725 u 02 02
6725 6725 s 	defw	st_null
6727 6727 s   endif
6727 6727 s 
6727 6727 s   if parkey == 0
6727 6727 s 	defw	ret_38
6727 6727 s 	defw	$ff00+38
6727 6727 s   endif
6727 6727 s 
6727 6727 s   if parkey == 2
6727 6727 s 	cycle
6727 6727 s 	ld	sp,param_38
6727 6727 s 	; Waste 7+4
6727 6727 s 	nop
6727 6727 s 	ld	a,0
6727 6727 s 	ld	a,0		; waste we can eliminate?
6727 6727 s 	ld	a,(k_down >> 8)
6727 6727 s 	and	k_down % $100
6727 6727 s 	jp	nz,vol_down_down_l
6727 6727 s ret_38:
6727 6727 s   endif
6727 6727 s 	endm
6727 6727 s 
6727 6727 s 	key	39,k_left,null,vol_up_down_r
6727 6727 s   if parkey == 0
6727 6727 s param_39:
6727 6727 s   endif
6727 6727 s 
6727 6727 s   if parkey < 2
6727 6727 d 0000
6727 6727 u 02 02
6727 6727 s 	defw	st_null
6729 6729 s   endif
6729 6729 s 
6729 6729 s   if parkey == 0
6729 6729 s 	defw	ret_39
6729 6729 s 	defw	$ff00+39
6729 6729 s   endif
6729 6729 s 
6729 6729 s   if parkey == 2
6729 6729 s 	cycle
6729 6729 s 	ld	sp,param_39
6729 6729 s 	; Waste 7+4
6729 6729 s 	nop
6729 6729 s 	ld	a,0
6729 6729 s 	ld	a,0		; waste we can eliminate?
6729 6729 s 	ld	a,(k_left >> 8)
6729 6729 s 	and	k_left % $100
6729 6729 s 	jp	nz,vol_up_down_r
6729 6729 s ret_39:
6729 6729 s   endif
6729 6729 s 	endm
6729 6729 s 	key	40,k_right,null,vol_down_down_r
6729 6729 s   if parkey == 0
6729 6729 s param_40:
6729 6729 s   endif
6729 6729 s 
6729 6729 s   if parkey < 2
6729 6729 d 0000
6729 6729 u 02 02
6729 6729 s 	defw	st_null
672b 672b s   endif
672b 672b s 
672b 672b s   if parkey == 0
672b 672b s 	defw	ret_40
672b 672b s 	defw	$ff00+40
672b 672b s   endif
672b 672b s 
672b 672b s   if parkey == 2
672b 672b s 	cycle
672b 672b s 	ld	sp,param_40
672b 672b s 	; Waste 7+4
672b 672b s 	nop
672b 672b s 	ld	a,0
672b 672b s 	ld	a,0		; waste we can eliminate?
672b 672b s 	ld	a,(k_right >> 8)
672b 672b s 	and	k_right % $100
672b 672b s 	jp	nz,vol_down_down_r
672b 672b s ret_40:
672b 672b s   endif
672b 672b s 	endm
672b 672b s    endif
672b 672b s 
672b 672b s 	endm
672b 672b s step3_size equ	($-step3_tab)/2
672b 672b s 
6730 6730 s 	org	($+15)/16*16	; 16 byte align
6730 6730 s ; These must be together and have entries for exact number of wave selections.
6730 6730 s wave_ind:
6730 6730 s wave_ind_r:
6730 6730 s 	defs	4 * 2
6738 6738 s wave_ind_l:
6738 6738 s 	defs	4 * 2
6740 6740 s 
6740 6740 s    if havevol
8000 8000 s 	org	($+16383)/16384*16384	; 16K align
8000 8000 s    else
8000 8000 s 	org	($+1023)/1024*1024	; 1024 byte align
8000 8000 s    endif
8000 8000 s 
8000 8000 s wavebnk:
8000 8000 s 	include	sine.inc
8000 8000 f sine.inc
8000 8000 s ;	for ($i = 0; $i < 256; $i++) {
8000 8000 s ;		push(@s, int(sin($i * 2 * 3.1415926 / 256) * 127));
8000 8000 s ;	}
8000 8000 s ;	for ($r = 0; $r < 256; $r += 16) {
8000 8000 s ;		print "\tdb\t";
8000 8000 s ;		print join(',', @s[$r .. $r + 15]);
8000 8000 s ;		print "\n";
8000 8000 s ;	}
8000 8000 s sine:
8000 8000 s ;# !Gperl sine.inc
8000 8000 d 000306090c0f1215181b1e2124272a2d
8000 8000 u 10 02
8000 8000 s 	db	0,3,6,9,12,15,18,21,24,27,30,33,36,39,42,45
8010 8010 d 303336393b3e414346494b4e50525557
8010 8010 u 10 02
8010 8010 s 	db	48,51,54,57,59,62,65,67,70,73,75,78,80,82,85,87
8020 8020 d 595b5e6062646667696b6c6e70717274
8020 8020 u 10 02
8020 8020 s 	db	89,91,94,96,98,100,102,103,105,107,108,110,112,113,114,116
8030 8030 d 75767778797a7b7b7c7d7d7e7e7e7e7e
8030 8030 u 10 02
8030 8030 s 	db	117,118,119,120,121,122,123,123,124,125,125,126,126,126,126,126
8040 8040 d 7e7e7e7e7e7e7d7d7c7b7b7a79787776
8040 8040 u 10 02
8040 8040 s 	db	126,126,126,126,126,126,125,125,124,123,123,122,121,120,119,118
8050 8050 d 75747271706e6c6b6967666462605e5b
8050 8050 u 10 02
8050 8050 s 	db	117,116,114,113,112,110,108,107,105,103,102,100,98,96,94,91
8060 8060 d 59575552504e4b494643413e3b393633
8060 8060 u 10 02
8060 8060 s 	db	89,87,85,82,80,78,75,73,70,67,65,62,59,57,54,51
8070 8070 d 302d2a2724211e1b1815120f0c090603
8070 8070 u 10 02
8070 8070 s 	db	48,45,42,39,36,33,30,27,24,21,18,15,12,9,6,3
8080 8080 d 00fdfaf7f4f1eeebe8e5e2dfdcd9d6d3
8080 8080 u 10 02
8080 8080 s 	db	0,-3,-6,-9,-12,-15,-18,-21,-24,-27,-30,-33,-36,-39,-42,-45
8090 8090 d d0cdcac7c5c2bfbdbab7b5b2b0aeaba9
8090 8090 u 10 02
8090 8090 s 	db	-48,-51,-54,-57,-59,-62,-65,-67,-70,-73,-75,-78,-80,-82,-85,-87
80a0 80a0 d a7a5a2a09e9c9a9997959492908f8e8c
80a0 80a0 u 10 02
80a0 80a0 s 	db	-89,-91,-94,-96,-98,-100,-102,-103,-105,-107,-108,-110,-112,-113,-114,-116
80b0 80b0 d 8b8a8988878685858483838282828282
80b0 80b0 u 10 02
80b0 80b0 s 	db	-117,-118,-119,-120,-121,-122,-123,-123,-124,-125,-125,-126,-126,-126,-126,-126
80c0 80c0 d 8282828282828383848585868788898a
80c0 80c0 u 10 02
80c0 80c0 s 	db	-126,-126,-126,-126,-126,-126,-125,-125,-124,-123,-123,-122,-121,-120,-119,-118
80d0 80d0 d 8b8c8e8f9092949597999a9c9ea0a2a5
80d0 80d0 u 10 02
80d0 80d0 s 	db	-117,-116,-114,-113,-112,-110,-108,-107,-105,-103,-102,-100,-98,-96,-94,-91
80e0 80e0 d a7a9abaeb0b2b5b7babdbfc2c5c7cacd
80e0 80e0 u 10 02
80e0 80e0 s 	db	-89,-87,-85,-82,-80,-78,-75,-73,-70,-67,-65,-62,-59,-57,-54,-51
80f0 80f0 d d0d3d6d9dcdfe2e5e8ebeef1f4f7fafd
80f0 80f0 u 10 02
80f0 80f0 s 	db	-48,-45,-42,-39,-36,-33,-30,-27,-24,-21,-18,-15,-12,-9,-6,-3
8100 8100 f storch.z
8100 8100 s 	assert	$ % 256 == 0
8100 8100 s square:
8100 8100 s 	dc	128,127
8100 8100 d 7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
8110 8110 d 7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
8120 8120 d 7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
8130 8130 d 7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
8140 8140 d 7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
8150 8150 d 7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
8160 8160 d 7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
8170 8170 d 7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f7f
8100 8100 u 80 02
8180 8180 s 	dc	128,$81		; zmac fails if -127; buggy?
8180 8180 d 81818181818181818181818181818181
8190 8190 d 81818181818181818181818181818181
81a0 81a0 d 81818181818181818181818181818181
81b0 81b0 d 81818181818181818181818181818181
81c0 81c0 d 81818181818181818181818181818181
81d0 81d0 d 81818181818181818181818181818181
81e0 81e0 d 81818181818181818181818181818181
81f0 81f0 d 81818181818181818181818181818181
8180 8180 u 80 02
8200 8200 s 
8200 8200 s 	assert	$ % 256 == 0
8200 8200 s triangle:
8200 8200 s 	smp = -128
8200 8200 s 	rept	127
8200 8200 s 		defb	smp
8200 8200 s 		smp += 2
8200 8200 s 	endm
8200 8200 d 80
8200 8200 u 01 02
8200 8200 s 		defb	smp
8201 8201 s 		smp += 2
8201 8201 s 	endm
8201 8201 d 82
8201 8201 u 01 02
8201 8201 s 		defb	smp
8202 8202 s 		smp += 2
8202 8202 s 	endm
8202 8202 d 84
8202 8202 u 01 02
8202 8202 s 		defb	smp
8203 8203 s 		smp += 2
8203 8203 s 	endm
8203 8203 d 86
8203 8203 u 01 02
8203 8203 s 		defb	smp
8204 8204 s 		smp += 2
8204 8204 s 	endm
8204 8204 d 88
8204 8204 u 01 02
8204 8204 s 		defb	smp
8205 8205 s 		smp += 2
8205 8205 s 	endm
8205 8205 d 8a
8205 8205 u 01 02
8205 8205 s 		defb	smp
8206 8206 s 		smp += 2
8206 8206 s 	endm
8206 8206 d 8c
8206 8206 u 01 02
8206 8206 s 		defb	smp
8207 8207 s 		smp += 2
8207 8207 s 	endm
8207 8207 d 8e
8207 8207 u 01 02
8207 8207 s 		defb	smp
8208 8208 s 		smp += 2
8208 8208 s 	endm
8208 8208 d 90
8208 8208 u 01 02
8208 8208 s 		defb	smp
8209 8209 s 		smp += 2
8209 8209 s 	endm
8209 8209 d 92
8209 8209 u 01 02
8209 8209 s 		defb	smp
820a 820a s 		smp += 2
820a 820a s 	endm
820a 820a d 94
820a 820a u 01 02
820a 820a s 		defb	smp
820b 820b s 		smp += 2
820b 820b s 	endm
820b 820b d 96
820b 820b u 01 02
820b 820b s 		defb	smp
820c 820c s 		smp += 2
820c 820c s 	endm
820c 820c d 98
820c 820c u 01 02
820c 820c s 		defb	smp
820d 820d s 		smp += 2
820d 820d s 	endm
820d 820d d 9a
820d 820d u 01 02
820d 820d s 		defb	smp
820e 820e s 		smp += 2
820e 820e s 	endm
820e 820e d 9c
820e 820e u 01 02
820e 820e s 		defb	smp
820f 820f s 		smp += 2
820f 820f s 	endm
820f 820f d 9e
820f 820f u 01 02
820f 820f s 		defb	smp
8210 8210 s 		smp += 2
8210 8210 s 	endm
8210 8210 d a0
8210 8210 u 01 02
8210 8210 s 		defb	smp
8211 8211 s 		smp += 2
8211 8211 s 	endm
8211 8211 d a2
8211 8211 u 01 02
8211 8211 s 		defb	smp
8212 8212 s 		smp += 2
8212 8212 s 	endm
8212 8212 d a4
8212 8212 u 01 02
8212 8212 s 		defb	smp
8213 8213 s 		smp += 2
8213 8213 s 	endm
8213 8213 d a6
8213 8213 u 01 02
8213 8213 s 		defb	smp
8214 8214 s 		smp += 2
8214 8214 s 	endm
8214 8214 d a8
8214 8214 u 01 02
8214 8214 s 		defb	smp
8215 8215 s 		smp += 2
8215 8215 s 	endm
8215 8215 d aa
8215 8215 u 01 02
8215 8215 s 		defb	smp
8216 8216 s 		smp += 2
8216 8216 s 	endm
8216 8216 d ac
8216 8216 u 01 02
8216 8216 s 		defb	smp
8217 8217 s 		smp += 2
8217 8217 s 	endm
8217 8217 d ae
8217 8217 u 01 02
8217 8217 s 		defb	smp
8218 8218 s 		smp += 2
8218 8218 s 	endm
8218 8218 d b0
8218 8218 u 01 02
8218 8218 s 		defb	smp
8219 8219 s 		smp += 2
8219 8219 s 	endm
8219 8219 d b2
8219 8219 u 01 02
8219 8219 s 		defb	smp
821a 821a s 		smp += 2
821a 821a s 	endm
821a 821a d b4
821a 821a u 01 02
821a 821a s 		defb	smp
821b 821b s 		smp += 2
821b 821b s 	endm
821b 821b d b6
821b 821b u 01 02
821b 821b s 		defb	smp
821c 821c s 		smp += 2
821c 821c s 	endm
821c 821c d b8
821c 821c u 01 02
821c 821c s 		defb	smp
821d 821d s 		smp += 2
821d 821d s 	endm
821d 821d d ba
821d 821d u 01 02
821d 821d s 		defb	smp
821e 821e s 		smp += 2
821e 821e s 	endm
821e 821e d bc
821e 821e u 01 02
821e 821e s 		defb	smp
821f 821f s 		smp += 2
821f 821f s 	endm
821f 821f d be
821f 821f u 01 02
821f 821f s 		defb	smp
8220 8220 s 		smp += 2
8220 8220 s 	endm
8220 8220 d c0
8220 8220 u 01 02
8220 8220 s 		defb	smp
8221 8221 s 		smp += 2
8221 8221 s 	endm
8221 8221 d c2
8221 8221 u 01 02
8221 8221 s 		defb	smp
8222 8222 s 		smp += 2
8222 8222 s 	endm
8222 8222 d c4
8222 8222 u 01 02
8222 8222 s 		defb	smp
8223 8223 s 		smp += 2
8223 8223 s 	endm
8223 8223 d c6
8223 8223 u 01 02
8223 8223 s 		defb	smp
8224 8224 s 		smp += 2
8224 8224 s 	endm
8224 8224 d c8
8224 8224 u 01 02
8224 8224 s 		defb	smp
8225 8225 s 		smp += 2
8225 8225 s 	endm
8225 8225 d ca
8225 8225 u 01 02
8225 8225 s 		defb	smp
8226 8226 s 		smp += 2
8226 8226 s 	endm
8226 8226 d cc
8226 8226 u 01 02
8226 8226 s 		defb	smp
8227 8227 s 		smp += 2
8227 8227 s 	endm
8227 8227 d ce
8227 8227 u 01 02
8227 8227 s 		defb	smp
8228 8228 s 		smp += 2
8228 8228 s 	endm
8228 8228 d d0
8228 8228 u 01 02
8228 8228 s 		defb	smp
8229 8229 s 		smp += 2
8229 8229 s 	endm
8229 8229 d d2
8229 8229 u 01 02
8229 8229 s 		defb	smp
822a 822a s 		smp += 2
822a 822a s 	endm
822a 822a d d4
822a 822a u 01 02
822a 822a s 		defb	smp
822b 822b s 		smp += 2
822b 822b s 	endm
822b 822b d d6
822b 822b u 01 02
822b 822b s 		defb	smp
822c 822c s 		smp += 2
822c 822c s 	endm
822c 822c d d8
822c 822c u 01 02
822c 822c s 		defb	smp
822d 822d s 		smp += 2
822d 822d s 	endm
822d 822d d da
822d 822d u 01 02
822d 822d s 		defb	smp
822e 822e s 		smp += 2
822e 822e s 	endm
822e 822e d dc
822e 822e u 01 02
822e 822e s 		defb	smp
822f 822f s 		smp += 2
822f 822f s 	endm
822f 822f d de
822f 822f u 01 02
822f 822f s 		defb	smp
8230 8230 s 		smp += 2
8230 8230 s 	endm
8230 8230 d e0
8230 8230 u 01 02
8230 8230 s 		defb	smp
8231 8231 s 		smp += 2
8231 8231 s 	endm
8231 8231 d e2
8231 8231 u 01 02
8231 8231 s 		defb	smp
8232 8232 s 		smp += 2
8232 8232 s 	endm
8232 8232 d e4
8232 8232 u 01 02
8232 8232 s 		defb	smp
8233 8233 s 		smp += 2
8233 8233 s 	endm
8233 8233 d e6
8233 8233 u 01 02
8233 8233 s 		defb	smp
8234 8234 s 		smp += 2
8234 8234 s 	endm
8234 8234 d e8
8234 8234 u 01 02
8234 8234 s 		defb	smp
8235 8235 s 		smp += 2
8235 8235 s 	endm
8235 8235 d ea
8235 8235 u 01 02
8235 8235 s 		defb	smp
8236 8236 s 		smp += 2
8236 8236 s 	endm
8236 8236 d ec
8236 8236 u 01 02
8236 8236 s 		defb	smp
8237 8237 s 		smp += 2
8237 8237 s 	endm
8237 8237 d ee
8237 8237 u 01 02
8237 8237 s 		defb	smp
8238 8238 s 		smp += 2
8238 8238 s 	endm
8238 8238 d f0
8238 8238 u 01 02
8238 8238 s 		defb	smp
8239 8239 s 		smp += 2
8239 8239 s 	endm
8239 8239 d f2
8239 8239 u 01 02
8239 8239 s 		defb	smp
823a 823a s 		smp += 2
823a 823a s 	endm
823a 823a d f4
823a 823a u 01 02
823a 823a s 		defb	smp
823b 823b s 		smp += 2
823b 823b s 	endm
823b 823b d f6
823b 823b u 01 02
823b 823b s 		defb	smp
823c 823c s 		smp += 2
823c 823c s 	endm
823c 823c d f8
823c 823c u 01 02
823c 823c s 		defb	smp
823d 823d s 		smp += 2
823d 823d s 	endm
823d 823d d fa
823d 823d u 01 02
823d 823d s 		defb	smp
823e 823e s 		smp += 2
823e 823e s 	endm
823e 823e d fc
823e 823e u 01 02
823e 823e s 		defb	smp
823f 823f s 		smp += 2
823f 823f s 	endm
823f 823f d fe
823f 823f u 01 02
823f 823f s 		defb	smp
8240 8240 s 		smp += 2
8240 8240 s 	endm
8240 8240 d 00
8240 8240 u 01 02
8240 8240 s 		defb	smp
8241 8241 s 		smp += 2
8241 8241 s 	endm
8241 8241 d 02
8241 8241 u 01 02
8241 8241 s 		defb	smp
8242 8242 s 		smp += 2
8242 8242 s 	endm
8242 8242 d 04
8242 8242 u 01 02
8242 8242 s 		defb	smp
8243 8243 s 		smp += 2
8243 8243 s 	endm
8243 8243 d 06
8243 8243 u 01 02
8243 8243 s 		defb	smp
8244 8244 s 		smp += 2
8244 8244 s 	endm
8244 8244 d 08
8244 8244 u 01 02
8244 8244 s 		defb	smp
8245 8245 s 		smp += 2
8245 8245 s 	endm
8245 8245 d 0a
8245 8245 u 01 02
8245 8245 s 		defb	smp
8246 8246 s 		smp += 2
8246 8246 s 	endm
8246 8246 d 0c
8246 8246 u 01 02
8246 8246 s 		defb	smp
8247 8247 s 		smp += 2
8247 8247 s 	endm
8247 8247 d 0e
8247 8247 u 01 02
8247 8247 s 		defb	smp
8248 8248 s 		smp += 2
8248 8248 s 	endm
8248 8248 d 10
8248 8248 u 01 02
8248 8248 s 		defb	smp
8249 8249 s 		smp += 2
8249 8249 s 	endm
8249 8249 d 12
8249 8249 u 01 02
8249 8249 s 		defb	smp
824a 824a s 		smp += 2
824a 824a s 	endm
824a 824a d 14
824a 824a u 01 02
824a 824a s 		defb	smp
824b 824b s 		smp += 2
824b 824b s 	endm
824b 824b d 16
824b 824b u 01 02
824b 824b s 		defb	smp
824c 824c s 		smp += 2
824c 824c s 	endm
824c 824c d 18
824c 824c u 01 02
824c 824c s 		defb	smp
824d 824d s 		smp += 2
824d 824d s 	endm
824d 824d d 1a
824d 824d u 01 02
824d 824d s 		defb	smp
824e 824e s 		smp += 2
824e 824e s 	endm
824e 824e d 1c
824e 824e u 01 02
824e 824e s 		defb	smp
824f 824f s 		smp += 2
824f 824f s 	endm
824f 824f d 1e
824f 824f u 01 02
824f 824f s 		defb	smp
8250 8250 s 		smp += 2
8250 8250 s 	endm
8250 8250 d 20
8250 8250 u 01 02
8250 8250 s 		defb	smp
8251 8251 s 		smp += 2
8251 8251 s 	endm
8251 8251 d 22
8251 8251 u 01 02
8251 8251 s 		defb	smp
8252 8252 s 		smp += 2
8252 8252 s 	endm
8252 8252 d 24
8252 8252 u 01 02
8252 8252 s 		defb	smp
8253 8253 s 		smp += 2
8253 8253 s 	endm
8253 8253 d 26
8253 8253 u 01 02
8253 8253 s 		defb	smp
8254 8254 s 		smp += 2
8254 8254 s 	endm
8254 8254 d 28
8254 8254 u 01 02
8254 8254 s 		defb	smp
8255 8255 s 		smp += 2
8255 8255 s 	endm
8255 8255 d 2a
8255 8255 u 01 02
8255 8255 s 		defb	smp
8256 8256 s 		smp += 2
8256 8256 s 	endm
8256 8256 d 2c
8256 8256 u 01 02
8256 8256 s 		defb	smp
8257 8257 s 		smp += 2
8257 8257 s 	endm
8257 8257 d 2e
8257 8257 u 01 02
8257 8257 s 		defb	smp
8258 8258 s 		smp += 2
8258 8258 s 	endm
8258 8258 d 30
8258 8258 u 01 02
8258 8258 s 		defb	smp
8259 8259 s 		smp += 2
8259 8259 s 	endm
8259 8259 d 32
8259 8259 u 01 02
8259 8259 s 		defb	smp
825a 825a s 		smp += 2
825a 825a s 	endm
825a 825a d 34
825a 825a u 01 02
825a 825a s 		defb	smp
825b 825b s 		smp += 2
825b 825b s 	endm
825b 825b d 36
825b 825b u 01 02
825b 825b s 		defb	smp
825c 825c s 		smp += 2
825c 825c s 	endm
825c 825c d 38
825c 825c u 01 02
825c 825c s 		defb	smp
825d 825d s 		smp += 2
825d 825d s 	endm
825d 825d d 3a
825d 825d u 01 02
825d 825d s 		defb	smp
825e 825e s 		smp += 2
825e 825e s 	endm
825e 825e d 3c
825e 825e u 01 02
825e 825e s 		defb	smp
825f 825f s 		smp += 2
825f 825f s 	endm
825f 825f d 3e
825f 825f u 01 02
825f 825f s 		defb	smp
8260 8260 s 		smp += 2
8260 8260 s 	endm
8260 8260 d 40
8260 8260 u 01 02
8260 8260 s 		defb	smp
8261 8261 s 		smp += 2
8261 8261 s 	endm
8261 8261 d 42
8261 8261 u 01 02
8261 8261 s 		defb	smp
8262 8262 s 		smp += 2
8262 8262 s 	endm
8262 8262 d 44
8262 8262 u 01 02
8262 8262 s 		defb	smp
8263 8263 s 		smp += 2
8263 8263 s 	endm
8263 8263 d 46
8263 8263 u 01 02
8263 8263 s 		defb	smp
8264 8264 s 		smp += 2
8264 8264 s 	endm
8264 8264 d 48
8264 8264 u 01 02
8264 8264 s 		defb	smp
8265 8265 s 		smp += 2
8265 8265 s 	endm
8265 8265 d 4a
8265 8265 u 01 02
8265 8265 s 		defb	smp
8266 8266 s 		smp += 2
8266 8266 s 	endm
8266 8266 d 4c
8266 8266 u 01 02
8266 8266 s 		defb	smp
8267 8267 s 		smp += 2
8267 8267 s 	endm
8267 8267 d 4e
8267 8267 u 01 02
8267 8267 s 		defb	smp
8268 8268 s 		smp += 2
8268 8268 s 	endm
8268 8268 d 50
8268 8268 u 01 02
8268 8268 s 		defb	smp
8269 8269 s 		smp += 2
8269 8269 s 	endm
8269 8269 d 52
8269 8269 u 01 02
8269 8269 s 		defb	smp
826a 826a s 		smp += 2
826a 826a s 	endm
826a 826a d 54
826a 826a u 01 02
826a 826a s 		defb	smp
826b 826b s 		smp += 2
826b 826b s 	endm
826b 826b d 56
826b 826b u 01 02
826b 826b s 		defb	smp
826c 826c s 		smp += 2
826c 826c s 	endm
826c 826c d 58
826c 826c u 01 02
826c 826c s 		defb	smp
826d 826d s 		smp += 2
826d 826d s 	endm
826d 826d d 5a
826d 826d u 01 02
826d 826d s 		defb	smp
826e 826e s 		smp += 2
826e 826e s 	endm
826e 826e d 5c
826e 826e u 01 02
826e 826e s 		defb	smp
826f 826f s 		smp += 2
826f 826f s 	endm
826f 826f d 5e
826f 826f u 01 02
826f 826f s 		defb	smp
8270 8270 s 		smp += 2
8270 8270 s 	endm
8270 8270 d 60
8270 8270 u 01 02
8270 8270 s 		defb	smp
8271 8271 s 		smp += 2
8271 8271 s 	endm
8271 8271 d 62
8271 8271 u 01 02
8271 8271 s 		defb	smp
8272 8272 s 		smp += 2
8272 8272 s 	endm
8272 8272 d 64
8272 8272 u 01 02
8272 8272 s 		defb	smp
8273 8273 s 		smp += 2
8273 8273 s 	endm
8273 8273 d 66
8273 8273 u 01 02
8273 8273 s 		defb	smp
8274 8274 s 		smp += 2
8274 8274 s 	endm
8274 8274 d 68
8274 8274 u 01 02
8274 8274 s 		defb	smp
8275 8275 s 		smp += 2
8275 8275 s 	endm
8275 8275 d 6a
8275 8275 u 01 02
8275 8275 s 		defb	smp
8276 8276 s 		smp += 2
8276 8276 s 	endm
8276 8276 d 6c
8276 8276 u 01 02
8276 8276 s 		defb	smp
8277 8277 s 		smp += 2
8277 8277 s 	endm
8277 8277 d 6e
8277 8277 u 01 02
8277 8277 s 		defb	smp
8278 8278 s 		smp += 2
8278 8278 s 	endm
8278 8278 d 70
8278 8278 u 01 02
8278 8278 s 		defb	smp
8279 8279 s 		smp += 2
8279 8279 s 	endm
8279 8279 d 72
8279 8279 u 01 02
8279 8279 s 		defb	smp
827a 827a s 		smp += 2
827a 827a s 	endm
827a 827a d 74
827a 827a u 01 02
827a 827a s 		defb	smp
827b 827b s 		smp += 2
827b 827b s 	endm
827b 827b d 76
827b 827b u 01 02
827b 827b s 		defb	smp
827c 827c s 		smp += 2
827c 827c s 	endm
827c 827c d 78
827c 827c u 01 02
827c 827c s 		defb	smp
827d 827d s 		smp += 2
827d 827d s 	endm
827d 827d d 7a
827d 827d u 01 02
827d 827d s 		defb	smp
827e 827e s 		smp += 2
827e 827e s 	endm
827e 827e d 7c
827e 827e u 01 02
827e 827e s 		defb	smp
827f 827f s 		smp += 2
827f 827f s 	endm
827f 827f s 
827f 827f s 	smp++
827f 827f d 7f
827f 827f u 01 02
827f 827f s 	defb	smp
8280 8280 s 
8280 8280 s 	rept	127
8280 8280 s 		defb	smp
8280 8280 s 		smp -= 2
8280 8280 s 	endm
8280 8280 d 7f
8280 8280 u 01 02
8280 8280 s 		defb	smp
8281 8281 s 		smp -= 2
8281 8281 s 	endm
8281 8281 d 7d
8281 8281 u 01 02
8281 8281 s 		defb	smp
8282 8282 s 		smp -= 2
8282 8282 s 	endm
8282 8282 d 7b
8282 8282 u 01 02
8282 8282 s 		defb	smp
8283 8283 s 		smp -= 2
8283 8283 s 	endm
8283 8283 d 79
8283 8283 u 01 02
8283 8283 s 		defb	smp
8284 8284 s 		smp -= 2
8284 8284 s 	endm
8284 8284 d 77
8284 8284 u 01 02
8284 8284 s 		defb	smp
8285 8285 s 		smp -= 2
8285 8285 s 	endm
8285 8285 d 75
8285 8285 u 01 02
8285 8285 s 		defb	smp
8286 8286 s 		smp -= 2
8286 8286 s 	endm
8286 8286 d 73
8286 8286 u 01 02
8286 8286 s 		defb	smp
8287 8287 s 		smp -= 2
8287 8287 s 	endm
8287 8287 d 71
8287 8287 u 01 02
8287 8287 s 		defb	smp
8288 8288 s 		smp -= 2
8288 8288 s 	endm
8288 8288 d 6f
8288 8288 u 01 02
8288 8288 s 		defb	smp
8289 8289 s 		smp -= 2
8289 8289 s 	endm
8289 8289 d 6d
8289 8289 u 01 02
8289 8289 s 		defb	smp
828a 828a s 		smp -= 2
828a 828a s 	endm
828a 828a d 6b
828a 828a u 01 02
828a 828a s 		defb	smp
828b 828b s 		smp -= 2
828b 828b s 	endm
828b 828b d 69
828b 828b u 01 02
828b 828b s 		defb	smp
828c 828c s 		smp -= 2
828c 828c s 	endm
828c 828c d 67
828c 828c u 01 02
828c 828c s 		defb	smp
828d 828d s 		smp -= 2
828d 828d s 	endm
828d 828d d 65
828d 828d u 01 02
828d 828d s 		defb	smp
828e 828e s 		smp -= 2
828e 828e s 	endm
828e 828e d 63
828e 828e u 01 02
828e 828e s 		defb	smp
828f 828f s 		smp -= 2
828f 828f s 	endm
828f 828f d 61
828f 828f u 01 02
828f 828f s 		defb	smp
8290 8290 s 		smp -= 2
8290 8290 s 	endm
8290 8290 d 5f
8290 8290 u 01 02
8290 8290 s 		defb	smp
8291 8291 s 		smp -= 2
8291 8291 s 	endm
8291 8291 d 5d
8291 8291 u 01 02
8291 8291 s 		defb	smp
8292 8292 s 		smp -= 2
8292 8292 s 	endm
8292 8292 d 5b
8292 8292 u 01 02
8292 8292 s 		defb	smp
8293 8293 s 		smp -= 2
8293 8293 s 	endm
8293 8293 d 59
8293 8293 u 01 02
8293 8293 s 		defb	smp
8294 8294 s 		smp -= 2
8294 8294 s 	endm
8294 8294 d 57
8294 8294 u 01 02
8294 8294 s 		defb	smp
8295 8295 s 		smp -= 2
8295 8295 s 	endm
8295 8295 d 55
8295 8295 u 01 02
8295 8295 s 		defb	smp
8296 8296 s 		smp -= 2
8296 8296 s 	endm
8296 8296 d 53
8296 8296 u 01 02
8296 8296 s 		defb	smp
8297 8297 s 		smp -= 2
8297 8297 s 	endm
8297 8297 d 51
8297 8297 u 01 02
8297 8297 s 		defb	smp
8298 8298 s 		smp -= 2
8298 8298 s 	endm
8298 8298 d 4f
8298 8298 u 01 02
8298 8298 s 		defb	smp
8299 8299 s 		smp -= 2
8299 8299 s 	endm
8299 8299 d 4d
8299 8299 u 01 02
8299 8299 s 		defb	smp
829a 829a s 		smp -= 2
829a 829a s 	endm
829a 829a d 4b
829a 829a u 01 02
829a 829a s 		defb	smp
829b 829b s 		smp -= 2
829b 829b s 	endm
829b 829b d 49
829b 829b u 01 02
829b 829b s 		defb	smp
829c 829c s 		smp -= 2
829c 829c s 	endm
829c 829c d 47
829c 829c u 01 02
829c 829c s 		defb	smp
829d 829d s 		smp -= 2
829d 829d s 	endm
829d 829d d 45
829d 829d u 01 02
829d 829d s 		defb	smp
829e 829e s 		smp -= 2
829e 829e s 	endm
829e 829e d 43
829e 829e u 01 02
829e 829e s 		defb	smp
829f 829f s 		smp -= 2
829f 829f s 	endm
829f 829f d 41
829f 829f u 01 02
829f 829f s 		defb	smp
82a0 82a0 s 		smp -= 2
82a0 82a0 s 	endm
82a0 82a0 d 3f
82a0 82a0 u 01 02
82a0 82a0 s 		defb	smp
82a1 82a1 s 		smp -= 2
82a1 82a1 s 	endm
82a1 82a1 d 3d
82a1 82a1 u 01 02
82a1 82a1 s 		defb	smp
82a2 82a2 s 		smp -= 2
82a2 82a2 s 	endm
82a2 82a2 d 3b
82a2 82a2 u 01 02
82a2 82a2 s 		defb	smp
82a3 82a3 s 		smp -= 2
82a3 82a3 s 	endm
82a3 82a3 d 39
82a3 82a3 u 01 02
82a3 82a3 s 		defb	smp
82a4 82a4 s 		smp -= 2
82a4 82a4 s 	endm
82a4 82a4 d 37
82a4 82a4 u 01 02
82a4 82a4 s 		defb	smp
82a5 82a5 s 		smp -= 2
82a5 82a5 s 	endm
82a5 82a5 d 35
82a5 82a5 u 01 02
82a5 82a5 s 		defb	smp
82a6 82a6 s 		smp -= 2
82a6 82a6 s 	endm
82a6 82a6 d 33
82a6 82a6 u 01 02
82a6 82a6 s 		defb	smp
82a7 82a7 s 		smp -= 2
82a7 82a7 s 	endm
82a7 82a7 d 31
82a7 82a7 u 01 02
82a7 82a7 s 		defb	smp
82a8 82a8 s 		smp -= 2
82a8 82a8 s 	endm
82a8 82a8 d 2f
82a8 82a8 u 01 02
82a8 82a8 s 		defb	smp
82a9 82a9 s 		smp -= 2
82a9 82a9 s 	endm
82a9 82a9 d 2d
82a9 82a9 u 01 02
82a9 82a9 s 		defb	smp
82aa 82aa s 		smp -= 2
82aa 82aa s 	endm
82aa 82aa d 2b
82aa 82aa u 01 02
82aa 82aa s 		defb	smp
82ab 82ab s 		smp -= 2
82ab 82ab s 	endm
82ab 82ab d 29
82ab 82ab u 01 02
82ab 82ab s 		defb	smp
82ac 82ac s 		smp -= 2
82ac 82ac s 	endm
82ac 82ac d 27
82ac 82ac u 01 02
82ac 82ac s 		defb	smp
82ad 82ad s 		smp -= 2
82ad 82ad s 	endm
82ad 82ad d 25
82ad 82ad u 01 02
82ad 82ad s 		defb	smp
82ae 82ae s 		smp -= 2
82ae 82ae s 	endm
82ae 82ae d 23
82ae 82ae u 01 02
82ae 82ae s 		defb	smp
82af 82af s 		smp -= 2
82af 82af s 	endm
82af 82af d 21
82af 82af u 01 02
82af 82af s 		defb	smp
82b0 82b0 s 		smp -= 2
82b0 82b0 s 	endm
82b0 82b0 d 1f
82b0 82b0 u 01 02
82b0 82b0 s 		defb	smp
82b1 82b1 s 		smp -= 2
82b1 82b1 s 	endm
82b1 82b1 d 1d
82b1 82b1 u 01 02
82b1 82b1 s 		defb	smp
82b2 82b2 s 		smp -= 2
82b2 82b2 s 	endm
82b2 82b2 d 1b
82b2 82b2 u 01 02
82b2 82b2 s 		defb	smp
82b3 82b3 s 		smp -= 2
82b3 82b3 s 	endm
82b3 82b3 d 19
82b3 82b3 u 01 02
82b3 82b3 s 		defb	smp
82b4 82b4 s 		smp -= 2
82b4 82b4 s 	endm
82b4 82b4 d 17
82b4 82b4 u 01 02
82b4 82b4 s 		defb	smp
82b5 82b5 s 		smp -= 2
82b5 82b5 s 	endm
82b5 82b5 d 15
82b5 82b5 u 01 02
82b5 82b5 s 		defb	smp
82b6 82b6 s 		smp -= 2
82b6 82b6 s 	endm
82b6 82b6 d 13
82b6 82b6 u 01 02
82b6 82b6 s 		defb	smp
82b7 82b7 s 		smp -= 2
82b7 82b7 s 	endm
82b7 82b7 d 11
82b7 82b7 u 01 02
82b7 82b7 s 		defb	smp
82b8 82b8 s 		smp -= 2
82b8 82b8 s 	endm
82b8 82b8 d 0f
82b8 82b8 u 01 02
82b8 82b8 s 		defb	smp
82b9 82b9 s 		smp -= 2
82b9 82b9 s 	endm
82b9 82b9 d 0d
82b9 82b9 u 01 02
82b9 82b9 s 		defb	smp
82ba 82ba s 		smp -= 2
82ba 82ba s 	endm
82ba 82ba d 0b
82ba 82ba u 01 02
82ba 82ba s 		defb	smp
82bb 82bb s 		smp -= 2
82bb 82bb s 	endm
82bb 82bb d 09
82bb 82bb u 01 02
82bb 82bb s 		defb	smp
82bc 82bc s 		smp -= 2
82bc 82bc s 	endm
82bc 82bc d 07
82bc 82bc u 01 02
82bc 82bc s 		defb	smp
82bd 82bd s 		smp -= 2
82bd 82bd s 	endm
82bd 82bd d 05
82bd 82bd u 01 02
82bd 82bd s 		defb	smp
82be 82be s 		smp -= 2
82be 82be s 	endm
82be 82be d 03
82be 82be u 01 02
82be 82be s 		defb	smp
82bf 82bf s 		smp -= 2
82bf 82bf s 	endm
82bf 82bf d 01
82bf 82bf u 01 02
82bf 82bf s 		defb	smp
82c0 82c0 s 		smp -= 2
82c0 82c0 s 	endm
82c0 82c0 d ff
82c0 82c0 u 01 02
82c0 82c0 s 		defb	smp
82c1 82c1 s 		smp -= 2
82c1 82c1 s 	endm
82c1 82c1 d fd
82c1 82c1 u 01 02
82c1 82c1 s 		defb	smp
82c2 82c2 s 		smp -= 2
82c2 82c2 s 	endm
82c2 82c2 d fb
82c2 82c2 u 01 02
82c2 82c2 s 		defb	smp
82c3 82c3 s 		smp -= 2
82c3 82c3 s 	endm
82c3 82c3 d f9
82c3 82c3 u 01 02
82c3 82c3 s 		defb	smp
82c4 82c4 s 		smp -= 2
82c4 82c4 s 	endm
82c4 82c4 d f7
82c4 82c4 u 01 02
82c4 82c4 s 		defb	smp
82c5 82c5 s 		smp -= 2
82c5 82c5 s 	endm
82c5 82c5 d f5
82c5 82c5 u 01 02
82c5 82c5 s 		defb	smp
82c6 82c6 s 		smp -= 2
82c6 82c6 s 	endm
82c6 82c6 d f3
82c6 82c6 u 01 02
82c6 82c6 s 		defb	smp
82c7 82c7 s 		smp -= 2
82c7 82c7 s 	endm
82c7 82c7 d f1
82c7 82c7 u 01 02
82c7 82c7 s 		defb	smp
82c8 82c8 s 		smp -= 2
82c8 82c8 s 	endm
82c8 82c8 d ef
82c8 82c8 u 01 02
82c8 82c8 s 		defb	smp
82c9 82c9 s 		smp -= 2
82c9 82c9 s 	endm
82c9 82c9 d ed
82c9 82c9 u 01 02
82c9 82c9 s 		defb	smp
82ca 82ca s 		smp -= 2
82ca 82ca s 	endm
82ca 82ca d eb
82ca 82ca u 01 02
82ca 82ca s 		defb	smp
82cb 82cb s 		smp -= 2
82cb 82cb s 	endm
82cb 82cb d e9
82cb 82cb u 01 02
82cb 82cb s 		defb	smp
82cc 82cc s 		smp -= 2
82cc 82cc s 	endm
82cc 82cc d e7
82cc 82cc u 01 02
82cc 82cc s 		defb	smp
82cd 82cd s 		smp -= 2
82cd 82cd s 	endm
82cd 82cd d e5
82cd 82cd u 01 02
82cd 82cd s 		defb	smp
82ce 82ce s 		smp -= 2
82ce 82ce s 	endm
82ce 82ce d e3
82ce 82ce u 01 02
82ce 82ce s 		defb	smp
82cf 82cf s 		smp -= 2
82cf 82cf s 	endm
82cf 82cf d e1
82cf 82cf u 01 02
82cf 82cf s 		defb	smp
82d0 82d0 s 		smp -= 2
82d0 82d0 s 	endm
82d0 82d0 d df
82d0 82d0 u 01 02
82d0 82d0 s 		defb	smp
82d1 82d1 s 		smp -= 2
82d1 82d1 s 	endm
82d1 82d1 d dd
82d1 82d1 u 01 02
82d1 82d1 s 		defb	smp
82d2 82d2 s 		smp -= 2
82d2 82d2 s 	endm
82d2 82d2 d db
82d2 82d2 u 01 02
82d2 82d2 s 		defb	smp
82d3 82d3 s 		smp -= 2
82d3 82d3 s 	endm
82d3 82d3 d d9
82d3 82d3 u 01 02
82d3 82d3 s 		defb	smp
82d4 82d4 s 		smp -= 2
82d4 82d4 s 	endm
82d4 82d4 d d7
82d4 82d4 u 01 02
82d4 82d4 s 		defb	smp
82d5 82d5 s 		smp -= 2
82d5 82d5 s 	endm
82d5 82d5 d d5
82d5 82d5 u 01 02
82d5 82d5 s 		defb	smp
82d6 82d6 s 		smp -= 2
82d6 82d6 s 	endm
82d6 82d6 d d3
82d6 82d6 u 01 02
82d6 82d6 s 		defb	smp
82d7 82d7 s 		smp -= 2
82d7 82d7 s 	endm
82d7 82d7 d d1
82d7 82d7 u 01 02
82d7 82d7 s 		defb	smp
82d8 82d8 s 		smp -= 2
82d8 82d8 s 	endm
82d8 82d8 d cf
82d8 82d8 u 01 02
82d8 82d8 s 		defb	smp
82d9 82d9 s 		smp -= 2
82d9 82d9 s 	endm
82d9 82d9 d cd
82d9 82d9 u 01 02
82d9 82d9 s 		defb	smp
82da 82da s 		smp -= 2
82da 82da s 	endm
82da 82da d cb
82da 82da u 01 02
82da 82da s 		defb	smp
82db 82db s 		smp -= 2
82db 82db s 	endm
82db 82db d c9
82db 82db u 01 02
82db 82db s 		defb	smp
82dc 82dc s 		smp -= 2
82dc 82dc s 	endm
82dc 82dc d c7
82dc 82dc u 01 02
82dc 82dc s 		defb	smp
82dd 82dd s 		smp -= 2
82dd 82dd s 	endm
82dd 82dd d c5
82dd 82dd u 01 02
82dd 82dd s 		defb	smp
82de 82de s 		smp -= 2
82de 82de s 	endm
82de 82de d c3
82de 82de u 01 02
82de 82de s 		defb	smp
82df 82df s 		smp -= 2
82df 82df s 	endm
82df 82df d c1
82df 82df u 01 02
82df 82df s 		defb	smp
82e0 82e0 s 		smp -= 2
82e0 82e0 s 	endm
82e0 82e0 d bf
82e0 82e0 u 01 02
82e0 82e0 s 		defb	smp
82e1 82e1 s 		smp -= 2
82e1 82e1 s 	endm
82e1 82e1 d bd
82e1 82e1 u 01 02
82e1 82e1 s 		defb	smp
82e2 82e2 s 		smp -= 2
82e2 82e2 s 	endm
82e2 82e2 d bb
82e2 82e2 u 01 02
82e2 82e2 s 		defb	smp
82e3 82e3 s 		smp -= 2
82e3 82e3 s 	endm
82e3 82e3 d b9
82e3 82e3 u 01 02
82e3 82e3 s 		defb	smp
82e4 82e4 s 		smp -= 2
82e4 82e4 s 	endm
82e4 82e4 d b7
82e4 82e4 u 01 02
82e4 82e4 s 		defb	smp
82e5 82e5 s 		smp -= 2
82e5 82e5 s 	endm
82e5 82e5 d b5
82e5 82e5 u 01 02
82e5 82e5 s 		defb	smp
82e6 82e6 s 		smp -= 2
82e6 82e6 s 	endm
82e6 82e6 d b3
82e6 82e6 u 01 02
82e6 82e6 s 		defb	smp
82e7 82e7 s 		smp -= 2
82e7 82e7 s 	endm
82e7 82e7 d b1
82e7 82e7 u 01 02
82e7 82e7 s 		defb	smp
82e8 82e8 s 		smp -= 2
82e8 82e8 s 	endm
82e8 82e8 d af
82e8 82e8 u 01 02
82e8 82e8 s 		defb	smp
82e9 82e9 s 		smp -= 2
82e9 82e9 s 	endm
82e9 82e9 d ad
82e9 82e9 u 01 02
82e9 82e9 s 		defb	smp
82ea 82ea s 		smp -= 2
82ea 82ea s 	endm
82ea 82ea d ab
82ea 82ea u 01 02
82ea 82ea s 		defb	smp
82eb 82eb s 		smp -= 2
82eb 82eb s 	endm
82eb 82eb d a9
82eb 82eb u 01 02
82eb 82eb s 		defb	smp
82ec 82ec s 		smp -= 2
82ec 82ec s 	endm
82ec 82ec d a7
82ec 82ec u 01 02
82ec 82ec s 		defb	smp
82ed 82ed s 		smp -= 2
82ed 82ed s 	endm
82ed 82ed d a5
82ed 82ed u 01 02
82ed 82ed s 		defb	smp
82ee 82ee s 		smp -= 2
82ee 82ee s 	endm
82ee 82ee d a3
82ee 82ee u 01 02
82ee 82ee s 		defb	smp
82ef 82ef s 		smp -= 2
82ef 82ef s 	endm
82ef 82ef d a1
82ef 82ef u 01 02
82ef 82ef s 		defb	smp
82f0 82f0 s 		smp -= 2
82f0 82f0 s 	endm
82f0 82f0 d 9f
82f0 82f0 u 01 02
82f0 82f0 s 		defb	smp
82f1 82f1 s 		smp -= 2
82f1 82f1 s 	endm
82f1 82f1 d 9d
82f1 82f1 u 01 02
82f1 82f1 s 		defb	smp
82f2 82f2 s 		smp -= 2
82f2 82f2 s 	endm
82f2 82f2 d 9b
82f2 82f2 u 01 02
82f2 82f2 s 		defb	smp
82f3 82f3 s 		smp -= 2
82f3 82f3 s 	endm
82f3 82f3 d 99
82f3 82f3 u 01 02
82f3 82f3 s 		defb	smp
82f4 82f4 s 		smp -= 2
82f4 82f4 s 	endm
82f4 82f4 d 97
82f4 82f4 u 01 02
82f4 82f4 s 		defb	smp
82f5 82f5 s 		smp -= 2
82f5 82f5 s 	endm
82f5 82f5 d 95
82f5 82f5 u 01 02
82f5 82f5 s 		defb	smp
82f6 82f6 s 		smp -= 2
82f6 82f6 s 	endm
82f6 82f6 d 93
82f6 82f6 u 01 02
82f6 82f6 s 		defb	smp
82f7 82f7 s 		smp -= 2
82f7 82f7 s 	endm
82f7 82f7 d 91
82f7 82f7 u 01 02
82f7 82f7 s 		defb	smp
82f8 82f8 s 		smp -= 2
82f8 82f8 s 	endm
82f8 82f8 d 8f
82f8 82f8 u 01 02
82f8 82f8 s 		defb	smp
82f9 82f9 s 		smp -= 2
82f9 82f9 s 	endm
82f9 82f9 d 8d
82f9 82f9 u 01 02
82f9 82f9 s 		defb	smp
82fa 82fa s 		smp -= 2
82fa 82fa s 	endm
82fa 82fa d 8b
82fa 82fa u 01 02
82fa 82fa s 		defb	smp
82fb 82fb s 		smp -= 2
82fb 82fb s 	endm
82fb 82fb d 89
82fb 82fb u 01 02
82fb 82fb s 		defb	smp
82fc 82fc s 		smp -= 2
82fc 82fc s 	endm
82fc 82fc d 87
82fc 82fc u 01 02
82fc 82fc s 		defb	smp
82fd 82fd s 		smp -= 2
82fd 82fd s 	endm
82fd 82fd d 85
82fd 82fd u 01 02
82fd 82fd s 		defb	smp
82fe 82fe s 		smp -= 2
82fe 82fe s 	endm
82fe 82fe d 83
82fe 82fe u 01 02
82fe 82fe s 		defb	smp
82ff 82ff s 		smp -= 2
82ff 82ff s 	endm
82ff 82ff d 80
82ff 82ff u 01 02
82ff 82ff s 	defb	-128
8300 8300 s 
8300 8300 s 	assert	$ % 256 == 0
8300 8300 s saw:	
8300 8300 s 	smp = 0
8300 8300 s 	rept 	256
8300 8300 s 		defb	smp
8300 8300 s 		smp++
8300 8300 s 	endm
8300 8300 d 00
8300 8300 u 01 02
8300 8300 s 		defb	smp
8301 8301 s 		smp++
8301 8301 s 	endm
8301 8301 d 01
8301 8301 u 01 02
8301 8301 s 		defb	smp
8302 8302 s 		smp++
8302 8302 s 	endm
8302 8302 d 02
8302 8302 u 01 02
8302 8302 s 		defb	smp
8303 8303 s 		smp++
8303 8303 s 	endm
8303 8303 d 03
8303 8303 u 01 02
8303 8303 s 		defb	smp
8304 8304 s 		smp++
8304 8304 s 	endm
8304 8304 d 04
8304 8304 u 01 02
8304 8304 s 		defb	smp
8305 8305 s 		smp++
8305 8305 s 	endm
8305 8305 d 05
8305 8305 u 01 02
8305 8305 s 		defb	smp
8306 8306 s 		smp++
8306 8306 s 	endm
8306 8306 d 06
8306 8306 u 01 02
8306 8306 s 		defb	smp
8307 8307 s 		smp++
8307 8307 s 	endm
8307 8307 d 07
8307 8307 u 01 02
8307 8307 s 		defb	smp
8308 8308 s 		smp++
8308 8308 s 	endm
8308 8308 d 08
8308 8308 u 01 02
8308 8308 s 		defb	smp
8309 8309 s 		smp++
8309 8309 s 	endm
8309 8309 d 09
8309 8309 u 01 02
8309 8309 s 		defb	smp
830a 830a s 		smp++
830a 830a s 	endm
830a 830a d 0a
830a 830a u 01 02
830a 830a s 		defb	smp
830b 830b s 		smp++
830b 830b s 	endm
830b 830b d 0b
830b 830b u 01 02
830b 830b s 		defb	smp
830c 830c s 		smp++
830c 830c s 	endm
830c 830c d 0c
830c 830c u 01 02
830c 830c s 		defb	smp
830d 830d s 		smp++
830d 830d s 	endm
830d 830d d 0d
830d 830d u 01 02
830d 830d s 		defb	smp
830e 830e s 		smp++
830e 830e s 	endm
830e 830e d 0e
830e 830e u 01 02
830e 830e s 		defb	smp
830f 830f s 		smp++
830f 830f s 	endm
830f 830f d 0f
830f 830f u 01 02
830f 830f s 		defb	smp
8310 8310 s 		smp++
8310 8310 s 	endm
8310 8310 d 10
8310 8310 u 01 02
8310 8310 s 		defb	smp
8311 8311 s 		smp++
8311 8311 s 	endm
8311 8311 d 11
8311 8311 u 01 02
8311 8311 s 		defb	smp
8312 8312 s 		smp++
8312 8312 s 	endm
8312 8312 d 12
8312 8312 u 01 02
8312 8312 s 		defb	smp
8313 8313 s 		smp++
8313 8313 s 	endm
8313 8313 d 13
8313 8313 u 01 02
8313 8313 s 		defb	smp
8314 8314 s 		smp++
8314 8314 s 	endm
8314 8314 d 14
8314 8314 u 01 02
8314 8314 s 		defb	smp
8315 8315 s 		smp++
8315 8315 s 	endm
8315 8315 d 15
8315 8315 u 01 02
8315 8315 s 		defb	smp
8316 8316 s 		smp++
8316 8316 s 	endm
8316 8316 d 16
8316 8316 u 01 02
8316 8316 s 		defb	smp
8317 8317 s 		smp++
8317 8317 s 	endm
8317 8317 d 17
8317 8317 u 01 02
8317 8317 s 		defb	smp
8318 8318 s 		smp++
8318 8318 s 	endm
8318 8318 d 18
8318 8318 u 01 02
8318 8318 s 		defb	smp
8319 8319 s 		smp++
8319 8319 s 	endm
8319 8319 d 19
8319 8319 u 01 02
8319 8319 s 		defb	smp
831a 831a s 		smp++
831a 831a s 	endm
831a 831a d 1a
831a 831a u 01 02
831a 831a s 		defb	smp
831b 831b s 		smp++
831b 831b s 	endm
831b 831b d 1b
831b 831b u 01 02
831b 831b s 		defb	smp
831c 831c s 		smp++
831c 831c s 	endm
831c 831c d 1c
831c 831c u 01 02
831c 831c s 		defb	smp
831d 831d s 		smp++
831d 831d s 	endm
831d 831d d 1d
831d 831d u 01 02
831d 831d s 		defb	smp
831e 831e s 		smp++
831e 831e s 	endm
831e 831e d 1e
831e 831e u 01 02
831e 831e s 		defb	smp
831f 831f s 		smp++
831f 831f s 	endm
831f 831f d 1f
831f 831f u 01 02
831f 831f s 		defb	smp
8320 8320 s 		smp++
8320 8320 s 	endm
8320 8320 d 20
8320 8320 u 01 02
8320 8320 s 		defb	smp
8321 8321 s 		smp++
8321 8321 s 	endm
8321 8321 d 21
8321 8321 u 01 02
8321 8321 s 		defb	smp
8322 8322 s 		smp++
8322 8322 s 	endm
8322 8322 d 22
8322 8322 u 01 02
8322 8322 s 		defb	smp
8323 8323 s 		smp++
8323 8323 s 	endm
8323 8323 d 23
8323 8323 u 01 02
8323 8323 s 		defb	smp
8324 8324 s 		smp++
8324 8324 s 	endm
8324 8324 d 24
8324 8324 u 01 02
8324 8324 s 		defb	smp
8325 8325 s 		smp++
8325 8325 s 	endm
8325 8325 d 25
8325 8325 u 01 02
8325 8325 s 		defb	smp
8326 8326 s 		smp++
8326 8326 s 	endm
8326 8326 d 26
8326 8326 u 01 02
8326 8326 s 		defb	smp
8327 8327 s 		smp++
8327 8327 s 	endm
8327 8327 d 27
8327 8327 u 01 02
8327 8327 s 		defb	smp
8328 8328 s 		smp++
8328 8328 s 	endm
8328 8328 d 28
8328 8328 u 01 02
8328 8328 s 		defb	smp
8329 8329 s 		smp++
8329 8329 s 	endm
8329 8329 d 29
8329 8329 u 01 02
8329 8329 s 		defb	smp
832a 832a s 		smp++
832a 832a s 	endm
832a 832a d 2a
832a 832a u 01 02
832a 832a s 		defb	smp
832b 832b s 		smp++
832b 832b s 	endm
832b 832b d 2b
832b 832b u 01 02
832b 832b s 		defb	smp
832c 832c s 		smp++
832c 832c s 	endm
832c 832c d 2c
832c 832c u 01 02
832c 832c s 		defb	smp
832d 832d s 		smp++
832d 832d s 	endm
832d 832d d 2d
832d 832d u 01 02
832d 832d s 		defb	smp
832e 832e s 		smp++
832e 832e s 	endm
832e 832e d 2e
832e 832e u 01 02
832e 832e s 		defb	smp
832f 832f s 		smp++
832f 832f s 	endm
832f 832f d 2f
832f 832f u 01 02
832f 832f s 		defb	smp
8330 8330 s 		smp++
8330 8330 s 	endm
8330 8330 d 30
8330 8330 u 01 02
8330 8330 s 		defb	smp
8331 8331 s 		smp++
8331 8331 s 	endm
8331 8331 d 31
8331 8331 u 01 02
8331 8331 s 		defb	smp
8332 8332 s 		smp++
8332 8332 s 	endm
8332 8332 d 32
8332 8332 u 01 02
8332 8332 s 		defb	smp
8333 8333 s 		smp++
8333 8333 s 	endm
8333 8333 d 33
8333 8333 u 01 02
8333 8333 s 		defb	smp
8334 8334 s 		smp++
8334 8334 s 	endm
8334 8334 d 34
8334 8334 u 01 02
8334 8334 s 		defb	smp
8335 8335 s 		smp++
8335 8335 s 	endm
8335 8335 d 35
8335 8335 u 01 02
8335 8335 s 		defb	smp
8336 8336 s 		smp++
8336 8336 s 	endm
8336 8336 d 36
8336 8336 u 01 02
8336 8336 s 		defb	smp
8337 8337 s 		smp++
8337 8337 s 	endm
8337 8337 d 37
8337 8337 u 01 02
8337 8337 s 		defb	smp
8338 8338 s 		smp++
8338 8338 s 	endm
8338 8338 d 38
8338 8338 u 01 02
8338 8338 s 		defb	smp
8339 8339 s 		smp++
8339 8339 s 	endm
8339 8339 d 39
8339 8339 u 01 02
8339 8339 s 		defb	smp
833a 833a s 		smp++
833a 833a s 	endm
833a 833a d 3a
833a 833a u 01 02
833a 833a s 		defb	smp
833b 833b s 		smp++
833b 833b s 	endm
833b 833b d 3b
833b 833b u 01 02
833b 833b s 		defb	smp
833c 833c s 		smp++
833c 833c s 	endm
833c 833c d 3c
833c 833c u 01 02
833c 833c s 		defb	smp
833d 833d s 		smp++
833d 833d s 	endm
833d 833d d 3d
833d 833d u 01 02
833d 833d s 		defb	smp
833e 833e s 		smp++
833e 833e s 	endm
833e 833e d 3e
833e 833e u 01 02
833e 833e s 		defb	smp
833f 833f s 		smp++
833f 833f s 	endm
833f 833f d 3f
833f 833f u 01 02
833f 833f s 		defb	smp
8340 8340 s 		smp++
8340 8340 s 	endm
8340 8340 d 40
8340 8340 u 01 02
8340 8340 s 		defb	smp
8341 8341 s 		smp++
8341 8341 s 	endm
8341 8341 d 41
8341 8341 u 01 02
8341 8341 s 		defb	smp
8342 8342 s 		smp++
8342 8342 s 	endm
8342 8342 d 42
8342 8342 u 01 02
8342 8342 s 		defb	smp
8343 8343 s 		smp++
8343 8343 s 	endm
8343 8343 d 43
8343 8343 u 01 02
8343 8343 s 		defb	smp
8344 8344 s 		smp++
8344 8344 s 	endm
8344 8344 d 44
8344 8344 u 01 02
8344 8344 s 		defb	smp
8345 8345 s 		smp++
8345 8345 s 	endm
8345 8345 d 45
8345 8345 u 01 02
8345 8345 s 		defb	smp
8346 8346 s 		smp++
8346 8346 s 	endm
8346 8346 d 46
8346 8346 u 01 02
8346 8346 s 		defb	smp
8347 8347 s 		smp++
8347 8347 s 	endm
8347 8347 d 47
8347 8347 u 01 02
8347 8347 s 		defb	smp
8348 8348 s 		smp++
8348 8348 s 	endm
8348 8348 d 48
8348 8348 u 01 02
8348 8348 s 		defb	smp
8349 8349 s 		smp++
8349 8349 s 	endm
8349 8349 d 49
8349 8349 u 01 02
8349 8349 s 		defb	smp
834a 834a s 		smp++
834a 834a s 	endm
834a 834a d 4a
834a 834a u 01 02
834a 834a s 		defb	smp
834b 834b s 		smp++
834b 834b s 	endm
834b 834b d 4b
834b 834b u 01 02
834b 834b s 		defb	smp
834c 834c s 		smp++
834c 834c s 	endm
834c 834c d 4c
834c 834c u 01 02
834c 834c s 		defb	smp
834d 834d s 		smp++
834d 834d s 	endm
834d 834d d 4d
834d 834d u 01 02
834d 834d s 		defb	smp
834e 834e s 		smp++
834e 834e s 	endm
834e 834e d 4e
834e 834e u 01 02
834e 834e s 		defb	smp
834f 834f s 		smp++
834f 834f s 	endm
834f 834f d 4f
834f 834f u 01 02
834f 834f s 		defb	smp
8350 8350 s 		smp++
8350 8350 s 	endm
8350 8350 d 50
8350 8350 u 01 02
8350 8350 s 		defb	smp
8351 8351 s 		smp++
8351 8351 s 	endm
8351 8351 d 51
8351 8351 u 01 02
8351 8351 s 		defb	smp
8352 8352 s 		smp++
8352 8352 s 	endm
8352 8352 d 52
8352 8352 u 01 02
8352 8352 s 		defb	smp
8353 8353 s 		smp++
8353 8353 s 	endm
8353 8353 d 53
8353 8353 u 01 02
8353 8353 s 		defb	smp
8354 8354 s 		smp++
8354 8354 s 	endm
8354 8354 d 54
8354 8354 u 01 02
8354 8354 s 		defb	smp
8355 8355 s 		smp++
8355 8355 s 	endm
8355 8355 d 55
8355 8355 u 01 02
8355 8355 s 		defb	smp
8356 8356 s 		smp++
8356 8356 s 	endm
8356 8356 d 56
8356 8356 u 01 02
8356 8356 s 		defb	smp
8357 8357 s 		smp++
8357 8357 s 	endm
8357 8357 d 57
8357 8357 u 01 02
8357 8357 s 		defb	smp
8358 8358 s 		smp++
8358 8358 s 	endm
8358 8358 d 58
8358 8358 u 01 02
8358 8358 s 		defb	smp
8359 8359 s 		smp++
8359 8359 s 	endm
8359 8359 d 59
8359 8359 u 01 02
8359 8359 s 		defb	smp
835a 835a s 		smp++
835a 835a s 	endm
835a 835a d 5a
835a 835a u 01 02
835a 835a s 		defb	smp
835b 835b s 		smp++
835b 835b s 	endm
835b 835b d 5b
835b 835b u 01 02
835b 835b s 		defb	smp
835c 835c s 		smp++
835c 835c s 	endm
835c 835c d 5c
835c 835c u 01 02
835c 835c s 		defb	smp
835d 835d s 		smp++
835d 835d s 	endm
835d 835d d 5d
835d 835d u 01 02
835d 835d s 		defb	smp
835e 835e s 		smp++
835e 835e s 	endm
835e 835e d 5e
835e 835e u 01 02
835e 835e s 		defb	smp
835f 835f s 		smp++
835f 835f s 	endm
835f 835f d 5f
835f 835f u 01 02
835f 835f s 		defb	smp
8360 8360 s 		smp++
8360 8360 s 	endm
8360 8360 d 60
8360 8360 u 01 02
8360 8360 s 		defb	smp
8361 8361 s 		smp++
8361 8361 s 	endm
8361 8361 d 61
8361 8361 u 01 02
8361 8361 s 		defb	smp
8362 8362 s 		smp++
8362 8362 s 	endm
8362 8362 d 62
8362 8362 u 01 02
8362 8362 s 		defb	smp
8363 8363 s 		smp++
8363 8363 s 	endm
8363 8363 d 63
8363 8363 u 01 02
8363 8363 s 		defb	smp
8364 8364 s 		smp++
8364 8364 s 	endm
8364 8364 d 64
8364 8364 u 01 02
8364 8364 s 		defb	smp
8365 8365 s 		smp++
8365 8365 s 	endm
8365 8365 d 65
8365 8365 u 01 02
8365 8365 s 		defb	smp
8366 8366 s 		smp++
8366 8366 s 	endm
8366 8366 d 66
8366 8366 u 01 02
8366 8366 s 		defb	smp
8367 8367 s 		smp++
8367 8367 s 	endm
8367 8367 d 67
8367 8367 u 01 02
8367 8367 s 		defb	smp
8368 8368 s 		smp++
8368 8368 s 	endm
8368 8368 d 68
8368 8368 u 01 02
8368 8368 s 		defb	smp
8369 8369 s 		smp++
8369 8369 s 	endm
8369 8369 d 69
8369 8369 u 01 02
8369 8369 s 		defb	smp
836a 836a s 		smp++
836a 836a s 	endm
836a 836a d 6a
836a 836a u 01 02
836a 836a s 		defb	smp
836b 836b s 		smp++
836b 836b s 	endm
836b 836b d 6b
836b 836b u 01 02
836b 836b s 		defb	smp
836c 836c s 		smp++
836c 836c s 	endm
836c 836c d 6c
836c 836c u 01 02
836c 836c s 		defb	smp
836d 836d s 		smp++
836d 836d s 	endm
836d 836d d 6d
836d 836d u 01 02
836d 836d s 		defb	smp
836e 836e s 		smp++
836e 836e s 	endm
836e 836e d 6e
836e 836e u 01 02
836e 836e s 		defb	smp
836f 836f s 		smp++
836f 836f s 	endm
836f 836f d 6f
836f 836f u 01 02
836f 836f s 		defb	smp
8370 8370 s 		smp++
8370 8370 s 	endm
8370 8370 d 70
8370 8370 u 01 02
8370 8370 s 		defb	smp
8371 8371 s 		smp++
8371 8371 s 	endm
8371 8371 d 71
8371 8371 u 01 02
8371 8371 s 		defb	smp
8372 8372 s 		smp++
8372 8372 s 	endm
8372 8372 d 72
8372 8372 u 01 02
8372 8372 s 		defb	smp
8373 8373 s 		smp++
8373 8373 s 	endm
8373 8373 d 73
8373 8373 u 01 02
8373 8373 s 		defb	smp
8374 8374 s 		smp++
8374 8374 s 	endm
8374 8374 d 74
8374 8374 u 01 02
8374 8374 s 		defb	smp
8375 8375 s 		smp++
8375 8375 s 	endm
8375 8375 d 75
8375 8375 u 01 02
8375 8375 s 		defb	smp
8376 8376 s 		smp++
8376 8376 s 	endm
8376 8376 d 76
8376 8376 u 01 02
8376 8376 s 		defb	smp
8377 8377 s 		smp++
8377 8377 s 	endm
8377 8377 d 77
8377 8377 u 01 02
8377 8377 s 		defb	smp
8378 8378 s 		smp++
8378 8378 s 	endm
8378 8378 d 78
8378 8378 u 01 02
8378 8378 s 		defb	smp
8379 8379 s 		smp++
8379 8379 s 	endm
8379 8379 d 79
8379 8379 u 01 02
8379 8379 s 		defb	smp
837a 837a s 		smp++
837a 837a s 	endm
837a 837a d 7a
837a 837a u 01 02
837a 837a s 		defb	smp
837b 837b s 		smp++
837b 837b s 	endm
837b 837b d 7b
837b 837b u 01 02
837b 837b s 		defb	smp
837c 837c s 		smp++
837c 837c s 	endm
837c 837c d 7c
837c 837c u 01 02
837c 837c s 		defb	smp
837d 837d s 		smp++
837d 837d s 	endm
837d 837d d 7d
837d 837d u 01 02
837d 837d s 		defb	smp
837e 837e s 		smp++
837e 837e s 	endm
837e 837e d 7e
837e 837e u 01 02
837e 837e s 		defb	smp
837f 837f s 		smp++
837f 837f s 	endm
837f 837f d 7f
837f 837f u 01 02
837f 837f s 		defb	smp
8380 8380 s 		smp++
8380 8380 s 	endm
8380 8380 d 80
8380 8380 u 01 02
8380 8380 s 		defb	smp
8381 8381 s 		smp++
8381 8381 s 	endm
8381 8381 d 81
8381 8381 u 01 02
8381 8381 s 		defb	smp
8382 8382 s 		smp++
8382 8382 s 	endm
8382 8382 d 82
8382 8382 u 01 02
8382 8382 s 		defb	smp
8383 8383 s 		smp++
8383 8383 s 	endm
8383 8383 d 83
8383 8383 u 01 02
8383 8383 s 		defb	smp
8384 8384 s 		smp++
8384 8384 s 	endm
8384 8384 d 84
8384 8384 u 01 02
8384 8384 s 		defb	smp
8385 8385 s 		smp++
8385 8385 s 	endm
8385 8385 d 85
8385 8385 u 01 02
8385 8385 s 		defb	smp
8386 8386 s 		smp++
8386 8386 s 	endm
8386 8386 d 86
8386 8386 u 01 02
8386 8386 s 		defb	smp
8387 8387 s 		smp++
8387 8387 s 	endm
8387 8387 d 87
8387 8387 u 01 02
8387 8387 s 		defb	smp
8388 8388 s 		smp++
8388 8388 s 	endm
8388 8388 d 88
8388 8388 u 01 02
8388 8388 s 		defb	smp
8389 8389 s 		smp++
8389 8389 s 	endm
8389 8389 d 89
8389 8389 u 01 02
8389 8389 s 		defb	smp
838a 838a s 		smp++
838a 838a s 	endm
838a 838a d 8a
838a 838a u 01 02
838a 838a s 		defb	smp
838b 838b s 		smp++
838b 838b s 	endm
838b 838b d 8b
838b 838b u 01 02
838b 838b s 		defb	smp
838c 838c s 		smp++
838c 838c s 	endm
838c 838c d 8c
838c 838c u 01 02
838c 838c s 		defb	smp
838d 838d s 		smp++
838d 838d s 	endm
838d 838d d 8d
838d 838d u 01 02
838d 838d s 		defb	smp
838e 838e s 		smp++
838e 838e s 	endm
838e 838e d 8e
838e 838e u 01 02
838e 838e s 		defb	smp
838f 838f s 		smp++
838f 838f s 	endm
838f 838f d 8f
838f 838f u 01 02
838f 838f s 		defb	smp
8390 8390 s 		smp++
8390 8390 s 	endm
8390 8390 d 90
8390 8390 u 01 02
8390 8390 s 		defb	smp
8391 8391 s 		smp++
8391 8391 s 	endm
8391 8391 d 91
8391 8391 u 01 02
8391 8391 s 		defb	smp
8392 8392 s 		smp++
8392 8392 s 	endm
8392 8392 d 92
8392 8392 u 01 02
8392 8392 s 		defb	smp
8393 8393 s 		smp++
8393 8393 s 	endm
8393 8393 d 93
8393 8393 u 01 02
8393 8393 s 		defb	smp
8394 8394 s 		smp++
8394 8394 s 	endm
8394 8394 d 94
8394 8394 u 01 02
8394 8394 s 		defb	smp
8395 8395 s 		smp++
8395 8395 s 	endm
8395 8395 d 95
8395 8395 u 01 02
8395 8395 s 		defb	smp
8396 8396 s 		smp++
8396 8396 s 	endm
8396 8396 d 96
8396 8396 u 01 02
8396 8396 s 		defb	smp
8397 8397 s 		smp++
8397 8397 s 	endm
8397 8397 d 97
8397 8397 u 01 02
8397 8397 s 		defb	smp
8398 8398 s 		smp++
8398 8398 s 	endm
8398 8398 d 98
8398 8398 u 01 02
8398 8398 s 		defb	smp
8399 8399 s 		smp++
8399 8399 s 	endm
8399 8399 d 99
8399 8399 u 01 02
8399 8399 s 		defb	smp
839a 839a s 		smp++
839a 839a s 	endm
839a 839a d 9a
839a 839a u 01 02
839a 839a s 		defb	smp
839b 839b s 		smp++
839b 839b s 	endm
839b 839b d 9b
839b 839b u 01 02
839b 839b s 		defb	smp
839c 839c s 		smp++
839c 839c s 	endm
839c 839c d 9c
839c 839c u 01 02
839c 839c s 		defb	smp
839d 839d s 		smp++
839d 839d s 	endm
839d 839d d 9d
839d 839d u 01 02
839d 839d s 		defb	smp
839e 839e s 		smp++
839e 839e s 	endm
839e 839e d 9e
839e 839e u 01 02
839e 839e s 		defb	smp
839f 839f s 		smp++
839f 839f s 	endm
839f 839f d 9f
839f 839f u 01 02
839f 839f s 		defb	smp
83a0 83a0 s 		smp++
83a0 83a0 s 	endm
83a0 83a0 d a0
83a0 83a0 u 01 02
83a0 83a0 s 		defb	smp
83a1 83a1 s 		smp++
83a1 83a1 s 	endm
83a1 83a1 d a1
83a1 83a1 u 01 02
83a1 83a1 s 		defb	smp
83a2 83a2 s 		smp++
83a2 83a2 s 	endm
83a2 83a2 d a2
83a2 83a2 u 01 02
83a2 83a2 s 		defb	smp
83a3 83a3 s 		smp++
83a3 83a3 s 	endm
83a3 83a3 d a3
83a3 83a3 u 01 02
83a3 83a3 s 		defb	smp
83a4 83a4 s 		smp++
83a4 83a4 s 	endm
83a4 83a4 d a4
83a4 83a4 u 01 02
83a4 83a4 s 		defb	smp
83a5 83a5 s 		smp++
83a5 83a5 s 	endm
83a5 83a5 d a5
83a5 83a5 u 01 02
83a5 83a5 s 		defb	smp
83a6 83a6 s 		smp++
83a6 83a6 s 	endm
83a6 83a6 d a6
83a6 83a6 u 01 02
83a6 83a6 s 		defb	smp
83a7 83a7 s 		smp++
83a7 83a7 s 	endm
83a7 83a7 d a7
83a7 83a7 u 01 02
83a7 83a7 s 		defb	smp
83a8 83a8 s 		smp++
83a8 83a8 s 	endm
83a8 83a8 d a8
83a8 83a8 u 01 02
83a8 83a8 s 		defb	smp
83a9 83a9 s 		smp++
83a9 83a9 s 	endm
83a9 83a9 d a9
83a9 83a9 u 01 02
83a9 83a9 s 		defb	smp
83aa 83aa s 		smp++
83aa 83aa s 	endm
83aa 83aa d aa
83aa 83aa u 01 02
83aa 83aa s 		defb	smp
83ab 83ab s 		smp++
83ab 83ab s 	endm
83ab 83ab d ab
83ab 83ab u 01 02
83ab 83ab s 		defb	smp
83ac 83ac s 		smp++
83ac 83ac s 	endm
83ac 83ac d ac
83ac 83ac u 01 02
83ac 83ac s 		defb	smp
83ad 83ad s 		smp++
83ad 83ad s 	endm
83ad 83ad d ad
83ad 83ad u 01 02
83ad 83ad s 		defb	smp
83ae 83ae s 		smp++
83ae 83ae s 	endm
83ae 83ae d ae
83ae 83ae u 01 02
83ae 83ae s 		defb	smp
83af 83af s 		smp++
83af 83af s 	endm
83af 83af d af
83af 83af u 01 02
83af 83af s 		defb	smp
83b0 83b0 s 		smp++
83b0 83b0 s 	endm
83b0 83b0 d b0
83b0 83b0 u 01 02
83b0 83b0 s 		defb	smp
83b1 83b1 s 		smp++
83b1 83b1 s 	endm
83b1 83b1 d b1
83b1 83b1 u 01 02
83b1 83b1 s 		defb	smp
83b2 83b2 s 		smp++
83b2 83b2 s 	endm
83b2 83b2 d b2
83b2 83b2 u 01 02
83b2 83b2 s 		defb	smp
83b3 83b3 s 		smp++
83b3 83b3 s 	endm
83b3 83b3 d b3
83b3 83b3 u 01 02
83b3 83b3 s 		defb	smp
83b4 83b4 s 		smp++
83b4 83b4 s 	endm
83b4 83b4 d b4
83b4 83b4 u 01 02
83b4 83b4 s 		defb	smp
83b5 83b5 s 		smp++
83b5 83b5 s 	endm
83b5 83b5 d b5
83b5 83b5 u 01 02
83b5 83b5 s 		defb	smp
83b6 83b6 s 		smp++
83b6 83b6 s 	endm
83b6 83b6 d b6
83b6 83b6 u 01 02
83b6 83b6 s 		defb	smp
83b7 83b7 s 		smp++
83b7 83b7 s 	endm
83b7 83b7 d b7
83b7 83b7 u 01 02
83b7 83b7 s 		defb	smp
83b8 83b8 s 		smp++
83b8 83b8 s 	endm
83b8 83b8 d b8
83b8 83b8 u 01 02
83b8 83b8 s 		defb	smp
83b9 83b9 s 		smp++
83b9 83b9 s 	endm
83b9 83b9 d b9
83b9 83b9 u 01 02
83b9 83b9 s 		defb	smp
83ba 83ba s 		smp++
83ba 83ba s 	endm
83ba 83ba d ba
83ba 83ba u 01 02
83ba 83ba s 		defb	smp
83bb 83bb s 		smp++
83bb 83bb s 	endm
83bb 83bb d bb
83bb 83bb u 01 02
83bb 83bb s 		defb	smp
83bc 83bc s 		smp++
83bc 83bc s 	endm
83bc 83bc d bc
83bc 83bc u 01 02
83bc 83bc s 		defb	smp
83bd 83bd s 		smp++
83bd 83bd s 	endm
83bd 83bd d bd
83bd 83bd u 01 02
83bd 83bd s 		defb	smp
83be 83be s 		smp++
83be 83be s 	endm
83be 83be d be
83be 83be u 01 02
83be 83be s 		defb	smp
83bf 83bf s 		smp++
83bf 83bf s 	endm
83bf 83bf d bf
83bf 83bf u 01 02
83bf 83bf s 		defb	smp
83c0 83c0 s 		smp++
83c0 83c0 s 	endm
83c0 83c0 d c0
83c0 83c0 u 01 02
83c0 83c0 s 		defb	smp
83c1 83c1 s 		smp++
83c1 83c1 s 	endm
83c1 83c1 d c1
83c1 83c1 u 01 02
83c1 83c1 s 		defb	smp
83c2 83c2 s 		smp++
83c2 83c2 s 	endm
83c2 83c2 d c2
83c2 83c2 u 01 02
83c2 83c2 s 		defb	smp
83c3 83c3 s 		smp++
83c3 83c3 s 	endm
83c3 83c3 d c3
83c3 83c3 u 01 02
83c3 83c3 s 		defb	smp
83c4 83c4 s 		smp++
83c4 83c4 s 	endm
83c4 83c4 d c4
83c4 83c4 u 01 02
83c4 83c4 s 		defb	smp
83c5 83c5 s 		smp++
83c5 83c5 s 	endm
83c5 83c5 d c5
83c5 83c5 u 01 02
83c5 83c5 s 		defb	smp
83c6 83c6 s 		smp++
83c6 83c6 s 	endm
83c6 83c6 d c6
83c6 83c6 u 01 02
83c6 83c6 s 		defb	smp
83c7 83c7 s 		smp++
83c7 83c7 s 	endm
83c7 83c7 d c7
83c7 83c7 u 01 02
83c7 83c7 s 		defb	smp
83c8 83c8 s 		smp++
83c8 83c8 s 	endm
83c8 83c8 d c8
83c8 83c8 u 01 02
83c8 83c8 s 		defb	smp
83c9 83c9 s 		smp++
83c9 83c9 s 	endm
83c9 83c9 d c9
83c9 83c9 u 01 02
83c9 83c9 s 		defb	smp
83ca 83ca s 		smp++
83ca 83ca s 	endm
83ca 83ca d ca
83ca 83ca u 01 02
83ca 83ca s 		defb	smp
83cb 83cb s 		smp++
83cb 83cb s 	endm
83cb 83cb d cb
83cb 83cb u 01 02
83cb 83cb s 		defb	smp
83cc 83cc s 		smp++
83cc 83cc s 	endm
83cc 83cc d cc
83cc 83cc u 01 02
83cc 83cc s 		defb	smp
83cd 83cd s 		smp++
83cd 83cd s 	endm
83cd 83cd d cd
83cd 83cd u 01 02
83cd 83cd s 		defb	smp
83ce 83ce s 		smp++
83ce 83ce s 	endm
83ce 83ce d ce
83ce 83ce u 01 02
83ce 83ce s 		defb	smp
83cf 83cf s 		smp++
83cf 83cf s 	endm
83cf 83cf d cf
83cf 83cf u 01 02
83cf 83cf s 		defb	smp
83d0 83d0 s 		smp++
83d0 83d0 s 	endm
83d0 83d0 d d0
83d0 83d0 u 01 02
83d0 83d0 s 		defb	smp
83d1 83d1 s 		smp++
83d1 83d1 s 	endm
83d1 83d1 d d1
83d1 83d1 u 01 02
83d1 83d1 s 		defb	smp
83d2 83d2 s 		smp++
83d2 83d2 s 	endm
83d2 83d2 d d2
83d2 83d2 u 01 02
83d2 83d2 s 		defb	smp
83d3 83d3 s 		smp++
83d3 83d3 s 	endm
83d3 83d3 d d3
83d3 83d3 u 01 02
83d3 83d3 s 		defb	smp
83d4 83d4 s 		smp++
83d4 83d4 s 	endm
83d4 83d4 d d4
83d4 83d4 u 01 02
83d4 83d4 s 		defb	smp
83d5 83d5 s 		smp++
83d5 83d5 s 	endm
83d5 83d5 d d5
83d5 83d5 u 01 02
83d5 83d5 s 		defb	smp
83d6 83d6 s 		smp++
83d6 83d6 s 	endm
83d6 83d6 d d6
83d6 83d6 u 01 02
83d6 83d6 s 		defb	smp
83d7 83d7 s 		smp++
83d7 83d7 s 	endm
83d7 83d7 d d7
83d7 83d7 u 01 02
83d7 83d7 s 		defb	smp
83d8 83d8 s 		smp++
83d8 83d8 s 	endm
83d8 83d8 d d8
83d8 83d8 u 01 02
83d8 83d8 s 		defb	smp
83d9 83d9 s 		smp++
83d9 83d9 s 	endm
83d9 83d9 d d9
83d9 83d9 u 01 02
83d9 83d9 s 		defb	smp
83da 83da s 		smp++
83da 83da s 	endm
83da 83da d da
83da 83da u 01 02
83da 83da s 		defb	smp
83db 83db s 		smp++
83db 83db s 	endm
83db 83db d db
83db 83db u 01 02
83db 83db s 		defb	smp
83dc 83dc s 		smp++
83dc 83dc s 	endm
83dc 83dc d dc
83dc 83dc u 01 02
83dc 83dc s 		defb	smp
83dd 83dd s 		smp++
83dd 83dd s 	endm
83dd 83dd d dd
83dd 83dd u 01 02
83dd 83dd s 		defb	smp
83de 83de s 		smp++
83de 83de s 	endm
83de 83de d de
83de 83de u 01 02
83de 83de s 		defb	smp
83df 83df s 		smp++
83df 83df s 	endm
83df 83df d df
83df 83df u 01 02
83df 83df s 		defb	smp
83e0 83e0 s 		smp++
83e0 83e0 s 	endm
83e0 83e0 d e0
83e0 83e0 u 01 02
83e0 83e0 s 		defb	smp
83e1 83e1 s 		smp++
83e1 83e1 s 	endm
83e1 83e1 d e1
83e1 83e1 u 01 02
83e1 83e1 s 		defb	smp
83e2 83e2 s 		smp++
83e2 83e2 s 	endm
83e2 83e2 d e2
83e2 83e2 u 01 02
83e2 83e2 s 		defb	smp
83e3 83e3 s 		smp++
83e3 83e3 s 	endm
83e3 83e3 d e3
83e3 83e3 u 01 02
83e3 83e3 s 		defb	smp
83e4 83e4 s 		smp++
83e4 83e4 s 	endm
83e4 83e4 d e4
83e4 83e4 u 01 02
83e4 83e4 s 		defb	smp
83e5 83e5 s 		smp++
83e5 83e5 s 	endm
83e5 83e5 d e5
83e5 83e5 u 01 02
83e5 83e5 s 		defb	smp
83e6 83e6 s 		smp++
83e6 83e6 s 	endm
83e6 83e6 d e6
83e6 83e6 u 01 02
83e6 83e6 s 		defb	smp
83e7 83e7 s 		smp++
83e7 83e7 s 	endm
83e7 83e7 d e7
83e7 83e7 u 01 02
83e7 83e7 s 		defb	smp
83e8 83e8 s 		smp++
83e8 83e8 s 	endm
83e8 83e8 d e8
83e8 83e8 u 01 02
83e8 83e8 s 		defb	smp
83e9 83e9 s 		smp++
83e9 83e9 s 	endm
83e9 83e9 d e9
83e9 83e9 u 01 02
83e9 83e9 s 		defb	smp
83ea 83ea s 		smp++
83ea 83ea s 	endm
83ea 83ea d ea
83ea 83ea u 01 02
83ea 83ea s 		defb	smp
83eb 83eb s 		smp++
83eb 83eb s 	endm
83eb 83eb d eb
83eb 83eb u 01 02
83eb 83eb s 		defb	smp
83ec 83ec s 		smp++
83ec 83ec s 	endm
83ec 83ec d ec
83ec 83ec u 01 02
83ec 83ec s 		defb	smp
83ed 83ed s 		smp++
83ed 83ed s 	endm
83ed 83ed d ed
83ed 83ed u 01 02
83ed 83ed s 		defb	smp
83ee 83ee s 		smp++
83ee 83ee s 	endm
83ee 83ee d ee
83ee 83ee u 01 02
83ee 83ee s 		defb	smp
83ef 83ef s 		smp++
83ef 83ef s 	endm
83ef 83ef d ef
83ef 83ef u 01 02
83ef 83ef s 		defb	smp
83f0 83f0 s 		smp++
83f0 83f0 s 	endm
83f0 83f0 d f0
83f0 83f0 u 01 02
83f0 83f0 s 		defb	smp
83f1 83f1 s 		smp++
83f1 83f1 s 	endm
83f1 83f1 d f1
83f1 83f1 u 01 02
83f1 83f1 s 		defb	smp
83f2 83f2 s 		smp++
83f2 83f2 s 	endm
83f2 83f2 d f2
83f2 83f2 u 01 02
83f2 83f2 s 		defb	smp
83f3 83f3 s 		smp++
83f3 83f3 s 	endm
83f3 83f3 d f3
83f3 83f3 u 01 02
83f3 83f3 s 		defb	smp
83f4 83f4 s 		smp++
83f4 83f4 s 	endm
83f4 83f4 d f4
83f4 83f4 u 01 02
83f4 83f4 s 		defb	smp
83f5 83f5 s 		smp++
83f5 83f5 s 	endm
83f5 83f5 d f5
83f5 83f5 u 01 02
83f5 83f5 s 		defb	smp
83f6 83f6 s 		smp++
83f6 83f6 s 	endm
83f6 83f6 d f6
83f6 83f6 u 01 02
83f6 83f6 s 		defb	smp
83f7 83f7 s 		smp++
83f7 83f7 s 	endm
83f7 83f7 d f7
83f7 83f7 u 01 02
83f7 83f7 s 		defb	smp
83f8 83f8 s 		smp++
83f8 83f8 s 	endm
83f8 83f8 d f8
83f8 83f8 u 01 02
83f8 83f8 s 		defb	smp
83f9 83f9 s 		smp++
83f9 83f9 s 	endm
83f9 83f9 d f9
83f9 83f9 u 01 02
83f9 83f9 s 		defb	smp
83fa 83fa s 		smp++
83fa 83fa s 	endm
83fa 83fa d fa
83fa 83fa u 01 02
83fa 83fa s 		defb	smp
83fb 83fb s 		smp++
83fb 83fb s 	endm
83fb 83fb d fb
83fb 83fb u 01 02
83fb 83fb s 		defb	smp
83fc 83fc s 		smp++
83fc 83fc s 	endm
83fc 83fc d fc
83fc 83fc u 01 02
83fc 83fc s 		defb	smp
83fd 83fd s 		smp++
83fd 83fd s 	endm
83fd 83fd d fd
83fd 83fd u 01 02
83fd 83fd s 		defb	smp
83fe 83fe s 		smp++
83fe 83fe s 	endm
83fe 83fe d fe
83fe 83fe u 01 02
83fe 83fe s 		defb	smp
83ff 83ff s 		smp++
83ff 83ff s 	endm
83ff 83ff d ff
83ff 83ff u 01 02
83ff 83ff s 		defb	smp
8400 8400 s 		smp++
8400 8400 s 	endm
8400 8400 s 
8400 8400 s    if havevol
8400 8400 s 	; space for 15 volume levels of each of the 4 waveforms.
8400 8400 s 	defs	15 * 4 * 256
c000 c000 s    endif
c000 c000 s 
c000 c000 s 	assert	$ % 256 == 0
c000 c000 s silence:
c000 c000 s 	dc	256,0
c000 c000 d 00000000000000000000000000000000
c010 c010 d 00000000000000000000000000000000
c020 c020 d 00000000000000000000000000000000
c030 c030 d 00000000000000000000000000000000
c040 c040 d 00000000000000000000000000000000
c050 c050 d 00000000000000000000000000000000
c060 c060 d 00000000000000000000000000000000
c070 c070 d 00000000000000000000000000000000
c080 c080 d 00000000000000000000000000000000
c090 c090 d 00000000000000000000000000000000
c0a0 c0a0 d 00000000000000000000000000000000
c0b0 c0b0 d 00000000000000000000000000000000
c0c0 c0c0 d 00000000000000000000000000000000
c0d0 c0d0 d 00000000000000000000000000000000
c0e0 c0e0 d 00000000000000000000000000000000
c0f0 c0f0 d 00000000000000000000000000000000
c000 c000 u ff 02
c0ff c0ff u 01 02
c100 c100 s 
c100 c100 s wordval	macro	root,n
c100 c100 s 	defw	&root&n
c100 c100 s 	endm
c100 c100 s 
c100 c100 s ; Table of addresses of DAC values.
c100 c100 s dac_patch:
c100 c100 s 	n = 0
c100 c100 s 	rept	dn
c100 c100 s 		wordval	dacp,%n
c100 c100 s 		n++
c100 c100 s 	endm
c100 c100 s 		wordval	dacp,%n
c100 c100 d ca57
c100 c100 u 02 02
c100 c100 s 	defw	dacp0
c102 c102 s 	endm
c102 c102 s 		n++
c102 c102 s 	endm
c102 c102 s 		wordval	dacp,%n
c102 c102 d d057
c102 c102 u 02 02
c102 c102 s 	defw	dacp1
c104 c104 s 	endm
c104 c104 s 		n++
c104 c104 s 	endm
c104 c104 s 		wordval	dacp,%n
c104 c104 d e657
c104 c104 u 02 02
c104 c104 s 	defw	dacp2
c106 c106 s 	endm
c106 c106 s 		n++
c106 c106 s 	endm
c106 c106 s 		wordval	dacp,%n
c106 c106 d ec57
c106 c106 u 02 02
c106 c106 s 	defw	dacp3
c108 c108 s 	endm
c108 c108 s 		n++
c108 c108 s 	endm
c108 c108 s 		wordval	dacp,%n
c108 c108 d 0258
c108 c108 u 02 02
c108 c108 s 	defw	dacp4
c10a c10a s 	endm
c10a c10a s 		n++
c10a c10a s 	endm
c10a c10a s 		wordval	dacp,%n
c10a c10a d 0858
c10a c10a u 02 02
c10a c10a s 	defw	dacp5
c10c c10c s 	endm
c10c c10c s 		n++
c10c c10c s 	endm
c10c c10c s 		wordval	dacp,%n
c10c c10c d 1e58
c10c c10c u 02 02
c10c c10c s 	defw	dacp6
c10e c10e s 	endm
c10e c10e s 		n++
c10e c10e s 	endm
c10e c10e s 		wordval	dacp,%n
c10e c10e d 2458
c10e c10e u 02 02
c10e c10e s 	defw	dacp7
c110 c110 s 	endm
c110 c110 s 		n++
c110 c110 s 	endm
c110 c110 s 		wordval	dacp,%n
c110 c110 d 3a58
c110 c110 u 02 02
c110 c110 s 	defw	dacp8
c112 c112 s 	endm
c112 c112 s 		n++
c112 c112 s 	endm
c112 c112 s 		wordval	dacp,%n
c112 c112 d 4058
c112 c112 u 02 02
c112 c112 s 	defw	dacp9
c114 c114 s 	endm
c114 c114 s 		n++
c114 c114 s 	endm
c114 c114 s 		wordval	dacp,%n
c114 c114 d 5658
c114 c114 u 02 02
c114 c114 s 	defw	dacp10
c116 c116 s 	endm
c116 c116 s 		n++
c116 c116 s 	endm
c116 c116 s 		wordval	dacp,%n
c116 c116 d 5c58
c116 c116 u 02 02
c116 c116 s 	defw	dacp11
c118 c118 s 	endm
c118 c118 s 		n++
c118 c118 s 	endm
c118 c118 s 		wordval	dacp,%n
c118 c118 d 7258
c118 c118 u 02 02
c118 c118 s 	defw	dacp12
c11a c11a s 	endm
c11a c11a s 		n++
c11a c11a s 	endm
c11a c11a s 		wordval	dacp,%n
c11a c11a d 7858
c11a c11a u 02 02
c11a c11a s 	defw	dacp13
c11c c11c s 	endm
c11c c11c s 		n++
c11c c11c s 	endm
c11c c11c s 		wordval	dacp,%n
c11c c11c d 8e58
c11c c11c u 02 02
c11c c11c s 	defw	dacp14
c11e c11e s 	endm
c11e c11e s 		n++
c11e c11e s 	endm
c11e c11e s 		wordval	dacp,%n
c11e c11e d 9458
c11e c11e u 02 02
c11e c11e s 	defw	dacp15
c120 c120 s 	endm
c120 c120 s 		n++
c120 c120 s 	endm
c120 c120 s 		wordval	dacp,%n
c120 c120 d aa58
c120 c120 u 02 02
c120 c120 s 	defw	dacp16
c122 c122 s 	endm
c122 c122 s 		n++
c122 c122 s 	endm
c122 c122 s 		wordval	dacp,%n
c122 c122 d b058
c122 c122 u 02 02
c122 c122 s 	defw	dacp17
c124 c124 s 	endm
c124 c124 s 		n++
c124 c124 s 	endm
c124 c124 s 		wordval	dacp,%n
c124 c124 d c658
c124 c124 u 02 02
c124 c124 s 	defw	dacp18
c126 c126 s 	endm
c126 c126 s 		n++
c126 c126 s 	endm
c126 c126 s 		wordval	dacp,%n
c126 c126 d cc58
c126 c126 u 02 02
c126 c126 s 	defw	dacp19
c128 c128 s 	endm
c128 c128 s 		n++
c128 c128 s 	endm
c128 c128 s 		wordval	dacp,%n
c128 c128 d e258
c128 c128 u 02 02
c128 c128 s 	defw	dacp20
c12a c12a s 	endm
c12a c12a s 		n++
c12a c12a s 	endm
c12a c12a s 		wordval	dacp,%n
c12a c12a d e858
c12a c12a u 02 02
c12a c12a s 	defw	dacp21
c12c c12c s 	endm
c12c c12c s 		n++
c12c c12c s 	endm
c12c c12c s 		wordval	dacp,%n
c12c c12c d fe58
c12c c12c u 02 02
c12c c12c s 	defw	dacp22
c12e c12e s 	endm
c12e c12e s 		n++
c12e c12e s 	endm
c12e c12e s 		wordval	dacp,%n
c12e c12e d 0459
c12e c12e u 02 02
c12e c12e s 	defw	dacp23
c130 c130 s 	endm
c130 c130 s 		n++
c130 c130 s 	endm
c130 c130 s 		wordval	dacp,%n
c130 c130 d 1a59
c130 c130 u 02 02
c130 c130 s 	defw	dacp24
c132 c132 s 	endm
c132 c132 s 		n++
c132 c132 s 	endm
c132 c132 s 		wordval	dacp,%n
c132 c132 d 2059
c132 c132 u 02 02
c132 c132 s 	defw	dacp25
c134 c134 s 	endm
c134 c134 s 		n++
c134 c134 s 	endm
c134 c134 s 		wordval	dacp,%n
c134 c134 d 3659
c134 c134 u 02 02
c134 c134 s 	defw	dacp26
c136 c136 s 	endm
c136 c136 s 		n++
c136 c136 s 	endm
c136 c136 s 		wordval	dacp,%n
c136 c136 d 3c59
c136 c136 u 02 02
c136 c136 s 	defw	dacp27
c138 c138 s 	endm
c138 c138 s 		n++
c138 c138 s 	endm
c138 c138 s 		wordval	dacp,%n
c138 c138 d 5259
c138 c138 u 02 02
c138 c138 s 	defw	dacp28
c13a c13a s 	endm
c13a c13a s 		n++
c13a c13a s 	endm
c13a c13a s 		wordval	dacp,%n
c13a c13a d 5859
c13a c13a u 02 02
c13a c13a s 	defw	dacp29
c13c c13c s 	endm
c13c c13c s 		n++
c13c c13c s 	endm
c13c c13c s 		wordval	dacp,%n
c13c c13c d 6e59
c13c c13c u 02 02
c13c c13c s 	defw	dacp30
c13e c13e s 	endm
c13e c13e s 		n++
c13e c13e s 	endm
c13e c13e s 		wordval	dacp,%n
c13e c13e d 7459
c13e c13e u 02 02
c13e c13e s 	defw	dacp31
c140 c140 s 	endm
c140 c140 s 		n++
c140 c140 s 	endm
c140 c140 s 		wordval	dacp,%n
c140 c140 d 8a59
c140 c140 u 02 02
c140 c140 s 	defw	dacp32
c142 c142 s 	endm
c142 c142 s 		n++
c142 c142 s 	endm
c142 c142 s 		wordval	dacp,%n
c142 c142 d 9059
c142 c142 u 02 02
c142 c142 s 	defw	dacp33
c144 c144 s 	endm
c144 c144 s 		n++
c144 c144 s 	endm
c144 c144 s 		wordval	dacp,%n
c144 c144 d a659
c144 c144 u 02 02
c144 c144 s 	defw	dacp34
c146 c146 s 	endm
c146 c146 s 		n++
c146 c146 s 	endm
c146 c146 s 		wordval	dacp,%n
c146 c146 d ac59
c146 c146 u 02 02
c146 c146 s 	defw	dacp35
c148 c148 s 	endm
c148 c148 s 		n++
c148 c148 s 	endm
c148 c148 s 		wordval	dacp,%n
c148 c148 d c259
c148 c148 u 02 02
c148 c148 s 	defw	dacp36
c14a c14a s 	endm
c14a c14a s 		n++
c14a c14a s 	endm
c14a c14a s 		wordval	dacp,%n
c14a c14a d c859
c14a c14a u 02 02
c14a c14a s 	defw	dacp37
c14c c14c s 	endm
c14c c14c s 		n++
c14c c14c s 	endm
c14c c14c s 		wordval	dacp,%n
c14c c14c d de59
c14c c14c u 02 02
c14c c14c s 	defw	dacp38
c14e c14e s 	endm
c14e c14e s 		n++
c14e c14e s 	endm
c14e c14e s 		wordval	dacp,%n
c14e c14e d e459
c14e c14e u 02 02
c14e c14e s 	defw	dacp39
c150 c150 s 	endm
c150 c150 s 		n++
c150 c150 s 	endm
c150 c150 s 		wordval	dacp,%n
c150 c150 d fa59
c150 c150 u 02 02
c150 c150 s 	defw	dacp40
c152 c152 s 	endm
c152 c152 s 		n++
c152 c152 s 	endm
c152 c152 s 		wordval	dacp,%n
c152 c152 d 005a
c152 c152 u 02 02
c152 c152 s 	defw	dacp41
c154 c154 s 	endm
c154 c154 s 		n++
c154 c154 s 	endm
c154 c154 s 		wordval	dacp,%n
c154 c154 d 165a
c154 c154 u 02 02
c154 c154 s 	defw	dacp42
c156 c156 s 	endm
c156 c156 s 		n++
c156 c156 s 	endm
c156 c156 s 		wordval	dacp,%n
c156 c156 d 1c5a
c156 c156 u 02 02
c156 c156 s 	defw	dacp43
c158 c158 s 	endm
c158 c158 s 		n++
c158 c158 s 	endm
c158 c158 s 		wordval	dacp,%n
c158 c158 d 325a
c158 c158 u 02 02
c158 c158 s 	defw	dacp44
c15a c15a s 	endm
c15a c15a s 		n++
c15a c15a s 	endm
c15a c15a s 		wordval	dacp,%n
c15a c15a d 385a
c15a c15a u 02 02
c15a c15a s 	defw	dacp45
c15c c15c s 	endm
c15c c15c s 		n++
c15c c15c s 	endm
c15c c15c s 		wordval	dacp,%n
c15c c15c d 4e5a
c15c c15c u 02 02
c15c c15c s 	defw	dacp46
c15e c15e s 	endm
c15e c15e s 		n++
c15e c15e s 	endm
c15e c15e s 		wordval	dacp,%n
c15e c15e d 545a
c15e c15e u 02 02
c15e c15e s 	defw	dacp47
c160 c160 s 	endm
c160 c160 s 		n++
c160 c160 s 	endm
c160 c160 s 		wordval	dacp,%n
c160 c160 d 6a5a
c160 c160 u 02 02
c160 c160 s 	defw	dacp48
c162 c162 s 	endm
c162 c162 s 		n++
c162 c162 s 	endm
c162 c162 s 		wordval	dacp,%n
c162 c162 d 705a
c162 c162 u 02 02
c162 c162 s 	defw	dacp49
c164 c164 s 	endm
c164 c164 s 		n++
c164 c164 s 	endm
c164 c164 s 		wordval	dacp,%n
c164 c164 d 865a
c164 c164 u 02 02
c164 c164 s 	defw	dacp50
c166 c166 s 	endm
c166 c166 s 		n++
c166 c166 s 	endm
c166 c166 s 		wordval	dacp,%n
c166 c166 d 8c5a
c166 c166 u 02 02
c166 c166 s 	defw	dacp51
c168 c168 s 	endm
c168 c168 s 		n++
c168 c168 s 	endm
c168 c168 s 		wordval	dacp,%n
c168 c168 d a25a
c168 c168 u 02 02
c168 c168 s 	defw	dacp52
c16a c16a s 	endm
c16a c16a s 		n++
c16a c16a s 	endm
c16a c16a s 		wordval	dacp,%n
c16a c16a d a85a
c16a c16a u 02 02
c16a c16a s 	defw	dacp53
c16c c16c s 	endm
c16c c16c s 		n++
c16c c16c s 	endm
c16c c16c s 		wordval	dacp,%n
c16c c16c d be5a
c16c c16c u 02 02
c16c c16c s 	defw	dacp54
c16e c16e s 	endm
c16e c16e s 		n++
c16e c16e s 	endm
c16e c16e s 		wordval	dacp,%n
c16e c16e d c45a
c16e c16e u 02 02
c16e c16e s 	defw	dacp55
c170 c170 s 	endm
c170 c170 s 		n++
c170 c170 s 	endm
c170 c170 s 		wordval	dacp,%n
c170 c170 d da5a
c170 c170 u 02 02
c170 c170 s 	defw	dacp56
c172 c172 s 	endm
c172 c172 s 		n++
c172 c172 s 	endm
c172 c172 s 		wordval	dacp,%n
c172 c172 d e05a
c172 c172 u 02 02
c172 c172 s 	defw	dacp57
c174 c174 s 	endm
c174 c174 s 		n++
c174 c174 s 	endm
c174 c174 s 		wordval	dacp,%n
c174 c174 d f65a
c174 c174 u 02 02
c174 c174 s 	defw	dacp58
c176 c176 s 	endm
c176 c176 s 		n++
c176 c176 s 	endm
c176 c176 s 		wordval	dacp,%n
c176 c176 d fc5a
c176 c176 u 02 02
c176 c176 s 	defw	dacp59
c178 c178 s 	endm
c178 c178 s 		n++
c178 c178 s 	endm
c178 c178 s 		wordval	dacp,%n
c178 c178 d 125b
c178 c178 u 02 02
c178 c178 s 	defw	dacp60
c17a c17a s 	endm
c17a c17a s 		n++
c17a c17a s 	endm
c17a c17a s 		wordval	dacp,%n
c17a c17a d 185b
c17a c17a u 02 02
c17a c17a s 	defw	dacp61
c17c c17c s 	endm
c17c c17c s 		n++
c17c c17c s 	endm
c17c c17c s 		wordval	dacp,%n
c17c c17c d 2e5b
c17c c17c u 02 02
c17c c17c s 	defw	dacp62
c17e c17e s 	endm
c17e c17e s 		n++
c17e c17e s 	endm
c17e c17e s 		wordval	dacp,%n
c17e c17e d 345b
c17e c17e u 02 02
c17e c17e s 	defw	dacp63
c180 c180 s 	endm
c180 c180 s 		n++
c180 c180 s 	endm
c180 c180 s 		wordval	dacp,%n
c180 c180 d 4a5b
c180 c180 u 02 02
c180 c180 s 	defw	dacp64
c182 c182 s 	endm
c182 c182 s 		n++
c182 c182 s 	endm
c182 c182 s 		wordval	dacp,%n
c182 c182 d 505b
c182 c182 u 02 02
c182 c182 s 	defw	dacp65
c184 c184 s 	endm
c184 c184 s 		n++
c184 c184 s 	endm
c184 c184 s 		wordval	dacp,%n
c184 c184 d 665b
c184 c184 u 02 02
c184 c184 s 	defw	dacp66
c186 c186 s 	endm
c186 c186 s 		n++
c186 c186 s 	endm
c186 c186 s 		wordval	dacp,%n
c186 c186 d 6c5b
c186 c186 u 02 02
c186 c186 s 	defw	dacp67
c188 c188 s 	endm
c188 c188 s 		n++
c188 c188 s 	endm
c188 c188 s 		wordval	dacp,%n
c188 c188 d 825b
c188 c188 u 02 02
c188 c188 s 	defw	dacp68
c18a c18a s 	endm
c18a c18a s 		n++
c18a c18a s 	endm
c18a c18a s 		wordval	dacp,%n
c18a c18a d 885b
c18a c18a u 02 02
c18a c18a s 	defw	dacp69
c18c c18c s 	endm
c18c c18c s 		n++
c18c c18c s 	endm
c18c c18c s 		wordval	dacp,%n
c18c c18c d 9e5b
c18c c18c u 02 02
c18c c18c s 	defw	dacp70
c18e c18e s 	endm
c18e c18e s 		n++
c18e c18e s 	endm
c18e c18e s 		wordval	dacp,%n
c18e c18e d a45b
c18e c18e u 02 02
c18e c18e s 	defw	dacp71
c190 c190 s 	endm
c190 c190 s 		n++
c190 c190 s 	endm
c190 c190 s 		wordval	dacp,%n
c190 c190 d ba5b
c190 c190 u 02 02
c190 c190 s 	defw	dacp72
c192 c192 s 	endm
c192 c192 s 		n++
c192 c192 s 	endm
c192 c192 s 		wordval	dacp,%n
c192 c192 d c05b
c192 c192 u 02 02
c192 c192 s 	defw	dacp73
c194 c194 s 	endm
c194 c194 s 		n++
c194 c194 s 	endm
c194 c194 s 		wordval	dacp,%n
c194 c194 d d65b
c194 c194 u 02 02
c194 c194 s 	defw	dacp74
c196 c196 s 	endm
c196 c196 s 		n++
c196 c196 s 	endm
c196 c196 s 		wordval	dacp,%n
c196 c196 d dc5b
c196 c196 u 02 02
c196 c196 s 	defw	dacp75
c198 c198 s 	endm
c198 c198 s 		n++
c198 c198 s 	endm
c198 c198 s 		wordval	dacp,%n
c198 c198 d f25b
c198 c198 u 02 02
c198 c198 s 	defw	dacp76
c19a c19a s 	endm
c19a c19a s 		n++
c19a c19a s 	endm
c19a c19a s 		wordval	dacp,%n
c19a c19a d f85b
c19a c19a u 02 02
c19a c19a s 	defw	dacp77
c19c c19c s 	endm
c19c c19c s 		n++
c19c c19c s 	endm
c19c c19c s 		wordval	dacp,%n
c19c c19c d 0e5c
c19c c19c u 02 02
c19c c19c s 	defw	dacp78
c19e c19e s 	endm
c19e c19e s 		n++
c19e c19e s 	endm
c19e c19e s 		wordval	dacp,%n
c19e c19e d 145c
c19e c19e u 02 02
c19e c19e s 	defw	dacp79
c1a0 c1a0 s 	endm
c1a0 c1a0 s 		n++
c1a0 c1a0 s 	endm
c1a0 c1a0 s 		wordval	dacp,%n
c1a0 c1a0 d 2a5c
c1a0 c1a0 u 02 02
c1a0 c1a0 s 	defw	dacp80
c1a2 c1a2 s 	endm
c1a2 c1a2 s 		n++
c1a2 c1a2 s 	endm
c1a2 c1a2 s 		wordval	dacp,%n
c1a2 c1a2 d 305c
c1a2 c1a2 u 02 02
c1a2 c1a2 s 	defw	dacp81
c1a4 c1a4 s 	endm
c1a4 c1a4 s 		n++
c1a4 c1a4 s 	endm
c1a4 c1a4 s 		wordval	dacp,%n
c1a4 c1a4 d 465c
c1a4 c1a4 u 02 02
c1a4 c1a4 s 	defw	dacp82
c1a6 c1a6 s 	endm
c1a6 c1a6 s 		n++
c1a6 c1a6 s 	endm
c1a6 c1a6 s 		wordval	dacp,%n
c1a6 c1a6 d 4c5c
c1a6 c1a6 u 02 02
c1a6 c1a6 s 	defw	dacp83
c1a8 c1a8 s 	endm
c1a8 c1a8 s 		n++
c1a8 c1a8 s 	endm
c1a8 c1a8 s 		wordval	dacp,%n
c1a8 c1a8 d 695c
c1a8 c1a8 u 02 02
c1a8 c1a8 s 	defw	dacp84
c1aa c1aa s 	endm
c1aa c1aa s 		n++
c1aa c1aa s 	endm
c1aa c1aa s 		wordval	dacp,%n
c1aa c1aa d 7e5c
c1aa c1aa u 02 02
c1aa c1aa s 	defw	dacp85
c1ac c1ac s 	endm
c1ac c1ac s 		n++
c1ac c1ac s 	endm
c1ac c1ac s 		wordval	dacp,%n
c1ac c1ac d 845c
c1ac c1ac u 02 02
c1ac c1ac s 	defw	dacp86
c1ae c1ae s 	endm
c1ae c1ae s 		n++
c1ae c1ae s 	endm
c1ae c1ae s 		wordval	dacp,%n
c1ae c1ae d 965c
c1ae c1ae u 02 02
c1ae c1ae s 	defw	dacp87
c1b0 c1b0 s 	endm
c1b0 c1b0 s 		n++
c1b0 c1b0 s 	endm
c1b0 c1b0 s 		wordval	dacp,%n
c1b0 c1b0 d 9c5c
c1b0 c1b0 u 02 02
c1b0 c1b0 s 	defw	dacp88
c1b2 c1b2 s 	endm
c1b2 c1b2 s 		n++
c1b2 c1b2 s 	endm
c1b2 c1b2 s 		wordval	dacp,%n
c1b2 c1b2 d b05c
c1b2 c1b2 u 02 02
c1b2 c1b2 s 	defw	dacp89
c1b4 c1b4 s 	endm
c1b4 c1b4 s 		n++
c1b4 c1b4 s 	endm
c1b4 c1b4 s 		wordval	dacp,%n
c1b4 c1b4 d b65c
c1b4 c1b4 u 02 02
c1b4 c1b4 s 	defw	dacp90
c1b6 c1b6 s 	endm
c1b6 c1b6 s 		n++
c1b6 c1b6 s 	endm
c1b6 c1b6 s 		wordval	dacp,%n
c1b6 c1b6 d d05c
c1b6 c1b6 u 02 02
c1b6 c1b6 s 	defw	dacp91
c1b8 c1b8 s 	endm
c1b8 c1b8 s 		n++
c1b8 c1b8 s 	endm
c1b8 c1b8 s 		wordval	dacp,%n
c1b8 c1b8 d ed5c
c1b8 c1b8 u 02 02
c1b8 c1b8 s 	defw	dacp92
c1ba c1ba s 	endm
c1ba c1ba s 		n++
c1ba c1ba s 	endm
c1ba c1ba s 		wordval	dacp,%n
c1ba c1ba d 025d
c1ba c1ba u 02 02
c1ba c1ba s 	defw	dacp93
c1bc c1bc s 	endm
c1bc c1bc s 		n++
c1bc c1bc s 	endm
c1bc c1bc s 		wordval	dacp,%n
c1bc c1bc d 085d
c1bc c1bc u 02 02
c1bc c1bc s 	defw	dacp94
c1be c1be s 	endm
c1be c1be s 		n++
c1be c1be s 	endm
c1be c1be s 		wordval	dacp,%n
c1be c1be d 1b5d
c1be c1be u 02 02
c1be c1be s 	defw	dacp95
c1c0 c1c0 s 	endm
c1c0 c1c0 s 		n++
c1c0 c1c0 s 	endm
c1c0 c1c0 s 		wordval	dacp,%n
c1c0 c1c0 d 215d
c1c0 c1c0 u 02 02
c1c0 c1c0 s 	defw	dacp96
c1c2 c1c2 s 	endm
c1c2 c1c2 s 		n++
c1c2 c1c2 s 	endm
c1c2 c1c2 s 		wordval	dacp,%n
c1c2 c1c2 d 325d
c1c2 c1c2 u 02 02
c1c2 c1c2 s 	defw	dacp97
c1c4 c1c4 s 	endm
c1c4 c1c4 s 		n++
c1c4 c1c4 s 	endm
c1c4 c1c4 s 		wordval	dacp,%n
c1c4 c1c4 d 385d
c1c4 c1c4 u 02 02
c1c4 c1c4 s 	defw	dacp98
c1c6 c1c6 s 	endm
c1c6 c1c6 s 		n++
c1c6 c1c6 s 	endm
c1c6 c1c6 s 		wordval	dacp,%n
c1c6 c1c6 d 4c5d
c1c6 c1c6 u 02 02
c1c6 c1c6 s 	defw	dacp99
c1c8 c1c8 s 	endm
c1c8 c1c8 s 		n++
c1c8 c1c8 s 	endm
c1c8 c1c8 s 		wordval	dacp,%n
c1c8 c1c8 d 525d
c1c8 c1c8 u 02 02
c1c8 c1c8 s 	defw	dacp100
c1ca c1ca s 	endm
c1ca c1ca s 		n++
c1ca c1ca s 	endm
c1ca c1ca s 		wordval	dacp,%n
c1ca c1ca d 655d
c1ca c1ca u 02 02
c1ca c1ca s 	defw	dacp101
c1cc c1cc s 	endm
c1cc c1cc s 		n++
c1cc c1cc s 	endm
c1cc c1cc s 		wordval	dacp,%n
c1cc c1cc d 7f5d
c1cc c1cc u 02 02
c1cc c1cc s 	defw	dacp102
c1ce c1ce s 	endm
c1ce c1ce s 		n++
c1ce c1ce s 	endm
c1ce c1ce s 		wordval	dacp,%n
c1ce c1ce d 855d
c1ce c1ce u 02 02
c1ce c1ce s 	defw	dacp103
c1d0 c1d0 s 	endm
c1d0 c1d0 s 		n++
c1d0 c1d0 s 	endm
c1d0 c1d0 s 		wordval	dacp,%n
c1d0 c1d0 d 975d
c1d0 c1d0 u 02 02
c1d0 c1d0 s 	defw	dacp104
c1d2 c1d2 s 	endm
c1d2 c1d2 s 		n++
c1d2 c1d2 s 	endm
c1d2 c1d2 s 		wordval	dacp,%n
c1d2 c1d2 d 9d5d
c1d2 c1d2 u 02 02
c1d2 c1d2 s 	defw	dacp105
c1d4 c1d4 s 	endm
c1d4 c1d4 s 		n++
c1d4 c1d4 s 	endm
c1d4 c1d4 s 		wordval	dacp,%n
c1d4 c1d4 d b15d
c1d4 c1d4 u 02 02
c1d4 c1d4 s 	defw	dacp106
c1d6 c1d6 s 	endm
c1d6 c1d6 s 		n++
c1d6 c1d6 s 	endm
c1d6 c1d6 s 		wordval	dacp,%n
c1d6 c1d6 d b75d
c1d6 c1d6 u 02 02
c1d6 c1d6 s 	defw	dacp107
c1d8 c1d8 s 	endm
c1d8 c1d8 s 		n++
c1d8 c1d8 s 	endm
c1d8 c1d8 s 		wordval	dacp,%n
c1d8 c1d8 d ca5d
c1d8 c1d8 u 02 02
c1d8 c1d8 s 	defw	dacp108
c1da c1da s 	endm
c1da c1da s 		n++
c1da c1da s 	endm
c1da c1da s 		wordval	dacp,%n
c1da c1da d e35d
c1da c1da u 02 02
c1da c1da s 	defw	dacp109
c1dc c1dc s 	endm
c1dc c1dc s 		n++
c1dc c1dc s 	endm
c1dc c1dc s 		wordval	dacp,%n
c1dc c1dc d 015e
c1dc c1dc u 02 02
c1dc c1dc s 	defw	dacp110
c1de c1de s 	endm
c1de c1de s 		n++
c1de c1de s 	endm
c1de c1de s 		wordval	dacp,%n
c1de c1de d 075e
c1de c1de u 02 02
c1de c1de s 	defw	dacp111
c1e0 c1e0 s 	endm
c1e0 c1e0 s 		n++
c1e0 c1e0 s 	endm
c1e0 c1e0 s 		wordval	dacp,%n
c1e0 c1e0 d 1a5e
c1e0 c1e0 u 02 02
c1e0 c1e0 s 	defw	dacp112
c1e2 c1e2 s 	endm
c1e2 c1e2 s 		n++
c1e2 c1e2 s 	endm
c1e2 c1e2 s 		wordval	dacp,%n
c1e2 c1e2 d 205e
c1e2 c1e2 u 02 02
c1e2 c1e2 s 	defw	dacp113
c1e4 c1e4 s 	endm
c1e4 c1e4 s 		n++
c1e4 c1e4 s 	endm
c1e4 c1e4 s 		wordval	dacp,%n
c1e4 c1e4 d 315e
c1e4 c1e4 u 02 02
c1e4 c1e4 s 	defw	dacp114
c1e6 c1e6 s 	endm
c1e6 c1e6 s 		n++
c1e6 c1e6 s 	endm
c1e6 c1e6 s 		wordval	dacp,%n
c1e6 c1e6 d 375e
c1e6 c1e6 u 02 02
c1e6 c1e6 s 	defw	dacp115
c1e8 c1e8 s 	endm
c1e8 c1e8 s 		n++
c1e8 c1e8 s 	endm
c1e8 c1e8 s 		wordval	dacp,%n
c1e8 c1e8 d 4b5e
c1e8 c1e8 u 02 02
c1e8 c1e8 s 	defw	dacp116
c1ea c1ea s 	endm
c1ea c1ea s 		n++
c1ea c1ea s 	endm
c1ea c1ea s 		wordval	dacp,%n
c1ea c1ea d 515e
c1ea c1ea u 02 02
c1ea c1ea s 	defw	dacp117
c1ec c1ec s 	endm
c1ec c1ec s 		n++
c1ec c1ec s 	endm
c1ec c1ec s 		wordval	dacp,%n
c1ec c1ec d 645e
c1ec c1ec u 02 02
c1ec c1ec s 	defw	dacp118
c1ee c1ee s 	endm
c1ee c1ee s 		n++
c1ee c1ee s 	endm
c1ee c1ee s 		wordval	dacp,%n
c1ee c1ee d 6a5e
c1ee c1ee u 02 02
c1ee c1ee s 	defw	dacp119
c1f0 c1f0 s 	endm
c1f0 c1f0 s 		n++
c1f0 c1f0 s 	endm
c1f0 c1f0 s 		wordval	dacp,%n
c1f0 c1f0 d 7f5e
c1f0 c1f0 u 02 02
c1f0 c1f0 s 	defw	dacp120
c1f2 c1f2 s 	endm
c1f2 c1f2 s 		n++
c1f2 c1f2 s 	endm
c1f2 c1f2 s 		wordval	dacp,%n
c1f2 c1f2 d 855e
c1f2 c1f2 u 02 02
c1f2 c1f2 s 	defw	dacp121
c1f4 c1f4 s 	endm
c1f4 c1f4 s 		n++
c1f4 c1f4 s 	endm
c1f4 c1f4 s 		wordval	dacp,%n
c1f4 c1f4 d 975e
c1f4 c1f4 u 02 02
c1f4 c1f4 s 	defw	dacp122
c1f6 c1f6 s 	endm
c1f6 c1f6 s 		n++
c1f6 c1f6 s 	endm
c1f6 c1f6 s 		wordval	dacp,%n
c1f6 c1f6 d 9d5e
c1f6 c1f6 u 02 02
c1f6 c1f6 s 	defw	dacp123
c1f8 c1f8 s 	endm
c1f8 c1f8 s 		n++
c1f8 c1f8 s 	endm
c1f8 c1f8 s 		wordval	dacp,%n
c1f8 c1f8 d b05e
c1f8 c1f8 u 02 02
c1f8 c1f8 s 	defw	dacp124
c1fa c1fa s 	endm
c1fa c1fa s 		n++
c1fa c1fa s 	endm
c1fa c1fa s 		wordval	dacp,%n
c1fa c1fa d b65e
c1fa c1fa u 02 02
c1fa c1fa s 	defw	dacp125
c1fc c1fc s 	endm
c1fc c1fc s 		n++
c1fc c1fc s 	endm
c1fc c1fc s 		wordval	dacp,%n
c1fc c1fc d cb5e
c1fc c1fc u 02 02
c1fc c1fc s 	defw	dacp126
c1fe c1fe s 	endm
c1fe c1fe s 		n++
c1fe c1fe s 	endm
c1fe c1fe s 		wordval	dacp,%n
c1fe c1fe d d15e
c1fe c1fe u 02 02
c1fe c1fe s 	defw	dacp127
c200 c200 s 	endm
c200 c200 s 		n++
c200 c200 s 	endm
c200 c200 s 		wordval	dacp,%n
c200 c200 d e35e
c200 c200 u 02 02
c200 c200 s 	defw	dacp128
c202 c202 s 	endm
c202 c202 s 		n++
c202 c202 s 	endm
c202 c202 s 		wordval	dacp,%n
c202 c202 d e95e
c202 c202 u 02 02
c202 c202 s 	defw	dacp129
c204 c204 s 	endm
c204 c204 s 		n++
c204 c204 s 	endm
c204 c204 s 		wordval	dacp,%n
c204 c204 d fa5e
c204 c204 u 02 02
c204 c204 s 	defw	dacp130
c206 c206 s 	endm
c206 c206 s 		n++
c206 c206 s 	endm
c206 c206 s 		wordval	dacp,%n
c206 c206 d 005f
c206 c206 u 02 02
c206 c206 s 	defw	dacp131
c208 c208 s 	endm
c208 c208 s 		n++
c208 c208 s 	endm
c208 c208 s 		wordval	dacp,%n
c208 c208 d 155f
c208 c208 u 02 02
c208 c208 s 	defw	dacp132
c20a c20a s 	endm
c20a c20a s 		n++
c20a c20a s 	endm
c20a c20a s 		wordval	dacp,%n
c20a c20a d 1b5f
c20a c20a u 02 02
c20a c20a s 	defw	dacp133
c20c c20c s 	endm
c20c c20c s 		n++
c20c c20c s 	endm
c20c c20c s 		wordval	dacp,%n
c20c c20c d 305f
c20c c20c u 02 02
c20c c20c s 	defw	dacp134
c20e c20e s 	endm
c20e c20e s 		n++
c20e c20e s 	endm
c20e c20e s 		wordval	dacp,%n
c20e c20e d 365f
c20e c20e u 02 02
c20e c20e s 	defw	dacp135
c210 c210 s 	endm
c210 c210 s 		n++
c210 c210 s 	endm
c210 c210 s 		wordval	dacp,%n
c210 c210 d 475f
c210 c210 u 02 02
c210 c210 s 	defw	dacp136
c212 c212 s 	endm
c212 c212 s 		n++
c212 c212 s 	endm
c212 c212 s 		wordval	dacp,%n
c212 c212 d 4d5f
c212 c212 u 02 02
c212 c212 s 	defw	dacp137
c214 c214 s 	endm
c214 c214 s 		n++
c214 c214 s 	endm
c214 c214 s 		wordval	dacp,%n
c214 c214 d 5f5f
c214 c214 u 02 02
c214 c214 s 	defw	dacp138
c216 c216 s 	endm
c216 c216 s 		n++
c216 c216 s 	endm
c216 c216 s 		wordval	dacp,%n
c216 c216 d 655f
c216 c216 u 02 02
c216 c216 s 	defw	dacp139
c218 c218 s 	endm
c218 c218 s 		n++
c218 c218 s 	endm
c218 c218 s 		wordval	dacp,%n
c218 c218 d 7a5f
c218 c218 u 02 02
c218 c218 s 	defw	dacp140
c21a c21a s 	endm
c21a c21a s 		n++
c21a c21a s 	endm
c21a c21a s 		wordval	dacp,%n
c21a c21a d 805f
c21a c21a u 02 02
c21a c21a s 	defw	dacp141
c21c c21c s 	endm
c21c c21c s 		n++
c21c c21c s 	endm
c21c c21c s 		wordval	dacp,%n
c21c c21c d 925f
c21c c21c u 02 02
c21c c21c s 	defw	dacp142
c21e c21e s 	endm
c21e c21e s 		n++
c21e c21e s 	endm
c21e c21e s 		wordval	dacp,%n
c21e c21e d 985f
c21e c21e u 02 02
c21e c21e s 	defw	dacp143
c220 c220 s 	endm
c220 c220 s 		n++
c220 c220 s 	endm
c220 c220 s 		wordval	dacp,%n
c220 c220 d ab5f
c220 c220 u 02 02
c220 c220 s 	defw	dacp144
c222 c222 s 	endm
c222 c222 s 		n++
c222 c222 s 	endm
c222 c222 s 		wordval	dacp,%n
c222 c222 d b15f
c222 c222 u 02 02
c222 c222 s 	defw	dacp145
c224 c224 s 	endm
c224 c224 s 		n++
c224 c224 s 	endm
c224 c224 s 		wordval	dacp,%n
c224 c224 d c65f
c224 c224 u 02 02
c224 c224 s 	defw	dacp146
c226 c226 s 	endm
c226 c226 s 		n++
c226 c226 s 	endm
c226 c226 s 		wordval	dacp,%n
c226 c226 d cc5f
c226 c226 u 02 02
c226 c226 s 	defw	dacp147
c228 c228 s 	endm
c228 c228 s 		n++
c228 c228 s 	endm
c228 c228 s 		wordval	dacp,%n
c228 c228 d de5f
c228 c228 u 02 02
c228 c228 s 	defw	dacp148
c22a c22a s 	endm
c22a c22a s 		n++
c22a c22a s 	endm
c22a c22a s 		wordval	dacp,%n
c22a c22a d e45f
c22a c22a u 02 02
c22a c22a s 	defw	dacp149
c22c c22c s 	endm
c22c c22c s 		n++
c22c c22c s 	endm
c22c c22c s 		wordval	dacp,%n
c22c c22c d f55f
c22c c22c u 02 02
c22c c22c s 	defw	dacp150
c22e c22e s 	endm
c22e c22e s 		n++
c22e c22e s 	endm
c22e c22e s 		wordval	dacp,%n
c22e c22e d fb5f
c22e c22e u 02 02
c22e c22e s 	defw	dacp151
c230 c230 s 	endm
c230 c230 s 		n++
c230 c230 s 	endm
c230 c230 s 		wordval	dacp,%n
c230 c230 d 1060
c230 c230 u 02 02
c230 c230 s 	defw	dacp152
c232 c232 s 	endm
c232 c232 s 		n++
c232 c232 s 	endm
c232 c232 s 		wordval	dacp,%n
c232 c232 d 1660
c232 c232 u 02 02
c232 c232 s 	defw	dacp153
c234 c234 s 	endm
c234 c234 s 		n++
c234 c234 s 	endm
c234 c234 s 		wordval	dacp,%n
c234 c234 d 2b60
c234 c234 u 02 02
c234 c234 s 	defw	dacp154
c236 c236 s 	endm
c236 c236 s 		n++
c236 c236 s 	endm
c236 c236 s 		wordval	dacp,%n
c236 c236 d 3160
c236 c236 u 02 02
c236 c236 s 	defw	dacp155
c238 c238 s 	endm
c238 c238 s 		n++
c238 c238 s 	endm
c238 c238 s 		wordval	dacp,%n
c238 c238 d 4260
c238 c238 u 02 02
c238 c238 s 	defw	dacp156
c23a c23a s 	endm
c23a c23a s 		n++
c23a c23a s 	endm
c23a c23a s 		wordval	dacp,%n
c23a c23a d 4860
c23a c23a u 02 02
c23a c23a s 	defw	dacp157
c23c c23c s 	endm
c23c c23c s 		n++
c23c c23c s 	endm
c23c c23c s 		wordval	dacp,%n
c23c c23c d 5a60
c23c c23c u 02 02
c23c c23c s 	defw	dacp158
c23e c23e s 	endm
c23e c23e s 		n++
c23e c23e s 	endm
c23e c23e s 		wordval	dacp,%n
c23e c23e d 6060
c23e c23e u 02 02
c23e c23e s 	defw	dacp159
c240 c240 s 	endm
c240 c240 s 		n++
c240 c240 s 	endm
c240 c240 s 		wordval	dacp,%n
c240 c240 d 6f60
c240 c240 u 02 02
c240 c240 s 	defw	dacp160
c242 c242 s 	endm
c242 c242 s 		n++
c242 c242 s 	endm
c242 c242 s 		wordval	dacp,%n
c242 c242 d 7560
c242 c242 u 02 02
c242 c242 s 	defw	dacp161
c244 c244 s 	endm
c244 c244 s 		n++
c244 c244 s 	endm
c244 c244 s 		wordval	dacp,%n
c244 c244 d 8560
c244 c244 u 02 02
c244 c244 s 	defw	dacp162
c246 c246 s 	endm
c246 c246 s 		n++
c246 c246 s 	endm
c246 c246 s 		wordval	dacp,%n
c246 c246 d 8b60
c246 c246 u 02 02
c246 c246 s 	defw	dacp163
c248 c248 s 	endm
c248 c248 s 		n++
c248 c248 s 	endm
c248 c248 s 		wordval	dacp,%n
c248 c248 d 9f60
c248 c248 u 02 02
c248 c248 s 	defw	dacp164
c24a c24a s 	endm
c24a c24a s 		n++
c24a c24a s 	endm
c24a c24a s 		wordval	dacp,%n
c24a c24a d a560
c24a c24a u 02 02
c24a c24a s 	defw	dacp165
c24c c24c s 	endm
c24c c24c s 		n++
c24c c24c s 	endm
c24c c24c s 		wordval	dacp,%n
c24c c24c d b760
c24c c24c u 02 02
c24c c24c s 	defw	dacp166
c24e c24e s 	endm
c24e c24e s 		n++
c24e c24e s 	endm
c24e c24e s 		wordval	dacp,%n
c24e c24e d bd60
c24e c24e u 02 02
c24e c24e s 	defw	dacp167
c250 c250 s 	endm
c250 c250 s 		n++
c250 c250 s 	endm
c250 c250 s 		wordval	dacp,%n
c250 c250 d d060
c250 c250 u 02 02
c250 c250 s 	defw	dacp168
c252 c252 s 	endm
c252 c252 s 		n++
c252 c252 s 	endm
c252 c252 s 		wordval	dacp,%n
c252 c252 d d660
c252 c252 u 02 02
c252 c252 s 	defw	dacp169
c254 c254 s 	endm
c254 c254 s 		n++
c254 c254 s 	endm
c254 c254 s 		wordval	dacp,%n
c254 c254 d ea60
c254 c254 u 02 02
c254 c254 s 	defw	dacp170
c256 c256 s 	endm
c256 c256 s 		n++
c256 c256 s 	endm
c256 c256 s 		wordval	dacp,%n
c256 c256 d f060
c256 c256 u 02 02
c256 c256 s 	defw	dacp171
c258 c258 s 	endm
c258 c258 s 		n++
c258 c258 s 	endm
c258 c258 s 		wordval	dacp,%n
c258 c258 d 0361
c258 c258 u 02 02
c258 c258 s 	defw	dacp172
c25a c25a s 	endm
c25a c25a s 		n++
c25a c25a s 	endm
c25a c25a s 		wordval	dacp,%n
c25a c25a d 0961
c25a c25a u 02 02
c25a c25a s 	defw	dacp173
c25c c25c s 	endm
c25c c25c s 		n++
c25c c25c s 	endm
c25c c25c s 		wordval	dacp,%n
c25c c25c d 1d61
c25c c25c u 02 02
c25c c25c s 	defw	dacp174
c25e c25e s 	endm
c25e c25e s 		n++
c25e c25e s 	endm
c25e c25e s 		wordval	dacp,%n
c25e c25e d 2361
c25e c25e u 02 02
c25e c25e s 	defw	dacp175
c260 c260 s 	endm
c260 c260 s 		n++
c260 c260 s 	endm
c260 c260 s 		wordval	dacp,%n
c260 c260 d 3861
c260 c260 u 02 02
c260 c260 s 	defw	dacp176
c262 c262 s 	endm
c262 c262 s 		n++
c262 c262 s 	endm
c262 c262 s 		wordval	dacp,%n
c262 c262 d 3e61
c262 c262 u 02 02
c262 c262 s 	defw	dacp177
c264 c264 s 	endm
c264 c264 s 		n++
c264 c264 s 	endm
c264 c264 s 		wordval	dacp,%n
c264 c264 d 5361
c264 c264 u 02 02
c264 c264 s 	defw	dacp178
c266 c266 s 	endm
c266 c266 s 		n++
c266 c266 s 	endm
c266 c266 s 		wordval	dacp,%n
c266 c266 d 5961
c266 c266 u 02 02
c266 c266 s 	defw	dacp179
c268 c268 s 	endm
c268 c268 s 		n++
c268 c268 s 	endm
c268 c268 s 		wordval	dacp,%n
c268 c268 d 6d61
c268 c268 u 02 02
c268 c268 s 	defw	dacp180
c26a c26a s 	endm
c26a c26a s 		n++
c26a c26a s 	endm
c26a c26a s 		wordval	dacp,%n
c26a c26a d 7361
c26a c26a u 02 02
c26a c26a s 	defw	dacp181
c26c c26c s 	endm
c26c c26c s 		n++
c26c c26c s 	endm
c26c c26c s 		wordval	dacp,%n
c26c c26c d 8561
c26c c26c u 02 02
c26c c26c s 	defw	dacp182
c26e c26e s 	endm
c26e c26e s 		n++
c26e c26e s 	endm
c26e c26e s 		wordval	dacp,%n
c26e c26e d 8b61
c26e c26e u 02 02
c26e c26e s 	defw	dacp183
c270 c270 s 	endm
c270 c270 s 		n++
c270 c270 s 	endm
c270 c270 s 		wordval	dacp,%n
c270 c270 d 9c61
c270 c270 u 02 02
c270 c270 s 	defw	dacp184
c272 c272 s 	endm
c272 c272 s 		n++
c272 c272 s 	endm
c272 c272 s 		wordval	dacp,%n
c272 c272 d a261
c272 c272 u 02 02
c272 c272 s 	defw	dacp185
c274 c274 s 	endm
c274 c274 s 		n++
c274 c274 s 	endm
c274 c274 s 		wordval	dacp,%n
c274 c274 d b461
c274 c274 u 02 02
c274 c274 s 	defw	dacp186
c276 c276 s 	endm
c276 c276 s 		n++
c276 c276 s 	endm
c276 c276 s 		wordval	dacp,%n
c276 c276 d ba61
c276 c276 u 02 02
c276 c276 s 	defw	dacp187
c278 c278 s 	endm
c278 c278 s 		n++
c278 c278 s 	endm
c278 c278 s 		wordval	dacp,%n
c278 c278 d c961
c278 c278 u 02 02
c278 c278 s 	defw	dacp188
c27a c27a s 	endm
c27a c27a s 		n++
c27a c27a s 	endm
c27a c27a s 		wordval	dacp,%n
c27a c27a d cf61
c27a c27a u 02 02
c27a c27a s 	defw	dacp189
c27c c27c s 	endm
c27c c27c s 		n++
c27c c27c s 	endm
c27c c27c s 		wordval	dacp,%n
c27c c27c d df61
c27c c27c u 02 02
c27c c27c s 	defw	dacp190
c27e c27e s 	endm
c27e c27e s 		n++
c27e c27e s 	endm
c27e c27e s 		wordval	dacp,%n
c27e c27e d e561
c27e c27e u 02 02
c27e c27e s 	defw	dacp191
c280 c280 s 	endm
c280 c280 s 		n++
c280 c280 s 	endm
c280 c280 s 		wordval	dacp,%n
c280 c280 d f961
c280 c280 u 02 02
c280 c280 s 	defw	dacp192
c282 c282 s 	endm
c282 c282 s 		n++
c282 c282 s 	endm
c282 c282 s 		wordval	dacp,%n
c282 c282 d ff61
c282 c282 u 02 02
c282 c282 s 	defw	dacp193
c284 c284 s 	endm
c284 c284 s 		n++
c284 c284 s 	endm
c284 c284 s 		wordval	dacp,%n
c284 c284 d 1162
c284 c284 u 02 02
c284 c284 s 	defw	dacp194
c286 c286 s 	endm
c286 c286 s 		n++
c286 c286 s 	endm
c286 c286 s 		wordval	dacp,%n
c286 c286 d 1762
c286 c286 u 02 02
c286 c286 s 	defw	dacp195
c288 c288 s 	endm
c288 c288 s 		n++
c288 c288 s 	endm
c288 c288 s 		wordval	dacp,%n
c288 c288 d 2a62
c288 c288 u 02 02
c288 c288 s 	defw	dacp196
c28a c28a s 	endm
c28a c28a s 		n++
c28a c28a s 	endm
c28a c28a s 		wordval	dacp,%n
c28a c28a d 3062
c28a c28a u 02 02
c28a c28a s 	defw	dacp197
c28c c28c s 	endm
c28c c28c s 		n++
c28c c28c s 	endm
c28c c28c s 		wordval	dacp,%n
c28c c28c d 4362
c28c c28c u 02 02
c28c c28c s 	defw	dacp198
c28e c28e s 	endm
c28e c28e s 		n++
c28e c28e s 	endm
c28e c28e s 		wordval	dacp,%n
c28e c28e d 4962
c28e c28e u 02 02
c28e c28e s 	defw	dacp199
c290 c290 s 	endm
c290 c290 s 		n++
c290 c290 s 	endm
c290 c290 s 		wordval	dacp,%n
c290 c290 d 5c62
c290 c290 u 02 02
c290 c290 s 	defw	dacp200
c292 c292 s 	endm
c292 c292 s 		n++
c292 c292 s 	endm
c292 c292 s 		wordval	dacp,%n
c292 c292 d 6262
c292 c292 u 02 02
c292 c292 s 	defw	dacp201
c294 c294 s 	endm
c294 c294 s 		n++
c294 c294 s 	endm
c294 c294 s 		wordval	dacp,%n
c294 c294 d 7662
c294 c294 u 02 02
c294 c294 s 	defw	dacp202
c296 c296 s 	endm
c296 c296 s 		n++
c296 c296 s 	endm
c296 c296 s 		wordval	dacp,%n
c296 c296 d 7c62
c296 c296 u 02 02
c296 c296 s 	defw	dacp203
c298 c298 s 	endm
c298 c298 s 		n++
c298 c298 s 	endm
c298 c298 s 		wordval	dacp,%n
c298 c298 d 9162
c298 c298 u 02 02
c298 c298 s 	defw	dacp204
c29a c29a s 	endm
c29a c29a s 		n++
c29a c29a s 	endm
c29a c29a s 		wordval	dacp,%n
c29a c29a d 9762
c29a c29a u 02 02
c29a c29a s 	defw	dacp205
c29c c29c s 	endm
c29c c29c s 		n++
c29c c29c s 	endm
c29c c29c s 		wordval	dacp,%n
c29c c29c d ac62
c29c c29c u 02 02
c29c c29c s 	defw	dacp206
c29e c29e s 	endm
c29e c29e s 		n++
c29e c29e s 	endm
c29e c29e s 		wordval	dacp,%n
c29e c29e d b262
c29e c29e u 02 02
c29e c29e s 	defw	dacp207
c2a0 c2a0 s 	endm
c2a0 c2a0 s 		n++
c2a0 c2a0 s 	endm
c2a0 c2a0 s 		wordval	dacp,%n
c2a0 c2a0 d c662
c2a0 c2a0 u 02 02
c2a0 c2a0 s 	defw	dacp208
c2a2 c2a2 s 	endm
c2a2 c2a2 s 		n++
c2a2 c2a2 s 	endm
c2a2 c2a2 s 		wordval	dacp,%n
c2a2 c2a2 d cc62
c2a2 c2a2 u 02 02
c2a2 c2a2 s 	defw	dacp209
c2a4 c2a4 s 	endm
c2a4 c2a4 s 		n++
c2a4 c2a4 s 	endm
c2a4 c2a4 s 		wordval	dacp,%n
c2a4 c2a4 d de62
c2a4 c2a4 u 02 02
c2a4 c2a4 s 	defw	dacp210
c2a6 c2a6 s 	endm
c2a6 c2a6 s 		n++
c2a6 c2a6 s 	endm
c2a6 c2a6 s 		wordval	dacp,%n
c2a6 c2a6 d e462
c2a6 c2a6 u 02 02
c2a6 c2a6 s 	defw	dacp211
c2a8 c2a8 s 	endm
c2a8 c2a8 s 		n++
c2a8 c2a8 s 	endm
c2a8 c2a8 s 		wordval	dacp,%n
c2a8 c2a8 d f562
c2a8 c2a8 u 02 02
c2a8 c2a8 s 	defw	dacp212
c2aa c2aa s 	endm
c2aa c2aa s 		n++
c2aa c2aa s 	endm
c2aa c2aa s 		wordval	dacp,%n
c2aa c2aa d fb62
c2aa c2aa u 02 02
c2aa c2aa s 	defw	dacp213
c2ac c2ac s 	endm
c2ac c2ac s 		n++
c2ac c2ac s 	endm
c2ac c2ac s 		wordval	dacp,%n
c2ac c2ac d 0d63
c2ac c2ac u 02 02
c2ac c2ac s 	defw	dacp214
c2ae c2ae s 	endm
c2ae c2ae s 		n++
c2ae c2ae s 	endm
c2ae c2ae s 		wordval	dacp,%n
c2ae c2ae d 1363
c2ae c2ae u 02 02
c2ae c2ae s 	defw	dacp215
c2b0 c2b0 s 	endm
c2b0 c2b0 s 		n++
c2b0 c2b0 s 	endm
c2b0 c2b0 s 		wordval	dacp,%n
c2b0 c2b0 d 2263
c2b0 c2b0 u 02 02
c2b0 c2b0 s 	defw	dacp216
c2b2 c2b2 s 	endm
c2b2 c2b2 s 		n++
c2b2 c2b2 s 	endm
c2b2 c2b2 s 		wordval	dacp,%n
c2b2 c2b2 d 2863
c2b2 c2b2 u 02 02
c2b2 c2b2 s 	defw	dacp217
c2b4 c2b4 s 	endm
c2b4 c2b4 s 		n++
c2b4 c2b4 s 	endm
c2b4 c2b4 s 		wordval	dacp,%n
c2b4 c2b4 d 3863
c2b4 c2b4 u 02 02
c2b4 c2b4 s 	defw	dacp218
c2b6 c2b6 s 	endm
c2b6 c2b6 s 		n++
c2b6 c2b6 s 	endm
c2b6 c2b6 s 		wordval	dacp,%n
c2b6 c2b6 d 3e63
c2b6 c2b6 u 02 02
c2b6 c2b6 s 	defw	dacp219
c2b8 c2b8 s 	endm
c2b8 c2b8 s 		n++
c2b8 c2b8 s 	endm
c2b8 c2b8 s 		wordval	dacp,%n
c2b8 c2b8 d 5263
c2b8 c2b8 u 02 02
c2b8 c2b8 s 	defw	dacp220
c2ba c2ba s 	endm
c2ba c2ba s 		n++
c2ba c2ba s 	endm
c2ba c2ba s 		wordval	dacp,%n
c2ba c2ba d 5863
c2ba c2ba u 02 02
c2ba c2ba s 	defw	dacp221
c2bc c2bc s 	endm
c2bc c2bc s 		n++
c2bc c2bc s 	endm
c2bc c2bc s 		wordval	dacp,%n
c2bc c2bc d 6a63
c2bc c2bc u 02 02
c2bc c2bc s 	defw	dacp222
c2be c2be s 	endm
c2be c2be s 		n++
c2be c2be s 	endm
c2be c2be s 		wordval	dacp,%n
c2be c2be d 7063
c2be c2be u 02 02
c2be c2be s 	defw	dacp223
c2c0 c2c0 s 	endm
c2c0 c2c0 s 		n++
c2c0 c2c0 s 	endm
c2c0 c2c0 s 		wordval	dacp,%n
c2c0 c2c0 d 8363
c2c0 c2c0 u 02 02
c2c0 c2c0 s 	defw	dacp224
c2c2 c2c2 s 	endm
c2c2 c2c2 s 		n++
c2c2 c2c2 s 	endm
c2c2 c2c2 s 		wordval	dacp,%n
c2c2 c2c2 d 8963
c2c2 c2c2 u 02 02
c2c2 c2c2 s 	defw	dacp225
c2c4 c2c4 s 	endm
c2c4 c2c4 s 		n++
c2c4 c2c4 s 	endm
c2c4 c2c4 s 		wordval	dacp,%n
c2c4 c2c4 d 9d63
c2c4 c2c4 u 02 02
c2c4 c2c4 s 	defw	dacp226
c2c6 c2c6 s 	endm
c2c6 c2c6 s 		n++
c2c6 c2c6 s 	endm
c2c6 c2c6 s 		wordval	dacp,%n
c2c6 c2c6 d a363
c2c6 c2c6 u 02 02
c2c6 c2c6 s 	defw	dacp227
c2c8 c2c8 s 	endm
c2c8 c2c8 s 		n++
c2c8 c2c8 s 	endm
c2c8 c2c8 s 		wordval	dacp,%n
c2c8 c2c8 d b663
c2c8 c2c8 u 02 02
c2c8 c2c8 s 	defw	dacp228
c2ca c2ca s 	endm
c2ca c2ca s 		n++
c2ca c2ca s 	endm
c2ca c2ca s 		wordval	dacp,%n
c2ca c2ca d bc63
c2ca c2ca u 02 02
c2ca c2ca s 	defw	dacp229
c2cc c2cc s 	endm
c2cc c2cc s 		n++
c2cc c2cc s 	endm
c2cc c2cc s 		wordval	dacp,%n
c2cc c2cc d d063
c2cc c2cc u 02 02
c2cc c2cc s 	defw	dacp230
c2ce c2ce s 	endm
c2ce c2ce s 		n++
c2ce c2ce s 	endm
c2ce c2ce s 		wordval	dacp,%n
c2ce c2ce d d663
c2ce c2ce u 02 02
c2ce c2ce s 	defw	dacp231
c2d0 c2d0 s 	endm
c2d0 c2d0 s 		n++
c2d0 c2d0 s 	endm
c2d0 c2d0 s 		wordval	dacp,%n
c2d0 c2d0 d eb63
c2d0 c2d0 u 02 02
c2d0 c2d0 s 	defw	dacp232
c2d2 c2d2 s 	endm
c2d2 c2d2 s 		n++
c2d2 c2d2 s 	endm
c2d2 c2d2 s 		wordval	dacp,%n
c2d2 c2d2 d f163
c2d2 c2d2 u 02 02
c2d2 c2d2 s 	defw	dacp233
c2d4 c2d4 s 	endm
c2d4 c2d4 s 		n++
c2d4 c2d4 s 	endm
c2d4 c2d4 s 		wordval	dacp,%n
c2d4 c2d4 d 0664
c2d4 c2d4 u 02 02
c2d4 c2d4 s 	defw	dacp234
c2d6 c2d6 s 	endm
c2d6 c2d6 s 		n++
c2d6 c2d6 s 	endm
c2d6 c2d6 s 		wordval	dacp,%n
c2d6 c2d6 d 0c64
c2d6 c2d6 u 02 02
c2d6 c2d6 s 	defw	dacp235
c2d8 c2d8 s 	endm
c2d8 c2d8 s 		n++
c2d8 c2d8 s 	endm
c2d8 c2d8 s 		wordval	dacp,%n
c2d8 c2d8 d 2064
c2d8 c2d8 u 02 02
c2d8 c2d8 s 	defw	dacp236
c2da c2da s 	endm
c2da c2da s 		n++
c2da c2da s 	endm
c2da c2da s 		wordval	dacp,%n
c2da c2da d 2664
c2da c2da u 02 02
c2da c2da s 	defw	dacp237
c2dc c2dc s 	endm
c2dc c2dc s 		n++
c2dc c2dc s 	endm
c2dc c2dc s 		wordval	dacp,%n
c2dc c2dc d 3864
c2dc c2dc u 02 02
c2dc c2dc s 	defw	dacp238
c2de c2de s 	endm
c2de c2de s 		n++
c2de c2de s 	endm
c2de c2de s 		wordval	dacp,%n
c2de c2de d 3e64
c2de c2de u 02 02
c2de c2de s 	defw	dacp239
c2e0 c2e0 s 	endm
c2e0 c2e0 s 		n++
c2e0 c2e0 s 	endm
c2e0 c2e0 s 		wordval	dacp,%n
c2e0 c2e0 d 4f64
c2e0 c2e0 u 02 02
c2e0 c2e0 s 	defw	dacp240
c2e2 c2e2 s 	endm
c2e2 c2e2 s 		n++
c2e2 c2e2 s 	endm
c2e2 c2e2 s 		wordval	dacp,%n
c2e2 c2e2 d 5564
c2e2 c2e2 u 02 02
c2e2 c2e2 s 	defw	dacp241
c2e4 c2e4 s 	endm
c2e4 c2e4 s 		n++
c2e4 c2e4 s 	endm
c2e4 c2e4 s 		wordval	dacp,%n
c2e4 c2e4 d 6764
c2e4 c2e4 u 02 02
c2e4 c2e4 s 	defw	dacp242
c2e6 c2e6 s 	endm
c2e6 c2e6 s 		n++
c2e6 c2e6 s 	endm
c2e6 c2e6 s 		wordval	dacp,%n
c2e6 c2e6 d 6d64
c2e6 c2e6 u 02 02
c2e6 c2e6 s 	defw	dacp243
c2e8 c2e8 s 	endm
c2e8 c2e8 s 		n++
c2e8 c2e8 s 	endm
c2e8 c2e8 s 		wordval	dacp,%n
c2e8 c2e8 d 7c64
c2e8 c2e8 u 02 02
c2e8 c2e8 s 	defw	dacp244
c2ea c2ea s 	endm
c2ea c2ea s 		n++
c2ea c2ea s 	endm
c2ea c2ea s 		wordval	dacp,%n
c2ea c2ea d 8264
c2ea c2ea u 02 02
c2ea c2ea s 	defw	dacp245
c2ec c2ec s 	endm
c2ec c2ec s 		n++
c2ec c2ec s 	endm
c2ec c2ec s 		wordval	dacp,%n
c2ec c2ec d 9264
c2ec c2ec u 02 02
c2ec c2ec s 	defw	dacp246
c2ee c2ee s 	endm
c2ee c2ee s 		n++
c2ee c2ee s 	endm
c2ee c2ee s 		wordval	dacp,%n
c2ee c2ee d 9864
c2ee c2ee u 02 02
c2ee c2ee s 	defw	dacp247
c2f0 c2f0 s 	endm
c2f0 c2f0 s 		n++
c2f0 c2f0 s 	endm
c2f0 c2f0 s 		wordval	dacp,%n
c2f0 c2f0 d ac64
c2f0 c2f0 u 02 02
c2f0 c2f0 s 	defw	dacp248
c2f2 c2f2 s 	endm
c2f2 c2f2 s 		n++
c2f2 c2f2 s 	endm
c2f2 c2f2 s 		wordval	dacp,%n
c2f2 c2f2 d b264
c2f2 c2f2 u 02 02
c2f2 c2f2 s 	defw	dacp249
c2f4 c2f4 s 	endm
c2f4 c2f4 s 		n++
c2f4 c2f4 s 	endm
c2f4 c2f4 s 		wordval	dacp,%n
c2f4 c2f4 d c464
c2f4 c2f4 u 02 02
c2f4 c2f4 s 	defw	dacp250
c2f6 c2f6 s 	endm
c2f6 c2f6 s 		n++
c2f6 c2f6 s 	endm
c2f6 c2f6 s 		wordval	dacp,%n
c2f6 c2f6 d ca64
c2f6 c2f6 u 02 02
c2f6 c2f6 s 	defw	dacp251
c2f8 c2f8 s 	endm
c2f8 c2f8 s 		n++
c2f8 c2f8 s 	endm
c2f8 c2f8 s 		wordval	dacp,%n
c2f8 c2f8 d dd64
c2f8 c2f8 u 02 02
c2f8 c2f8 s 	defw	dacp252
c2fa c2fa s 	endm
c2fa c2fa s 		n++
c2fa c2fa s 	endm
c2fa c2fa s 		wordval	dacp,%n
c2fa c2fa d e364
c2fa c2fa u 02 02
c2fa c2fa s 	defw	dacp253
c2fc c2fc s 	endm
c2fc c2fc s 		n++
c2fc c2fc s 	endm
c2fc c2fc s 		wordval	dacp,%n
c2fc c2fc d f664
c2fc c2fc u 02 02
c2fc c2fc s 	defw	dacp254
c2fe c2fe s 	endm
c2fe c2fe s 		n++
c2fe c2fe s 	endm
c2fe c2fe s 		wordval	dacp,%n
c2fe c2fe d fc64
c2fe c2fe u 02 02
c2fe c2fe s 	defw	dacp255
c300 c300 s 	endm
c300 c300 s 		n++
c300 c300 s 	endm
c300 c300 s 		wordval	dacp,%n
c300 c300 d 0f65
c300 c300 u 02 02
c300 c300 s 	defw	dacp256
c302 c302 s 	endm
c302 c302 s 		n++
c302 c302 s 	endm
c302 c302 s 		wordval	dacp,%n
c302 c302 d 1565
c302 c302 u 02 02
c302 c302 s 	defw	dacp257
c304 c304 s 	endm
c304 c304 s 		n++
c304 c304 s 	endm
c304 c304 s 		wordval	dacp,%n
c304 c304 d 2965
c304 c304 u 02 02
c304 c304 s 	defw	dacp258
c306 c306 s 	endm
c306 c306 s 		n++
c306 c306 s 	endm
c306 c306 s 		wordval	dacp,%n
c306 c306 d 2f65
c306 c306 u 02 02
c306 c306 s 	defw	dacp259
c308 c308 s 	endm
c308 c308 s 		n++
c308 c308 s 	endm
c308 c308 s 		wordval	dacp,%n
c308 c308 d 4465
c308 c308 u 02 02
c308 c308 s 	defw	dacp260
c30a c30a s 	endm
c30a c30a s 		n++
c30a c30a s 	endm
c30a c30a s 		wordval	dacp,%n
c30a c30a d 4a65
c30a c30a u 02 02
c30a c30a s 	defw	dacp261
c30c c30c s 	endm
c30c c30c s 		n++
c30c c30c s 	endm
c30c c30c s 		wordval	dacp,%n
c30c c30c d 5f65
c30c c30c u 02 02
c30c c30c s 	defw	dacp262
c30e c30e s 	endm
c30e c30e s 		n++
c30e c30e s 	endm
c30e c30e s 		wordval	dacp,%n
c30e c30e d 6565
c30e c30e u 02 02
c30e c30e s 	defw	dacp263
c310 c310 s 	endm
c310 c310 s 		n++
c310 c310 s 	endm
c310 c310 s 		wordval	dacp,%n
c310 c310 d 7965
c310 c310 u 02 02
c310 c310 s 	defw	dacp264
c312 c312 s 	endm
c312 c312 s 		n++
c312 c312 s 	endm
c312 c312 s 		wordval	dacp,%n
c312 c312 d 7f65
c312 c312 u 02 02
c312 c312 s 	defw	dacp265
c314 c314 s 	endm
c314 c314 s 		n++
c314 c314 s 	endm
c314 c314 s 		wordval	dacp,%n
c314 c314 d 9165
c314 c314 u 02 02
c314 c314 s 	defw	dacp266
c316 c316 s 	endm
c316 c316 s 		n++
c316 c316 s 	endm
c316 c316 s 		wordval	dacp,%n
c316 c316 d 9765
c316 c316 u 02 02
c316 c316 s 	defw	dacp267
c318 c318 s 	endm
c318 c318 s 		n++
c318 c318 s 	endm
c318 c318 s 		wordval	dacp,%n
c318 c318 d a865
c318 c318 u 02 02
c318 c318 s 	defw	dacp268
c31a c31a s 	endm
c31a c31a s 		n++
c31a c31a s 	endm
c31a c31a s 		wordval	dacp,%n
c31a c31a d ae65
c31a c31a u 02 02
c31a c31a s 	defw	dacp269
c31c c31c s 	endm
c31c c31c s 		n++
c31c c31c s 	endm
c31c c31c s 
c31c c31c s 	end	start
5601 e
5787 a dpatch
5698 a clr
5639 a not34
384020 v k_left
5659 a charok
c000 a silence
8300 a saw
5625 a .ism4
382008 v k_semi
5c5f a down_l
5d61 a down_r
8200 a triangle
62da a vol_up_up_l
658d a vol_up_up_r
0001 v havevol
5c77 a active_l
5d73 a active_r
00b9 v dac_l
00b5 v dac_r
59da a ret_00
5a12 a ret_01
5a66 a ret_02
5a9e a ret_03
5ad6 a ret_04
5b2a a ret_05
5b62 a ret_06
59be a ret_07
59f6 a ret_08
5a2e a ret_09
5a4a a ret_10
5a82 a ret_11
5aba a ret_12
5af2 a ret_13
5b0e a ret_14
5b46 a ret_15
5b7e a ret_16
5b9a a ret_17
57fe a ret_18
5836 a ret_19
588a a ret_20
58c2 a ret_21
58fa a ret_22
594e a ret_23
5986 a ret_24
57e2 a ret_25
581a a ret_26
5852 a ret_27
586e a ret_28
58a6 a ret_29
58de a ret_30
5916 a ret_31
5932 a ret_32
596a a ret_33
59a2 a ret_34
5bb6 a ret_35
5bd2 a ret_36
5bee a ret_37
5c0a a ret_38
5c26 a ret_39
5c42 a ret_40
6738 a wave_ind_l
6730 a wave_ind_r
65bc a vl_m_l
65be a vl_m_r
5ea6 a wb_l
5fa1 a wb_r
612f a ?h0628
005b v up_ptr
6288 a ?h0714
005c v down_ptr
5697 a spdn
564d a nobar
5645 a splp
5e60 a wave_down_l
5f5b a wave_down_r
63e2 a ?h0800
0400 v banksz
653b a ?h0886
6056 a vol_down_down_l
6309 a vol_down_down_r
65e3 a param_tab
5200 a stack
384080 v k_space
5601 a start
0084 v sampcyc
579b a ppatch
5c6c a wf_l
5d69 a wf_r
57c6 a main
6730 a wave_ind
614f a ?g0628
65d4 a s2lp
381001 v k_0
381002 v k_1
381004 v k_2
381008 v k_3
381010 v k_4
381020 v k_5
381040 v k_6
381080 v k_7
382001 v k_8
382002 v k_9
380101 v k_@
380102 v k_A
380104 v k_B
380108 v k_C
380110 v k_D
380120 v k_E
380140 v k_F
380180 v k_G
380201 v k_H
380202 v k_I
380204 v k_J
380208 v k_K
380210 v k_L
380220 v k_M
380240 v k_N
380280 v k_O
380401 v k_P
380402 v k_Q
380404 v k_R
380408 v k_S
380410 v k_T
380420 v k_U
380440 v k_V
380480 v k_W
380801 v k_X
380802 v k_Y
380804 v k_Z
384010 v k_down
8000 a wavebnk
5200 a splash
62a8 a ?g0714
5676 a star
65c2 a div2
6402 a ?g0800
655b a ?g0886
65d1 a sum2
0029 v step3_size
8100 a square
384001 v k_enter
5cc5 a up_l
5dc6 a up_r
61b0 a vol_up_down_l
6463 a vol_up_down_r
388001 v k_shift
bc00 v vol_1
b800 v vol_2
b400 v vol_3
b000 v vol_4
ac00 v vol_5
a800 v vol_6
a400 v vol_7
a000 v vol_8
9c00 v vol_9
c100 a dac_patch
56aa a vollp
60de a ?f0628
5f2c a wave_up_l
6027 a wave_up_r
382040 v k_dot
56a1 a clrdn
6238 a ?f0714
00ca v jp_z
57bd v down_ptr_addr
005e v up3_ptr
6391 a ?f0800
57b6 a no_patch
0079 v dac90_l
0075 v dac90_r
64eb a ?f0886
382004 v k_colon
0095 v meter_l
00aa v meter_r
382010 v k_comma
0076 v down3_ptr
6114 a ?e0628
382020 v k_dash
382080 v k_slash
6181 a vol_down_up_l
6434 a vol_down_up_r
5627 a .mdone
5648 a barx
384040 v k_right
9800 v vol_10
9400 v vol_11
9000 v vol_12
8c00 v vol_13
8800 v vol_14
8400 v vol_15
8000 v vol_16
626d a ?e0714
65c0 a voltmp
5d17 a old_up_l
5e16 a old_up_r
63c7 a ?e0800
6520 a ?e0886
5e89 a ?d0499
567e a look
57c5 v up_ptr_addr
5ed5 a ?d0519
65c5 a d2lp
5f84 a ?d0564
5fd0 a ?d0584
66d9 a step3_tab
384002 v k_clear
8000 a sine
577e a patch_skip
384004 v k_break
664f a param_00
665b a param_01
666d a param_02
6679 a param_03
6685 a param_04
6697 a param_05
6649 a param_07
6655 a param_08
6661 a param_09
66a3 a param_06
6667 a param_10
6673 a param_11
667f a param_12
668b a param_13
6691 a param_14
669d a param_15
66a9 a param_16
65e9 a param_18
65f5 a param_19
66af a param_17
6607 a param_20
6613 a param_21
661f a param_22
6631 a param_23
663d a param_24
65e3 a param_25
65ef a param_26
65fb a param_27
6601 a param_28
660d a param_29
6619 a param_30
6625 a param_31
662b a param_32
6637 a param_33
6643 a param_34
66b5 a param_35
66bb a param_36
66c1 a param_37
66c7 a param_38
66cd a param_39
66d3 a param_40
384008 v k_up
5f2a a jp_iy
00c2 v jp_nz
